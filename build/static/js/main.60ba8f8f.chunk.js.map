{"version":3,"sources":["Board/LineChart.js","Board/DonutChart.js","Board/VisualizationDialog.js","Board/index.js","App.js","serviceWorker.js","index.js"],"names":["App","map","this","props","data","items","forEach","arrayItem","productiveHour","column_values","find","obj","title","text","chartData","key","push","count","id","palette","dataSource","argumentField","valueField","type","ignoreEmptyPoints","nameField","enabled","React","Component","val","visible","margin","horizontalAlignment","verticalAlignment","customizeTooltip","arg","argument","percent","toFixed","useStyles","makeStyles","theme","appBar","position","marginLeft","spacing","flex","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","classes","useState","open","setOpen","handleClose","Button","variant","color","onClick","startIcon","Dialog","fullScreen","onClose","TransitionComponent","AppBar","className","Toolbar","IconButton","edge","aria-label","Typography","Box","m","display","maxHeight","width","p","LineChart","Divider","orientation","flexItem","DonutChart","Row","time","row","name","email","role","team","productiveHours","Fragment","TableRow","TableCell","size","scope","style","backgroundColor","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","justifyContent","gutterBottom","component","Table","TableHead","align","TableBody","Checkbox","disabled","checked","Board","py","px","my","flexGrow","settings","heading","flexDirection","mr","href","boxShadow","TableContainer","Paper","stickyHeader","background","tableColor","monday","mondaySdk","state","context","boardIds","listen","res","setState","console","log","api","variables","then","boardData","Container","maxWidth","boards","pt","CircularProgress","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.60ba8f8f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart,\r\n  SeriesTemplate,\r\n  CommonSeriesSettings,\r\n  Title,\r\n  Export,\r\n} from \"devextreme-react/chart\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const map = {};\r\n    this.props.data.items.forEach(function (arrayItem) {\r\n      var productiveHour = arrayItem.column_values.find((obj) => {\r\n        return obj.title === \"Most Productive Hours\";\r\n      }).text;\r\n\r\n      map[productiveHour] = map[productiveHour] + 1 || 1;\r\n    });\r\n\r\n    const chartData = [];\r\n    for (const key in map) {\r\n      chartData.push({ productiveHour: key, count: map[key] });\r\n    }\r\n\r\n    return (\r\n      <Chart id=\"bar\" palette=\"Soft\" dataSource={chartData}>\r\n        <CommonSeriesSettings\r\n          argumentField=\"productiveHour\"\r\n          valueField=\"count\"\r\n          type=\"bar\"\r\n          ignoreEmptyPoints={true}\r\n        />\r\n        <SeriesTemplate nameField=\"productiveHour\" />\r\n        <Export enabled={true} />\r\n        <Title text=\"Most Productive Hours - Bar Chart\" />\r\n      </Chart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport PieChart, {\r\n  Legend,\r\n  Series,\r\n  Tooltip,\r\n  Format,\r\n  Label,\r\n  Connector,\r\n  Export,\r\n} from \"devextreme-react/pie-chart\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const map = {};\r\n    this.props.data.items.forEach(function (arrayItem) {\r\n      var productiveHour = arrayItem.column_values.find((obj) => {\r\n        return obj.title === \"Most Productive Hours\";\r\n      }).text;\r\n\r\n      map[productiveHour] = map[productiveHour] + 1 || 1;\r\n    });\r\n\r\n    const chartData = [];\r\n    for (const key in map) {\r\n      chartData.push({ productiveHour: key, val: map[key] });\r\n    }\r\n\r\n    return (\r\n      <PieChart\r\n        id=\"pie\"\r\n        type=\"doughnut\"\r\n        title=\"Most Productive Hours - Donut Chart\"\r\n        palette=\"Soft Pastel\"\r\n        dataSource={chartData}\r\n      >\r\n        <Series argumentField=\"productiveHour\">\r\n          <Label visible={true}>\r\n            <Connector visible={true} />\r\n          </Label>\r\n        </Series>\r\n        <Export enabled={true} />\r\n        <Legend\r\n          margin={0}\r\n          horizontalAlignment=\"right\"\r\n          verticalAlignment=\"top\"\r\n        />\r\n        <Tooltip enabled={true} customizeTooltip={this.customizeTooltip}>\r\n          <Format />\r\n        </Tooltip>\r\n      </PieChart>\r\n    );\r\n  }\r\n\r\n  customizeTooltip(arg) {\r\n    return {\r\n      text: `${arg.argument} : ${(arg.percent * 100).toFixed(2)}%`,\r\n    };\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport LineChart from \"./LineChart\";\r\nimport DonutChart from \"./DonutChart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        startIcon={<BarChartIcon />}\r\n      >\r\n        Visualize Data\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Visualizations\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box m={3} display=\"flex\" maxHeight={400}>\r\n          <Box width={1 / 2} p={2}>\r\n            <LineChart data={props.data} />\r\n          </Box>\r\n          <Divider orientation=\"vertical\" flexItem />\r\n          <Box width={1 / 2} p={2}>\r\n            <DonutChart data={props.data} />\r\n          </Box>\r\n        </Box>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport VisualizationDialog from \"./VisualizationDialog\";\r\n\r\nfunction getBackgroundColorForProductiveHours(time) {\r\n  if (time === \"Morning (9 - 12)\") return \"#00c875\";\r\n  else if (time === \"Afternoon (12 - 3)\") return \"#ffcb00\";\r\n  else return \"#784bd1\";\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const name = row.column_values.find((obj) => {\r\n    return obj.title === \"Name\";\r\n  }).text;\r\n\r\n  const email = row.column_values.find((obj) => {\r\n    return obj.title === \"Email\";\r\n  }).text;\r\n\r\n  const role = row.column_values.find((obj) => {\r\n    return obj.title === \"Role\";\r\n  }).text;\r\n\r\n  const team = row.column_values.find((obj) => {\r\n    return obj.title === \"Team\";\r\n  }).text;\r\n\r\n  const productiveHours = row.column_values.find((obj) => {\r\n    return obj.title === \"Most Productive Hours\";\r\n  }).text;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell scope=\"row\">{name}</TableCell>\r\n        <TableCell>{email}</TableCell>\r\n        <TableCell>{role}</TableCell>\r\n        <TableCell>{team}</TableCell>\r\n        <TableCell\r\n          style={{\r\n            backgroundColor: getBackgroundColorForProductiveHours(\r\n              productiveHours\r\n            ),\r\n          }}\r\n        >\r\n          {productiveHours}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Box>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                  <Typography variant=\"span\" gutterBottom component=\"div\">\r\n                    <strong>Productive Hours</strong>\r\n                  </Typography>\r\n                </Box>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow\r\n                      style={{\r\n                        backgroundColor: \"#c4c4c4\",\r\n                      }}\r\n                    >\r\n                      <TableCell align=\"center\">9 - 10 AM</TableCell>\r\n                      <TableCell align=\"center\">10 - 11 AM</TableCell>\r\n                      <TableCell align=\"center\">11 AM - 12 PM</TableCell>\r\n                      <TableCell align=\"center\">12 - 1 PM</TableCell>\r\n                      <TableCell align=\"center\">1 - 2 PM</TableCell>\r\n                      <TableCell align=\"center\">2 - 3 PM</TableCell>\r\n                      <TableCell align=\"center\">3 - 4 PM</TableCell>\r\n                      <TableCell align=\"center\">4 - 5 PM</TableCell>\r\n                      <TableCell align=\"center\">5 - 6 PM</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell scope=\"row\" align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"9-10\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"10-11\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"11-12\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"12-1\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"1-2\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"2-3\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"3-4\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"4-5\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Checkbox\r\n                          disabled\r\n                          checked={\r\n                            row.column_values.find((obj) => {\r\n                              return obj.title === \"5-6\";\r\n                            }).text === \"v\"\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function Board(props) {\r\n  return (\r\n    <Box py={1} px={3}>\r\n      <Box my={1} display=\"flex\">\r\n        <Box component=\"h2\" flexGrow={1} color=\"white\">\r\n          {props.settings.heading !== \"\"\r\n            ? props.settings.heading\r\n            : props.data.name}\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n          <Box display=\"flex\">\r\n            <Box mr={2}>\r\n              <VisualizationDialog data={props.data} />\r\n            </Box>\r\n            <Box>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                href=\"https://forms.monday.com/forms/ef29872dcd363e280ed03fff062d071f\"\r\n                startIcon={<AddCircleIcon />}\r\n              >\r\n                Create Entry\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box boxShadow={3}>\r\n        <TableContainer component={Paper} style={{ maxHeight: 400 }}>\r\n          <Table\r\n            aria-label=\"collapsible table\"\r\n            stickyHeader\r\n            style={{ background: props.settings.tableColor }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <strong>Name</strong>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <strong>Email</strong>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <strong>Role</strong>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <strong>Team</strong>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <strong>Most Productive Hours</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.data.items.map((row) => (\r\n                <Row key={row.name} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Board from \"./Board\";\nimport Container from \"@material-ui/core/Container\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { Box } from \"@material-ui/core\";\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {},\n      context: { boardIds: [882172337] },\n      name: \"\",\n    };\n  }\n\n  componentDidMount() {\n    monday.listen(\"settings\", (res) => {\n      this.setState({ settings: res.data });\n      console.log(res.data);\n    });\n\n    monday.listen(\"context\", (res) => {\n      this.setState({ context: res.data });\n      console.log(res.data);\n      monday\n        .api(\n          `query ($boardIds: [Int]) {\n            boards(ids: $boardIds) {\n              name\n              items {\n                name\n                column_values {\n                  title\n                  text\n                }\n              }\n            }\n          }`,\n          { variables: { boardIds: this.state.context.boardIds } }\n        )\n        .then((res) => {\n          this.setState({ boardData: res.data });\n        });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    if (!this.state.boardData)\n      return (\n        <Box pt={5} display=\"flex\" justifyContent=\"center\">\n          <CircularProgress />\n        </Box>\n      );\n\n    return (\n      <div\n        className=\"App\"\n        style={{ background: this.state.settings.background }}\n      >\n        <Container maxWidth=\"lg\">\n          <Board\n            settings={this.state.settings}\n            data={this.state.boardData.boards[0]}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}