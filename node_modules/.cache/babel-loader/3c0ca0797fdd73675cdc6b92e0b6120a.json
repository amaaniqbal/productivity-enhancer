{"ast":null,"code":"/**\r\n * DevExtreme (viz/translators/category_translator.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _math = require(\"../../core/utils/math\");\n\nvar round = Math.round;\n\nfunction getValue(value) {\n  return value;\n}\n\nvar _default = {\n  translate: function (category, directionOffset) {\n    var that = this;\n    var canvasOptions = that._canvasOptions;\n\n    var categoryIndex = that._categoriesToPoints[category.valueOf()];\n\n    var specialValue = that.translateSpecialCase(category);\n    var startPointIndex = canvasOptions.startPointIndex || 0;\n    var stickInterval = that._options.stick ? 0 : .5;\n\n    if ((0, _type.isDefined)(specialValue)) {\n      return round(specialValue);\n    }\n\n    if (!categoryIndex && 0 !== categoryIndex) {\n      return null;\n    }\n\n    directionOffset = directionOffset || 0;\n    var stickDelta = categoryIndex + stickInterval - startPointIndex + .5 * directionOffset;\n    return round(that._calculateProjection(canvasOptions.interval * stickDelta));\n  },\n  getInterval: function () {\n    return this._canvasOptions.interval;\n  },\n  getEventScale: function (zoomEvent) {\n    var scale = zoomEvent.deltaScale || 1;\n    return 1 - (1 - scale) / (.75 + this.visibleCategories.length / this._categories.length);\n  },\n  zoom: function (translate, scale) {\n    var that = this;\n    var categories = that._categories;\n    var canvasOptions = that._canvasOptions;\n    var stick = that._options.stick;\n    var invert = canvasOptions.invert;\n    var interval = canvasOptions.interval * scale;\n    var translateCategories = translate / interval;\n    var visibleCount = (that.visibleCategories || []).length;\n    var startCategoryIndex = parseInt((canvasOptions.startPointIndex || 0) + translateCategories + .5);\n    var categoriesLength = parseInt((0, _math.adjust)(canvasOptions.canvasLength / interval) + (stick ? 1 : 0)) || 1;\n    var endCategoryIndex;\n\n    if (invert) {\n      startCategoryIndex = parseInt((canvasOptions.startPointIndex || 0) + visibleCount - translateCategories + .5) - categoriesLength;\n    }\n\n    if (startCategoryIndex < 0) {\n      startCategoryIndex = 0;\n    }\n\n    endCategoryIndex = startCategoryIndex + categoriesLength;\n\n    if (endCategoryIndex > categories.length) {\n      endCategoryIndex = categories.length;\n      startCategoryIndex = endCategoryIndex - categoriesLength;\n\n      if (startCategoryIndex < 0) {\n        startCategoryIndex = 0;\n      }\n    }\n\n    var newVisibleCategories = categories.slice(parseInt(startCategoryIndex), parseInt(endCategoryIndex));\n\n    var newInterval = that._getDiscreteInterval(newVisibleCategories.length, canvasOptions);\n\n    scale = newInterval / canvasOptions.interval;\n    translate = that.translate(!invert ? newVisibleCategories[0] : newVisibleCategories[newVisibleCategories.length - 1]) * scale - (canvasOptions.startPoint + (stick ? 0 : newInterval / 2));\n    return {\n      min: newVisibleCategories[0],\n      max: newVisibleCategories[newVisibleCategories.length - 1],\n      translate: translate,\n      scale: scale\n    };\n  },\n  getMinScale: function (zoom) {\n    var that = this;\n    var canvasOptions = that._canvasOptions;\n    var categoriesLength = (that.visibleCategories || that._categories).length;\n    categoriesLength += (parseInt(.1 * categoriesLength) || 1) * (zoom ? -2 : 2);\n    return canvasOptions.canvasLength / (Math.max(categoriesLength, 1) * canvasOptions.interval);\n  },\n  getScale: function (min, max) {\n    var that = this;\n    var canvasOptions = that._canvasOptions;\n    var visibleArea = that.getCanvasVisibleArea();\n    var stickOffset = !that._options.stick && 1;\n    var minPoint = (0, _type.isDefined)(min) ? that.translate(min, -stickOffset) : null;\n    var maxPoint = (0, _type.isDefined)(max) ? that.translate(max, +stickOffset) : null;\n\n    if (null === minPoint) {\n      minPoint = canvasOptions.invert ? visibleArea.max : visibleArea.min;\n    }\n\n    if (null === maxPoint) {\n      maxPoint = canvasOptions.invert ? visibleArea.min : visibleArea.max;\n    }\n\n    return that.canvasLength / Math.abs(maxPoint - minPoint);\n  },\n  isValid: function (value) {\n    return (0, _type.isDefined)(value) ? this._categoriesToPoints[value.valueOf()] >= 0 : false;\n  },\n  getCorrectValue: getValue,\n  to: function (value, direction) {\n    var canvasOptions = this._canvasOptions;\n\n    var categoryIndex = this._categoriesToPoints[value.valueOf()];\n\n    var startPointIndex = canvasOptions.startPointIndex || 0;\n    var stickDelta = categoryIndex + (this._options.stick ? 0 : .5) - startPointIndex + (this._businessRange.invert ? -1 : 1) * direction * .5;\n    return round(this._calculateProjection(canvasOptions.interval * stickDelta));\n  },\n  from: function (position) {\n    var direction = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\n    var canvasOptions = this._canvasOptions;\n    var startPoint = canvasOptions.startPoint;\n    var categories = this.visibleCategories || this._categories;\n    var categoriesLength = categories.length;\n    var stickInterval = this._options.stick ? .5 : 0;\n    var result = round((position - startPoint) / canvasOptions.interval + stickInterval - .5 - .5 * direction);\n\n    if (result >= categoriesLength) {\n      result = categoriesLength - 1;\n    }\n\n    if (result < 0) {\n      result = 0;\n    }\n\n    if (canvasOptions.invert) {\n      result = categoriesLength - result - 1;\n    }\n\n    return categories[result];\n  },\n  _add: function () {\n    return NaN;\n  },\n  _toValue: getValue,\n  isValueProlonged: true\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/translators/category_translator.js"],"names":["exports","default","_type","require","_math","round","Math","getValue","value","_default","translate","category","directionOffset","that","canvasOptions","_canvasOptions","categoryIndex","_categoriesToPoints","valueOf","specialValue","translateSpecialCase","startPointIndex","stickInterval","_options","stick","isDefined","stickDelta","_calculateProjection","interval","getInterval","getEventScale","zoomEvent","scale","deltaScale","visibleCategories","length","_categories","zoom","categories","invert","translateCategories","visibleCount","startCategoryIndex","parseInt","categoriesLength","adjust","canvasLength","endCategoryIndex","newVisibleCategories","slice","newInterval","_getDiscreteInterval","startPoint","min","max","getMinScale","getScale","visibleArea","getCanvasVisibleArea","stickOffset","minPoint","maxPoint","abs","isValid","getCorrectValue","to","direction","_businessRange","from","position","arguments","result","_add","NaN","_toValue","isValueProlonged","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/translators/category_translator.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar round = Math.round;\r\n\r\nfunction getValue(value) {\r\n    return value\r\n}\r\nvar _default = {\r\n    translate: function(category, directionOffset) {\r\n        var that = this;\r\n        var canvasOptions = that._canvasOptions;\r\n        var categoryIndex = that._categoriesToPoints[category.valueOf()];\r\n        var specialValue = that.translateSpecialCase(category);\r\n        var startPointIndex = canvasOptions.startPointIndex || 0;\r\n        var stickInterval = that._options.stick ? 0 : .5;\r\n        if ((0, _type.isDefined)(specialValue)) {\r\n            return round(specialValue)\r\n        }\r\n        if (!categoryIndex && 0 !== categoryIndex) {\r\n            return null\r\n        }\r\n        directionOffset = directionOffset || 0;\r\n        var stickDelta = categoryIndex + stickInterval - startPointIndex + .5 * directionOffset;\r\n        return round(that._calculateProjection(canvasOptions.interval * stickDelta))\r\n    },\r\n    getInterval: function() {\r\n        return this._canvasOptions.interval\r\n    },\r\n    getEventScale: function(zoomEvent) {\r\n        var scale = zoomEvent.deltaScale || 1;\r\n        return 1 - (1 - scale) / (.75 + this.visibleCategories.length / this._categories.length)\r\n    },\r\n    zoom: function(translate, scale) {\r\n        var that = this;\r\n        var categories = that._categories;\r\n        var canvasOptions = that._canvasOptions;\r\n        var stick = that._options.stick;\r\n        var invert = canvasOptions.invert;\r\n        var interval = canvasOptions.interval * scale;\r\n        var translateCategories = translate / interval;\r\n        var visibleCount = (that.visibleCategories || []).length;\r\n        var startCategoryIndex = parseInt((canvasOptions.startPointIndex || 0) + translateCategories + .5);\r\n        var categoriesLength = parseInt((0, _math.adjust)(canvasOptions.canvasLength / interval) + (stick ? 1 : 0)) || 1;\r\n        var endCategoryIndex;\r\n        if (invert) {\r\n            startCategoryIndex = parseInt((canvasOptions.startPointIndex || 0) + visibleCount - translateCategories + .5) - categoriesLength\r\n        }\r\n        if (startCategoryIndex < 0) {\r\n            startCategoryIndex = 0\r\n        }\r\n        endCategoryIndex = startCategoryIndex + categoriesLength;\r\n        if (endCategoryIndex > categories.length) {\r\n            endCategoryIndex = categories.length;\r\n            startCategoryIndex = endCategoryIndex - categoriesLength;\r\n            if (startCategoryIndex < 0) {\r\n                startCategoryIndex = 0\r\n            }\r\n        }\r\n        var newVisibleCategories = categories.slice(parseInt(startCategoryIndex), parseInt(endCategoryIndex));\r\n        var newInterval = that._getDiscreteInterval(newVisibleCategories.length, canvasOptions);\r\n        scale = newInterval / canvasOptions.interval;\r\n        translate = that.translate(!invert ? newVisibleCategories[0] : newVisibleCategories[newVisibleCategories.length - 1]) * scale - (canvasOptions.startPoint + (stick ? 0 : newInterval / 2));\r\n        return {\r\n            min: newVisibleCategories[0],\r\n            max: newVisibleCategories[newVisibleCategories.length - 1],\r\n            translate: translate,\r\n            scale: scale\r\n        }\r\n    },\r\n    getMinScale: function(zoom) {\r\n        var that = this;\r\n        var canvasOptions = that._canvasOptions;\r\n        var categoriesLength = (that.visibleCategories || that._categories).length;\r\n        categoriesLength += (parseInt(.1 * categoriesLength) || 1) * (zoom ? -2 : 2);\r\n        return canvasOptions.canvasLength / (Math.max(categoriesLength, 1) * canvasOptions.interval)\r\n    },\r\n    getScale: function(min, max) {\r\n        var that = this;\r\n        var canvasOptions = that._canvasOptions;\r\n        var visibleArea = that.getCanvasVisibleArea();\r\n        var stickOffset = !that._options.stick && 1;\r\n        var minPoint = (0, _type.isDefined)(min) ? that.translate(min, -stickOffset) : null;\r\n        var maxPoint = (0, _type.isDefined)(max) ? that.translate(max, +stickOffset) : null;\r\n        if (null === minPoint) {\r\n            minPoint = canvasOptions.invert ? visibleArea.max : visibleArea.min\r\n        }\r\n        if (null === maxPoint) {\r\n            maxPoint = canvasOptions.invert ? visibleArea.min : visibleArea.max\r\n        }\r\n        return that.canvasLength / Math.abs(maxPoint - minPoint)\r\n    },\r\n    isValid: function(value) {\r\n        return (0, _type.isDefined)(value) ? this._categoriesToPoints[value.valueOf()] >= 0 : false\r\n    },\r\n    getCorrectValue: getValue,\r\n    to: function(value, direction) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var categoryIndex = this._categoriesToPoints[value.valueOf()];\r\n        var startPointIndex = canvasOptions.startPointIndex || 0;\r\n        var stickDelta = categoryIndex + (this._options.stick ? 0 : .5) - startPointIndex + (this._businessRange.invert ? -1 : 1) * direction * .5;\r\n        return round(this._calculateProjection(canvasOptions.interval * stickDelta))\r\n    },\r\n    from: function(position) {\r\n        var direction = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\r\n        var canvasOptions = this._canvasOptions;\r\n        var startPoint = canvasOptions.startPoint;\r\n        var categories = this.visibleCategories || this._categories;\r\n        var categoriesLength = categories.length;\r\n        var stickInterval = this._options.stick ? .5 : 0;\r\n        var result = round((position - startPoint) / canvasOptions.interval + stickInterval - .5 - .5 * direction);\r\n        if (result >= categoriesLength) {\r\n            result = categoriesLength - 1\r\n        }\r\n        if (result < 0) {\r\n            result = 0\r\n        }\r\n        if (canvasOptions.invert) {\r\n            result = categoriesLength - result - 1\r\n        }\r\n        return categories[result]\r\n    },\r\n    _add: function() {\r\n        return NaN\r\n    },\r\n    _toValue: getValue,\r\n    isValueProlonged: true\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}