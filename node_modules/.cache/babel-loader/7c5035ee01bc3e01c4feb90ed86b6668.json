{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/advanced_chart.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.AdvancedChart = void 0;\n\nvar _extend2 = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _range = require(\"../translators/range\");\n\nvar _base_axis = require(\"../axes/base_axis\");\n\nvar _series_family = require(\"../core/series_family\");\n\nvar _base_chart = require(\"./base_chart\");\n\nvar _crosshair = require(\"./crosshair\");\n\nvar _range_data_calculator = _interopRequireDefault(require(\"../series/helpers/range_data_calculator\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _utils = require(\"../core/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _isArray = Array.isArray;\nvar DEFAULT_AXIS_NAME = \"defaultAxisName\";\nvar FONT = \"font\";\nvar COMMON_AXIS_SETTINGS = \"commonAxisSettings\";\nvar DEFAULT_PANE_NAME = \"default\";\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\n\nfunction prepareAxis(axisOptions) {\n  return _isArray(axisOptions) ? 0 === axisOptions.length ? [{}] : axisOptions : [axisOptions];\n}\n\nfunction processBubbleMargin(opt, bubbleSize) {\n  if (opt.processBubbleSize) {\n    opt.size = bubbleSize;\n  }\n\n  return opt;\n}\n\nfunction estimateBubbleSize(size, panesCount, maxSize, rotated) {\n  var width = rotated ? size.width / panesCount : size.width;\n  var height = rotated ? size.height : size.height / panesCount;\n  return Math.min(width, height) * maxSize;\n}\n\nfunction setAxisVisualRangeByOption(arg, axis, isDirectOption, index) {\n  var options;\n  var visualRange;\n\n  if (isDirectOption) {\n    visualRange = arg.value;\n    options = {\n      skipEventRising: true\n    };\n    var pathElements = arg.fullName.split(\".\");\n    var destElem = pathElements[pathElements.length - 1];\n\n    if (\"endValue\" === destElem || \"startValue\" === destElem) {\n      options = {\n        allowPartialUpdate: true\n      };\n      visualRange = _defineProperty({}, destElem, arg.value);\n    }\n  } else {\n    visualRange = ((0, _type.isDefined)(index) ? arg.value[index] : arg.value).visualRange;\n  }\n\n  axis.visualRange(visualRange, options);\n}\n\nfunction getAxisTypes(groupsData, axis, isArgumentAxes) {\n  if (isArgumentAxes) {\n    return {\n      argumentAxisType: groupsData.argumentAxisType,\n      argumentType: groupsData.argumentType\n    };\n  }\n\n  var _groupsData$groups$fi = groupsData.groups.filter(function (g) {\n    return g.valueAxis === axis;\n  })[0],\n      valueAxisType = _groupsData$groups$fi.valueAxisType,\n      valueType = _groupsData$groups$fi.valueType;\n  return {\n    valueAxisType: valueAxisType,\n    valueType: valueType\n  };\n}\n\nvar AdvancedChart = _base_chart.BaseChart.inherit({\n  _fontFields: [COMMON_AXIS_SETTINGS + \".label.\" + FONT, COMMON_AXIS_SETTINGS + \".title.\" + FONT],\n  _partialOptionChangesMap: {\n    visualRange: VISUAL_RANGE,\n    _customVisualRange: VISUAL_RANGE,\n    strips: \"REFRESH_AXES\",\n    constantLines: \"REFRESH_AXES\"\n  },\n  _partialOptionChangesPath: {\n    argumentAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"],\n    valueAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"]\n  },\n  _initCore: function _initCore() {\n    this._panesClipRects = {};\n    this.callBase();\n  },\n  _disposeCore: function _disposeCore() {\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n    var panesClipRects = this._panesClipRects;\n    this.callBase();\n    disposeObjectsInArray.call(panesClipRects, \"fixed\");\n    disposeObjectsInArray.call(panesClipRects, \"base\");\n    disposeObjectsInArray.call(panesClipRects, \"wide\");\n    this._panesClipRects = null;\n  },\n  _dispose: function _dispose() {\n    var that = this;\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n    that.callBase();\n    that.panes = null;\n\n    if (that._legend) {\n      that._legend.dispose();\n\n      that._legend = null;\n    }\n\n    disposeObjectsInArray.call(that, \"panesBackground\");\n    disposeObjectsInArray.call(that, \"seriesFamilies\");\n\n    that._disposeAxes();\n  },\n  _createPanes: function _createPanes() {\n    this._cleanPanesClipRects(\"fixed\");\n\n    this._cleanPanesClipRects(\"base\");\n\n    this._cleanPanesClipRects(\"wide\");\n  },\n  _cleanPanesClipRects: function _cleanPanesClipRects(clipArrayName) {\n    var clipArray = this._panesClipRects[clipArrayName];\n    (clipArray || []).forEach(function (clipRect) {\n      return clipRect && clipRect.dispose();\n    });\n    this._panesClipRects[clipArrayName] = [];\n  },\n  _getElementsClipRectID: function _getElementsClipRectID(paneName) {\n    var clipShape = this._panesClipRects.fixed[this._getPaneIndex(paneName)];\n\n    return clipShape && clipShape.id;\n  },\n  _getPaneIndex: function _getPaneIndex(paneName) {\n    var paneIndex;\n    var name = paneName || DEFAULT_PANE_NAME;\n    (0, _iterator.each)(this.panes, function (index, pane) {\n      if (pane.name === name) {\n        paneIndex = index;\n        return false;\n      }\n    });\n    return paneIndex;\n  },\n  _updateSize: function _updateSize() {\n    this.callBase();\n    (0, _utils.setCanvasValues)(this._canvas);\n  },\n  _reinitAxes: function _reinitAxes() {\n    this.panes = this._createPanes();\n\n    this._populateAxes();\n\n    this._axesReinitialized = true;\n  },\n  _getCrosshairMargins: function _getCrosshairMargins() {\n    var crosshairOptions = this._getCrosshairOptions() || {};\n    var crosshairEnabled = crosshairOptions.enabled;\n    var margins = (0, _crosshair.getMargins)();\n    return {\n      x: crosshairEnabled && crosshairOptions.horizontalLine.visible ? margins.x : 0,\n      y: crosshairEnabled && crosshairOptions.verticalLine.visible ? margins.y : 0\n    };\n  },\n  _populateAxes: function _populateAxes() {\n    var that = this;\n    var panes = that.panes;\n\n    var rotated = that._isRotated();\n\n    var argumentAxesOptions = prepareAxis(that.option(\"argumentAxis\") || {})[0];\n    var valueAxisOption = that.option(\"valueAxis\");\n    var valueAxesOptions = prepareAxis(valueAxisOption || {});\n    var argumentAxesPopulatedOptions = [];\n    var valueAxesPopulatedOptions = [];\n    var axisNames = [];\n    var valueAxesCounter = 0;\n    var paneWithNonVirtualAxis;\n\n    var crosshairMargins = that._getCrosshairMargins();\n\n    function getNextAxisName() {\n      return DEFAULT_AXIS_NAME + valueAxesCounter++;\n    }\n\n    if (rotated) {\n      paneWithNonVirtualAxis = \"right\" === argumentAxesOptions.position ? panes[panes.length - 1].name : panes[0].name;\n    } else {\n      paneWithNonVirtualAxis = \"top\" === argumentAxesOptions.position ? panes[0].name : panes[panes.length - 1].name;\n    }\n\n    argumentAxesPopulatedOptions = (0, _utils.map)(panes, function (pane) {\n      var virtual = pane.name !== paneWithNonVirtualAxis;\n      return that._populateAxesOptions(\"argumentAxis\", argumentAxesOptions, {\n        pane: pane.name,\n        name: null,\n        optionPath: \"argumentAxis\",\n        crosshairMargin: rotated ? crosshairMargins.x : crosshairMargins.y\n      }, rotated, virtual);\n    });\n    (0, _iterator.each)(valueAxesOptions, function (priority, axisOptions) {\n      var _axisOptions$panes;\n\n      var axisPanes = [];\n      var name = axisOptions.name;\n\n      if (name && (0, _array.inArray)(name, axisNames) !== -1) {\n        that._incidentOccurred(\"E2102\");\n\n        return;\n      }\n\n      name && axisNames.push(name);\n\n      if (axisOptions.pane) {\n        axisPanes.push(axisOptions.pane);\n      }\n\n      if (null === (_axisOptions$panes = axisOptions.panes) || void 0 === _axisOptions$panes ? void 0 : _axisOptions$panes.length) {\n        axisPanes = axisPanes.concat(axisOptions.panes.slice(0));\n      }\n\n      axisPanes = (0, _utils.unique)(axisPanes);\n\n      if (!axisPanes.length) {\n        axisPanes.push(void 0);\n      }\n\n      (0, _iterator.each)(axisPanes, function (_, pane) {\n        var optionPath = _isArray(valueAxisOption) ? \"valueAxis[\".concat(priority, \"]\") : \"valueAxis\";\n        valueAxesPopulatedOptions.push(that._populateAxesOptions(\"valueAxis\", axisOptions, {\n          name: name || getNextAxisName(),\n          pane: pane,\n          priority: priority,\n          optionPath: optionPath,\n          crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\n        }, rotated));\n      });\n    });\n\n    that._redesignAxes(argumentAxesPopulatedOptions, true, paneWithNonVirtualAxis);\n\n    that._redesignAxes(valueAxesPopulatedOptions, false);\n  },\n  _redesignAxes: function _redesignAxes(options, isArgumentAxes, paneWithNonVirtualAxis) {\n    var that = this;\n    var axesBasis = [];\n    var axes = isArgumentAxes ? that._argumentAxes : that._valueAxes;\n    (0, _iterator.each)(options, function (_, opt) {\n      var curAxes = axes && axes.filter(function (a) {\n        return a.name === opt.name && (!(0, _type.isDefined)(opt.pane) && that.panes.some(function (p) {\n          return p.name === a.pane;\n        }) || a.pane === opt.pane);\n      });\n\n      if (curAxes && curAxes.length > 0) {\n        (0, _iterator.each)(curAxes, function (_, axis) {\n          var axisTypes = getAxisTypes(that._groupsData, axis, isArgumentAxes);\n          axis.updateOptions(opt);\n\n          if (isArgumentAxes) {\n            axis.setTypes(axisTypes.argumentAxisType, axisTypes.argumentType, \"argumentType\");\n          } else {\n            axis.setTypes(axisTypes.valueAxisType, axisTypes.valueType, \"valueType\");\n          }\n\n          axis.validate();\n          axesBasis.push({\n            axis: axis\n          });\n        });\n      } else {\n        axesBasis.push({\n          options: opt\n        });\n      }\n    });\n\n    if (axes) {\n      (0, _iterator.reverseEach)(axes, function (index, axis) {\n        if (!axesBasis.some(function (basis) {\n          return basis.axis && basis.axis === axis;\n        })) {\n          that._disposeAxis(index, isArgumentAxes);\n        }\n      });\n    } else {\n      if (isArgumentAxes) {\n        axes = that._argumentAxes = [];\n      } else {\n        axes = that._valueAxes = [];\n      }\n    }\n\n    (0, _iterator.each)(axesBasis, function (_, basis) {\n      var axis = basis.axis;\n\n      if (basis.axis && isArgumentAxes) {\n        basis.axis.isVirtual = basis.axis.pane !== paneWithNonVirtualAxis;\n      } else {\n        if (basis.options) {\n          axis = that._createAxis(isArgumentAxes, basis.options, isArgumentAxes ? basis.options.pane !== paneWithNonVirtualAxis : void 0);\n          axes.push(axis);\n        }\n      }\n\n      axis.applyVisualRangeSetter(that._getVisualRangeSetter());\n    });\n  },\n  _disposeAxis: function _disposeAxis(index, isArgumentAxis) {\n    var axes = isArgumentAxis ? this._argumentAxes : this._valueAxes;\n    var axis = axes[index];\n\n    if (!axis) {\n      return;\n    }\n\n    axis.dispose();\n    axes.splice(index, 1);\n  },\n  _disposeAxes: function _disposeAxes() {\n    var that = this;\n    var disposeObjectsInArray = that._disposeObjectsInArray;\n    disposeObjectsInArray.call(that, \"_argumentAxes\");\n    disposeObjectsInArray.call(that, \"_valueAxes\");\n  },\n  _appendAdditionalSeriesGroups: function _appendAdditionalSeriesGroups() {\n    this._crosshairCursorGroup.linkAppend();\n\n    this._scrollBar && this._scrollBarGroup.linkAppend();\n  },\n  _getLegendTargets: function _getLegendTargets() {\n    var _this = this;\n\n    return (this.series || []).map(function (s) {\n      var item = _this._getLegendOptions(s);\n\n      item.legendData.series = s;\n\n      if (!s.getOptions().showInLegend) {\n        item.legendData.visible = false;\n      }\n\n      return item;\n    });\n  },\n  _legendItemTextField: \"name\",\n  _seriesPopulatedHandlerCore: function _seriesPopulatedHandlerCore() {\n    this._processSeriesFamilies();\n\n    this._processValueAxisFormat();\n  },\n  _renderTrackers: function _renderTrackers() {\n    var that = this;\n    var i;\n\n    for (i = 0; i < that.series.length; ++i) {\n      that.series[i].drawTrackers();\n    }\n  },\n  _specialProcessSeries: function _specialProcessSeries() {\n    this._processSeriesFamilies();\n  },\n  _processSeriesFamilies: function _processSeriesFamilies() {\n    var _that$seriesFamilies;\n\n    var that = this;\n    var types = [];\n    var families = [];\n    var paneSeries;\n    var themeManager = that._themeManager;\n    var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\n    var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\n    var familyOptions = {\n      minBubbleSize: themeManager.getOptions(\"minBubbleSize\"),\n      maxBubbleSize: themeManager.getOptions(\"maxBubbleSize\"),\n      barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\n      barGroupWidth: themeManager.getOptions(\"barGroupWidth\"),\n      negativesAsZeroes: (0, _type.isDefined)(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros\n    };\n\n    if (null === (_that$seriesFamilies = that.seriesFamilies) || void 0 === _that$seriesFamilies ? void 0 : _that$seriesFamilies.length) {\n      (0, _iterator.each)(that.seriesFamilies, function (_, family) {\n        family.updateOptions(familyOptions);\n        family.adjustSeriesValues();\n      });\n      return;\n    }\n\n    (0, _iterator.each)(that.series, function (_, item) {\n      if ((0, _array.inArray)(item.type, types) === -1) {\n        types.push(item.type);\n      }\n    });\n    (0, _iterator.each)(that._getLayoutTargets(), function (_, pane) {\n      paneSeries = that._getSeriesForPane(pane.name);\n      (0, _iterator.each)(types, function (_, type) {\n        var family = new _series_family.SeriesFamily({\n          type: type,\n          pane: pane.name,\n          minBubbleSize: familyOptions.minBubbleSize,\n          maxBubbleSize: familyOptions.maxBubbleSize,\n          barGroupPadding: familyOptions.barGroupPadding,\n          barGroupWidth: familyOptions.barGroupWidth,\n          negativesAsZeroes: familyOptions.negativesAsZeroes,\n          rotated: that._isRotated()\n        });\n        family.add(paneSeries);\n        family.adjustSeriesValues();\n        families.push(family);\n      });\n    });\n    that.seriesFamilies = families;\n  },\n  _updateSeriesDimensions: function _updateSeriesDimensions() {\n    var that = this;\n    var i;\n    var seriesFamilies = that.seriesFamilies || [];\n\n    for (i = 0; i < seriesFamilies.length; i++) {\n      var family = seriesFamilies[i];\n      family.updateSeriesValues();\n      family.adjustSeriesDimensions();\n    }\n  },\n  _getLegendCallBack: function _getLegendCallBack(series) {\n    return this._legend && this._legend.getActionCallback(series);\n  },\n  _appendAxesGroups: function _appendAxesGroups() {\n    var that = this;\n\n    that._stripsGroup.linkAppend();\n\n    that._gridGroup.linkAppend();\n\n    that._axesGroup.linkAppend();\n\n    that._constantLinesGroup.linkAppend();\n\n    that._labelAxesGroup.linkAppend();\n\n    that._scaleBreaksGroup.linkAppend();\n  },\n  _populateMarginOptions: function _populateMarginOptions() {\n    var that = this;\n    var bubbleSize = estimateBubbleSize(that.getSize(), that.panes.length, that._themeManager.getOptions(\"maxBubbleSize\"), that._isRotated());\n    var argumentMarginOptions = {};\n\n    that._valueAxes.forEach(function (valueAxis) {\n      var groupSeries = that.series.filter(function (series) {\n        return series.getValueAxis() === valueAxis;\n      });\n      var marginOptions = {};\n      groupSeries.forEach(function (series) {\n        if (series.isVisible()) {\n          var seriesMarginOptions = processBubbleMargin(series.getMarginOptions(), bubbleSize);\n          marginOptions = (0, _utils.mergeMarginOptions)(marginOptions, seriesMarginOptions);\n          argumentMarginOptions = (0, _utils.mergeMarginOptions)(argumentMarginOptions, seriesMarginOptions);\n        }\n      });\n      valueAxis.setMarginOptions(marginOptions);\n    });\n\n    that._argumentAxes.forEach(function (a) {\n      return a.setMarginOptions(argumentMarginOptions);\n    });\n  },\n  _populateBusinessRange: function _populateBusinessRange(updatedAxis, keepRange) {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var argRange = new _range.Range({\n      rotated: !!rotated\n    });\n\n    var series = that._getVisibleSeries();\n\n    that._valueAxes.forEach(function (valueAxis) {\n      var groupRange = new _range.Range({\n        rotated: !!rotated,\n        pane: valueAxis.pane,\n        axis: valueAxis.name\n      });\n      var groupSeries = series.filter(function (series) {\n        return series.getValueAxis() === valueAxis;\n      });\n      groupSeries.forEach(function (series) {\n        var seriesRange = series.getRangeData();\n        groupRange.addRange(seriesRange.val);\n        argRange.addRange(seriesRange.arg);\n      });\n\n      if (!updatedAxis || updatedAxis && groupSeries.length && valueAxis === updatedAxis) {\n        valueAxis.setGroupSeries(groupSeries);\n        valueAxis.setBusinessRange(groupRange, that._axesReinitialized || keepRange, that._argumentAxes[0]._lastVisualRangeUpdateMode);\n      }\n    });\n\n    if (!updatedAxis || updatedAxis && series.length) {\n      that._argumentAxes.forEach(function (a) {\n        return a.setBusinessRange(argRange, that._axesReinitialized, void 0, that._groupsData.categories);\n      });\n    }\n\n    that._populateMarginOptions();\n  },\n  getArgumentAxis: function getArgumentAxis() {\n    return (this._argumentAxes || []).filter(function (a) {\n      return !a.isVirtual;\n    })[0];\n  },\n  getValueAxis: function getValueAxis(name) {\n    var _this2 = this;\n\n    return (this._valueAxes || []).filter((0, _type.isDefined)(name) ? function (a) {\n      return a.name === name;\n    } : function (a) {\n      return a.pane === _this2.defaultPane;\n    })[0];\n  },\n  _getGroupsData: function _getGroupsData() {\n    var that = this;\n    var groups = [];\n\n    that._valueAxes.forEach(function (axis) {\n      groups.push({\n        series: that.series.filter(function (series) {\n          return series.getValueAxis() === axis;\n        }),\n        valueAxis: axis,\n        valueOptions: axis.getOptions()\n      });\n    });\n\n    return {\n      groups: groups,\n      argumentAxes: that._argumentAxes,\n      argumentOptions: that._argumentAxes[0].getOptions()\n    };\n  },\n  _groupSeries: function _groupSeries() {\n    var that = this;\n\n    that._correctValueAxes(false);\n\n    that._groupsData = that._getGroupsData();\n  },\n  _processValueAxisFormat: function _processValueAxisFormat() {\n    var axesWithFullStackedFormat = [];\n    this.series.forEach(function (series) {\n      var axis = series.getValueAxis();\n\n      if (series.isFullStackedSeries()) {\n        axis.setPercentLabelFormat();\n        axesWithFullStackedFormat.push(axis);\n      }\n    });\n\n    this._valueAxes.forEach(function (axis) {\n      if (axesWithFullStackedFormat.indexOf(axis) === -1) {\n        axis.resetAutoLabelFormat();\n      }\n    });\n  },\n  _populateAxesOptions: function _populateAxesOptions(typeSelector, userOptions, axisOptions, rotated, virtual) {\n    var that = this;\n\n    var preparedUserOptions = that._prepareStripsAndConstantLines(typeSelector, userOptions, rotated);\n\n    var options = (0, _extend2.extend)(true, {}, preparedUserOptions, axisOptions, that._prepareAxisOptions(typeSelector, preparedUserOptions, rotated));\n\n    if (virtual) {\n      options.visible = options.tick.visible = options.minorTick.visible = options.label.visible = false;\n      options.title = {};\n    }\n\n    return options;\n  },\n  _getValFilter: function _getValFilter(series) {\n    return _range_data_calculator.default.getViewPortFilter(series.getValueAxis().visualRange() || {});\n  },\n  _createAxis: function _createAxis(isArgumentAxes, options, virtual) {\n    var that = this;\n    var typeSelector = isArgumentAxes ? \"argumentAxis\" : \"valueAxis\";\n    var renderingSettings = (0, _extend2.extend)({\n      renderer: that._renderer,\n      incidentOccurred: that._incidentOccurred,\n      eventTrigger: that._eventTrigger,\n      axisClass: isArgumentAxes ? \"arg\" : \"val\",\n      widgetClass: \"dxc\",\n      stripsGroup: that._stripsGroup,\n      labelAxesGroup: that._labelAxesGroup,\n      constantLinesGroup: that._constantLinesGroup,\n      scaleBreaksGroup: that._scaleBreaksGroup,\n      axesContainerGroup: that._axesGroup,\n      gridGroup: that._gridGroup,\n      isArgumentAxis: isArgumentAxes,\n      getTemplate: function getTemplate() {\n        return that._getTemplate(options.label.template);\n      }\n    }, that._getAxisRenderingOptions(typeSelector));\n    var axis = new _base_axis.Axis(renderingSettings);\n    axis.updateOptions(options);\n    axis.isVirtual = virtual;\n    return axis;\n  },\n  _applyVisualRangeByVirtualAxes: function _applyVisualRangeByVirtualAxes(axis, range) {\n    return false;\n  },\n  _applyCustomVisualRangeOption: function _applyCustomVisualRangeOption(axis, range) {\n    var that = this;\n\n    if (axis.getOptions().optionPath) {\n      that._parseVisualRangeOption(\"\".concat(axis.getOptions().optionPath, \".visualRange\"), range);\n    }\n  },\n  _getVisualRangeSetter: function _getVisualRangeSetter() {\n    var chart = this;\n    return function (axis, _ref) {\n      var skipEventRising = _ref.skipEventRising,\n          range = _ref.range;\n\n      chart._applyCustomVisualRangeOption(axis, range);\n\n      axis.setCustomVisualRange(range);\n      axis.skipEventRising = skipEventRising;\n\n      if (!chart._applyVisualRangeByVirtualAxes(axis, range)) {\n        if (chart._applyingChanges) {\n          chart._change_VISUAL_RANGE();\n        } else {\n          chart._requestChange([VISUAL_RANGE]);\n        }\n      }\n    };\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    return (0, _extend2.extend)(this.callBase(), {\n      argumentAxis: this.getArgumentAxis()\n    });\n  },\n  _prepareStripsAndConstantLines: function _prepareStripsAndConstantLines(typeSelector, userOptions, rotated) {\n    userOptions = this._themeManager.getOptions(typeSelector, userOptions, rotated);\n\n    if (userOptions.strips) {\n      (0, _iterator.each)(userOptions.strips, function (i) {\n        userOptions.strips[i] = (0, _extend2.extend)(true, {}, userOptions.stripStyle, userOptions.strips[i]);\n      });\n    }\n\n    if (userOptions.constantLines) {\n      (0, _iterator.each)(userOptions.constantLines, function (i, line) {\n        userOptions.constantLines[i] = (0, _extend2.extend)(true, {}, userOptions.constantLineStyle, line);\n      });\n    }\n\n    return userOptions;\n  },\n  refresh: function refresh() {\n    this._disposeAxes();\n\n    this.callBase();\n  },\n  _layoutAxes: function _layoutAxes(drawAxes) {\n    var that = this;\n    var cleanPanesCanvases = drawAxes();\n    var needSpace = that.checkForMoreSpaceForPanesCanvas();\n\n    if (needSpace) {\n      var size = this._layout.backward(this._rect, this._rect, [needSpace.width, needSpace.height]);\n\n      needSpace.width = Math.max(0, size[0]);\n      needSpace.height = Math.max(0, size[1]);\n      this._canvas = this._createCanvasFromRect(this._rect);\n      drawAxes(needSpace, cleanPanesCanvases);\n    }\n  },\n  checkForMoreSpaceForPanesCanvas: function checkForMoreSpaceForPanesCanvas() {\n    return this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), this._isRotated());\n  },\n  _parseVisualRangeOption: function _parseVisualRangeOption(fullName, value) {\n    var that = this;\n    var name = fullName.split(/[.[]/)[0];\n    var index = fullName.match(/\\d+/g);\n    index = (0, _type.isDefined)(index) ? parseInt(index[0]) : index;\n\n    if (fullName.indexOf(\"visualRange\") > 0) {\n      that._setCustomVisualRange(name, index, value);\n    } else {\n      if ((\"object\" === (0, _type.type)(value) || _isArray(value)) && name.indexOf(\"Axis\") > 0 && JSON.stringify(value).indexOf(\"visualRange\") > 0) {\n        if ((0, _type.isDefined)(value.visualRange)) {\n          that._setCustomVisualRange(name, index, value.visualRange);\n        } else {\n          if (_isArray(value)) {\n            value.forEach(function (a, i) {\n              return (0, _type.isDefined)(a.visualRange) && that._setCustomVisualRange(name, i, a.visualRange);\n            });\n          }\n        }\n      }\n    }\n  },\n  _setCustomVisualRange: function _setCustomVisualRange(axesName, index, value) {\n    var that = this;\n\n    var options = that._options.silent(axesName);\n\n    if (!options) {\n      return;\n    }\n\n    if (!(0, _type.isDefined)(index)) {\n      options._customVisualRange = value;\n    } else {\n      options[index]._customVisualRange = value;\n    }\n\n    that._axesReinitialized = true;\n  },\n  _raiseZoomEndHandlers: function _raiseZoomEndHandlers() {\n    this._valueAxes.forEach(function (axis) {\n      return axis.handleZoomEnd();\n    });\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n    (0, _extend2.extend)(this._optionsByReference, {\n      \"valueAxis.visualRange\": true\n    });\n  },\n  _notifyOptionChanged: function _notifyOptionChanged(option, value, previousValue) {\n    this.callBase.apply(this, arguments);\n\n    if (!this._optionChangedLocker) {\n      this._parseVisualRangeOption(option, value);\n    }\n  },\n  _notifyVisualRange: function _notifyVisualRange() {\n    var that = this;\n\n    that._valueAxes.forEach(function (axis) {\n      if (axis.getOptions().optionPath) {\n        var path = \"\".concat(axis.getOptions().optionPath, \".visualRange\");\n        var visualRange = (0, _utils.convertVisualRangeObject)(axis.visualRange(), !_isArray(that.option(path)));\n\n        if (!axis.skipEventRising || !(0, _utils.rangesAreEqual)(visualRange, that.option(path))) {\n          that.option(path, visualRange);\n        } else {\n          axis.skipEventRising = null;\n        }\n      }\n    });\n  },\n  _notify: function _notify() {\n    this.callBase();\n    this._axesReinitialized = false;\n\n    if (true !== this.option(\"disableTwoWayBinding\")) {\n      this._notifyVisualRange();\n    }\n  },\n  _getAxesForScaling: function _getAxesForScaling() {\n    return this._valueAxes;\n  },\n  _getAxesByOptionPath: function _getAxesByOptionPath(arg, isDirectOption, optionName) {\n    var that = this;\n\n    var sourceAxes = that._getAxesForScaling();\n\n    var axes = [];\n\n    if (isDirectOption) {\n      var axisPath;\n\n      if (arg.fullName) {\n        axisPath = arg.fullName.slice(0, arg.fullName.indexOf(\".\"));\n      }\n\n      axes = sourceAxes.filter(function (a) {\n        return a.getOptions().optionPath === axisPath;\n      });\n    } else {\n      if (\"object\" === (0, _type.type)(arg.value)) {\n        axes = sourceAxes.filter(function (a) {\n          return a.getOptions().optionPath === arg.name;\n        });\n      } else {\n        if (_isArray(arg.value)) {\n          arg.value.forEach(function (v, index) {\n            var axis = sourceAxes.filter(function (a) {\n              return a.getOptions().optionPath === \"\".concat(arg.name, \"[\").concat(index, \"]\");\n            })[0];\n            (0, _type.isDefined)(v[optionName]) && (0, _type.isDefined)(axis) && (axes[index] = axis);\n          });\n        }\n      }\n    }\n\n    return axes;\n  },\n  _optionChanged: function _optionChanged(arg) {\n    var that = this;\n\n    if (!that._optionChangedLocker) {\n      var optionName = \"visualRange\";\n      var axes;\n      var isDirectOption = arg.fullName.indexOf(optionName) > 0 ? true : that.getPartialChangeOptionsName(arg).indexOf(optionName) > -1 ? false : void 0;\n\n      if ((0, _type.isDefined)(isDirectOption)) {\n        axes = that._getAxesByOptionPath(arg, isDirectOption, optionName);\n\n        if (axes) {\n          if (axes.length > 1 || _isArray(arg.value)) {\n            axes.forEach(function (a, index) {\n              return setAxisVisualRangeByOption(arg, a, isDirectOption, index);\n            });\n          } else {\n            if (1 === axes.length) {\n              setAxisVisualRangeByOption(arg, axes[0], isDirectOption);\n            }\n          }\n        }\n      }\n    }\n\n    that.callBase(arg);\n  },\n  _change_VISUAL_RANGE: function _change_VISUAL_RANGE() {\n    var that = this;\n\n    that._recreateSizeDependentObjects(false);\n\n    if (!that._changes.has(\"FULL_RENDER\")) {\n      var resizePanesOnZoom = that.option(\"resizePanesOnZoom\");\n\n      that._doRender({\n        force: true,\n        drawTitle: false,\n        drawLegend: false,\n        adjustAxes: null !== resizePanesOnZoom && void 0 !== resizePanesOnZoom ? resizePanesOnZoom : that.option(\"adjustAxesOnZoom\") || false,\n        animate: false\n      });\n\n      that._raiseZoomEndHandlers();\n    }\n  },\n  resetVisualRange: function resetVisualRange() {\n    var that = this;\n\n    that._valueAxes.forEach(function (axis) {\n      axis.resetVisualRange(false);\n\n      that._applyCustomVisualRangeOption(axis);\n    });\n\n    that._requestChange([VISUAL_RANGE]);\n  },\n  _legendDataField: \"series\",\n  _adjustSeriesLabels: _common.noop,\n  _correctValueAxes: _common.noop\n});\n\nexports.AdvancedChart = AdvancedChart;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/chart_components/advanced_chart.js"],"names":["exports","AdvancedChart","_extend2","require","_array","_iterator","_range","_base_axis","_series_family","_base_chart","_crosshair","_range_data_calculator","_interopRequireDefault","_type","_common","_utils","obj","__esModule","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_isArray","Array","isArray","DEFAULT_AXIS_NAME","FONT","COMMON_AXIS_SETTINGS","DEFAULT_PANE_NAME","VISUAL_RANGE","prepareAxis","axisOptions","length","processBubbleMargin","opt","bubbleSize","processBubbleSize","size","estimateBubbleSize","panesCount","maxSize","rotated","width","height","Math","min","setAxisVisualRangeByOption","arg","axis","isDirectOption","index","options","visualRange","skipEventRising","pathElements","fullName","split","destElem","allowPartialUpdate","isDefined","getAxisTypes","groupsData","isArgumentAxes","argumentAxisType","argumentType","_groupsData$groups$fi","groups","filter","g","valueAxis","valueAxisType","valueType","BaseChart","inherit","_fontFields","_partialOptionChangesMap","_customVisualRange","strips","constantLines","_partialOptionChangesPath","argumentAxis","_initCore","_panesClipRects","callBase","_disposeCore","disposeObjectsInArray","_disposeObjectsInArray","panesClipRects","call","_dispose","that","panes","_legend","dispose","_disposeAxes","_createPanes","_cleanPanesClipRects","clipArrayName","clipArray","forEach","clipRect","_getElementsClipRectID","paneName","clipShape","fixed","_getPaneIndex","id","paneIndex","name","each","pane","_updateSize","setCanvasValues","_canvas","_reinitAxes","_populateAxes","_axesReinitialized","_getCrosshairMargins","crosshairOptions","_getCrosshairOptions","crosshairEnabled","enabled","margins","getMargins","x","horizontalLine","visible","y","verticalLine","_isRotated","argumentAxesOptions","option","valueAxisOption","valueAxesOptions","argumentAxesPopulatedOptions","valueAxesPopulatedOptions","axisNames","valueAxesCounter","paneWithNonVirtualAxis","crosshairMargins","getNextAxisName","position","map","virtual","_populateAxesOptions","optionPath","crosshairMargin","priority","_axisOptions$panes","axisPanes","inArray","_incidentOccurred","push","concat","slice","unique","_","_redesignAxes","axesBasis","axes","_argumentAxes","_valueAxes","curAxes","a","some","p","axisTypes","_groupsData","updateOptions","setTypes","validate","reverseEach","basis","_disposeAxis","isVirtual","_createAxis","applyVisualRangeSetter","_getVisualRangeSetter","isArgumentAxis","splice","_appendAdditionalSeriesGroups","_crosshairCursorGroup","linkAppend","_scrollBar","_scrollBarGroup","_getLegendTargets","_this","series","s","item","_getLegendOptions","legendData","getOptions","showInLegend","_legendItemTextField","_seriesPopulatedHandlerCore","_processSeriesFamilies","_processValueAxisFormat","_renderTrackers","i","drawTrackers","_specialProcessSeries","_that$seriesFamilies","types","families","paneSeries","themeManager","_themeManager","negativesAsZeroes","negativesAsZeros","familyOptions","minBubbleSize","maxBubbleSize","barGroupPadding","barGroupWidth","seriesFamilies","family","adjustSeriesValues","type","_getLayoutTargets","_getSeriesForPane","SeriesFamily","add","_updateSeriesDimensions","updateSeriesValues","adjustSeriesDimensions","_getLegendCallBack","getActionCallback","_appendAxesGroups","_stripsGroup","_gridGroup","_axesGroup","_constantLinesGroup","_labelAxesGroup","_scaleBreaksGroup","_populateMarginOptions","getSize","argumentMarginOptions","groupSeries","getValueAxis","marginOptions","isVisible","seriesMarginOptions","getMarginOptions","mergeMarginOptions","setMarginOptions","_populateBusinessRange","updatedAxis","keepRange","argRange","Range","_getVisibleSeries","groupRange","seriesRange","getRangeData","addRange","val","setGroupSeries","setBusinessRange","_lastVisualRangeUpdateMode","categories","getArgumentAxis","_this2","defaultPane","_getGroupsData","valueOptions","argumentAxes","argumentOptions","_groupSeries","_correctValueAxes","axesWithFullStackedFormat","isFullStackedSeries","setPercentLabelFormat","indexOf","resetAutoLabelFormat","typeSelector","userOptions","preparedUserOptions","_prepareStripsAndConstantLines","extend","_prepareAxisOptions","tick","minorTick","label","title","_getValFilter","default","getViewPortFilter","renderingSettings","renderer","_renderer","incidentOccurred","eventTrigger","_eventTrigger","axisClass","widgetClass","stripsGroup","labelAxesGroup","constantLinesGroup","scaleBreaksGroup","axesContainerGroup","gridGroup","getTemplate","_getTemplate","template","_getAxisRenderingOptions","Axis","_applyVisualRangeByVirtualAxes","range","_applyCustomVisualRangeOption","_parseVisualRangeOption","chart","_ref","setCustomVisualRange","_applyingChanges","_change_VISUAL_RANGE","_requestChange","_getTrackerSettings","stripStyle","line","constantLineStyle","refresh","_layoutAxes","drawAxes","cleanPanesCanvases","needSpace","checkForMoreSpaceForPanesCanvas","_layout","backward","_rect","max","_createCanvasFromRect","layoutManager","needMoreSpaceForPanesCanvas","match","parseInt","_setCustomVisualRange","JSON","stringify","axesName","_options","silent","_raiseZoomEndHandlers","handleZoomEnd","_setOptionsByReference","_optionsByReference","_notifyOptionChanged","previousValue","apply","arguments","_optionChangedLocker","_notifyVisualRange","path","convertVisualRangeObject","rangesAreEqual","_notify","_getAxesForScaling","_getAxesByOptionPath","optionName","sourceAxes","axisPath","v","_optionChanged","getPartialChangeOptionsName","_recreateSizeDependentObjects","_changes","has","resizePanesOnZoom","_doRender","force","drawTitle","drawLegend","adjustAxes","animate","resetVisualRange","_legendDataField","_adjustSeriesLabels","noop"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/advanced_chart.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.AdvancedChart = void 0;\r\nvar _extend2 = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _range = require(\"../translators/range\");\r\nvar _base_axis = require(\"../axes/base_axis\");\r\nvar _series_family = require(\"../core/series_family\");\r\nvar _base_chart = require(\"./base_chart\");\r\nvar _crosshair = require(\"./crosshair\");\r\nvar _range_data_calculator = _interopRequireDefault(require(\"../series/helpers/range_data_calculator\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _utils = require(\"../core/utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar _isArray = Array.isArray;\r\nvar DEFAULT_AXIS_NAME = \"defaultAxisName\";\r\nvar FONT = \"font\";\r\nvar COMMON_AXIS_SETTINGS = \"commonAxisSettings\";\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\n\r\nfunction prepareAxis(axisOptions) {\r\n    return _isArray(axisOptions) ? 0 === axisOptions.length ? [{}] : axisOptions : [axisOptions]\r\n}\r\n\r\nfunction processBubbleMargin(opt, bubbleSize) {\r\n    if (opt.processBubbleSize) {\r\n        opt.size = bubbleSize\r\n    }\r\n    return opt\r\n}\r\n\r\nfunction estimateBubbleSize(size, panesCount, maxSize, rotated) {\r\n    var width = rotated ? size.width / panesCount : size.width;\r\n    var height = rotated ? size.height : size.height / panesCount;\r\n    return Math.min(width, height) * maxSize\r\n}\r\n\r\nfunction setAxisVisualRangeByOption(arg, axis, isDirectOption, index) {\r\n    var options;\r\n    var visualRange;\r\n    if (isDirectOption) {\r\n        visualRange = arg.value;\r\n        options = {\r\n            skipEventRising: true\r\n        };\r\n        var pathElements = arg.fullName.split(\".\");\r\n        var destElem = pathElements[pathElements.length - 1];\r\n        if (\"endValue\" === destElem || \"startValue\" === destElem) {\r\n            options = {\r\n                allowPartialUpdate: true\r\n            };\r\n            visualRange = _defineProperty({}, destElem, arg.value)\r\n        }\r\n    } else {\r\n        visualRange = ((0, _type.isDefined)(index) ? arg.value[index] : arg.value).visualRange\r\n    }\r\n    axis.visualRange(visualRange, options)\r\n}\r\n\r\nfunction getAxisTypes(groupsData, axis, isArgumentAxes) {\r\n    if (isArgumentAxes) {\r\n        return {\r\n            argumentAxisType: groupsData.argumentAxisType,\r\n            argumentType: groupsData.argumentType\r\n        }\r\n    }\r\n    var _groupsData$groups$fi = groupsData.groups.filter(function(g) {\r\n            return g.valueAxis === axis\r\n        })[0],\r\n        valueAxisType = _groupsData$groups$fi.valueAxisType,\r\n        valueType = _groupsData$groups$fi.valueType;\r\n    return {\r\n        valueAxisType: valueAxisType,\r\n        valueType: valueType\r\n    }\r\n}\r\nvar AdvancedChart = _base_chart.BaseChart.inherit({\r\n    _fontFields: [COMMON_AXIS_SETTINGS + \".label.\" + FONT, COMMON_AXIS_SETTINGS + \".title.\" + FONT],\r\n    _partialOptionChangesMap: {\r\n        visualRange: VISUAL_RANGE,\r\n        _customVisualRange: VISUAL_RANGE,\r\n        strips: \"REFRESH_AXES\",\r\n        constantLines: \"REFRESH_AXES\"\r\n    },\r\n    _partialOptionChangesPath: {\r\n        argumentAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"],\r\n        valueAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"]\r\n    },\r\n    _initCore: function() {\r\n        this._panesClipRects = {};\r\n        this.callBase()\r\n    },\r\n    _disposeCore: function() {\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        var panesClipRects = this._panesClipRects;\r\n        this.callBase();\r\n        disposeObjectsInArray.call(panesClipRects, \"fixed\");\r\n        disposeObjectsInArray.call(panesClipRects, \"base\");\r\n        disposeObjectsInArray.call(panesClipRects, \"wide\");\r\n        this._panesClipRects = null\r\n    },\r\n    _dispose: function() {\r\n        var that = this;\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        that.callBase();\r\n        that.panes = null;\r\n        if (that._legend) {\r\n            that._legend.dispose();\r\n            that._legend = null\r\n        }\r\n        disposeObjectsInArray.call(that, \"panesBackground\");\r\n        disposeObjectsInArray.call(that, \"seriesFamilies\");\r\n        that._disposeAxes()\r\n    },\r\n    _createPanes: function() {\r\n        this._cleanPanesClipRects(\"fixed\");\r\n        this._cleanPanesClipRects(\"base\");\r\n        this._cleanPanesClipRects(\"wide\")\r\n    },\r\n    _cleanPanesClipRects: function(clipArrayName) {\r\n        var clipArray = this._panesClipRects[clipArrayName];\r\n        (clipArray || []).forEach(function(clipRect) {\r\n            return clipRect && clipRect.dispose()\r\n        });\r\n        this._panesClipRects[clipArrayName] = []\r\n    },\r\n    _getElementsClipRectID: function(paneName) {\r\n        var clipShape = this._panesClipRects.fixed[this._getPaneIndex(paneName)];\r\n        return clipShape && clipShape.id\r\n    },\r\n    _getPaneIndex: function(paneName) {\r\n        var paneIndex;\r\n        var name = paneName || DEFAULT_PANE_NAME;\r\n        (0, _iterator.each)(this.panes, function(index, pane) {\r\n            if (pane.name === name) {\r\n                paneIndex = index;\r\n                return false\r\n            }\r\n        });\r\n        return paneIndex\r\n    },\r\n    _updateSize: function() {\r\n        this.callBase();\r\n        (0, _utils.setCanvasValues)(this._canvas)\r\n    },\r\n    _reinitAxes: function() {\r\n        this.panes = this._createPanes();\r\n        this._populateAxes();\r\n        this._axesReinitialized = true\r\n    },\r\n    _getCrosshairMargins: function() {\r\n        var crosshairOptions = this._getCrosshairOptions() || {};\r\n        var crosshairEnabled = crosshairOptions.enabled;\r\n        var margins = (0, _crosshair.getMargins)();\r\n        return {\r\n            x: crosshairEnabled && crosshairOptions.horizontalLine.visible ? margins.x : 0,\r\n            y: crosshairEnabled && crosshairOptions.verticalLine.visible ? margins.y : 0\r\n        }\r\n    },\r\n    _populateAxes: function() {\r\n        var that = this;\r\n        var panes = that.panes;\r\n        var rotated = that._isRotated();\r\n        var argumentAxesOptions = prepareAxis(that.option(\"argumentAxis\") || {})[0];\r\n        var valueAxisOption = that.option(\"valueAxis\");\r\n        var valueAxesOptions = prepareAxis(valueAxisOption || {});\r\n        var argumentAxesPopulatedOptions = [];\r\n        var valueAxesPopulatedOptions = [];\r\n        var axisNames = [];\r\n        var valueAxesCounter = 0;\r\n        var paneWithNonVirtualAxis;\r\n        var crosshairMargins = that._getCrosshairMargins();\r\n\r\n        function getNextAxisName() {\r\n            return DEFAULT_AXIS_NAME + valueAxesCounter++\r\n        }\r\n        if (rotated) {\r\n            paneWithNonVirtualAxis = \"right\" === argumentAxesOptions.position ? panes[panes.length - 1].name : panes[0].name\r\n        } else {\r\n            paneWithNonVirtualAxis = \"top\" === argumentAxesOptions.position ? panes[0].name : panes[panes.length - 1].name\r\n        }\r\n        argumentAxesPopulatedOptions = (0, _utils.map)(panes, function(pane) {\r\n            var virtual = pane.name !== paneWithNonVirtualAxis;\r\n            return that._populateAxesOptions(\"argumentAxis\", argumentAxesOptions, {\r\n                pane: pane.name,\r\n                name: null,\r\n                optionPath: \"argumentAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.x : crosshairMargins.y\r\n            }, rotated, virtual)\r\n        });\r\n        (0, _iterator.each)(valueAxesOptions, function(priority, axisOptions) {\r\n            var _axisOptions$panes;\r\n            var axisPanes = [];\r\n            var name = axisOptions.name;\r\n            if (name && (0, _array.inArray)(name, axisNames) !== -1) {\r\n                that._incidentOccurred(\"E2102\");\r\n                return\r\n            }\r\n            name && axisNames.push(name);\r\n            if (axisOptions.pane) {\r\n                axisPanes.push(axisOptions.pane)\r\n            }\r\n            if (null === (_axisOptions$panes = axisOptions.panes) || void 0 === _axisOptions$panes ? void 0 : _axisOptions$panes.length) {\r\n                axisPanes = axisPanes.concat(axisOptions.panes.slice(0))\r\n            }\r\n            axisPanes = (0, _utils.unique)(axisPanes);\r\n            if (!axisPanes.length) {\r\n                axisPanes.push(void 0)\r\n            }(0, _iterator.each)(axisPanes, function(_, pane) {\r\n                var optionPath = _isArray(valueAxisOption) ? \"valueAxis[\".concat(priority, \"]\") : \"valueAxis\";\r\n                valueAxesPopulatedOptions.push(that._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                    name: name || getNextAxisName(),\r\n                    pane: pane,\r\n                    priority: priority,\r\n                    optionPath: optionPath,\r\n                    crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n                }, rotated))\r\n            })\r\n        });\r\n        that._redesignAxes(argumentAxesPopulatedOptions, true, paneWithNonVirtualAxis);\r\n        that._redesignAxes(valueAxesPopulatedOptions, false)\r\n    },\r\n    _redesignAxes: function(options, isArgumentAxes, paneWithNonVirtualAxis) {\r\n        var that = this;\r\n        var axesBasis = [];\r\n        var axes = isArgumentAxes ? that._argumentAxes : that._valueAxes;\r\n        (0, _iterator.each)(options, function(_, opt) {\r\n            var curAxes = axes && axes.filter(function(a) {\r\n                return a.name === opt.name && (!(0, _type.isDefined)(opt.pane) && that.panes.some(function(p) {\r\n                    return p.name === a.pane\r\n                }) || a.pane === opt.pane)\r\n            });\r\n            if (curAxes && curAxes.length > 0) {\r\n                (0, _iterator.each)(curAxes, function(_, axis) {\r\n                    var axisTypes = getAxisTypes(that._groupsData, axis, isArgumentAxes);\r\n                    axis.updateOptions(opt);\r\n                    if (isArgumentAxes) {\r\n                        axis.setTypes(axisTypes.argumentAxisType, axisTypes.argumentType, \"argumentType\")\r\n                    } else {\r\n                        axis.setTypes(axisTypes.valueAxisType, axisTypes.valueType, \"valueType\")\r\n                    }\r\n                    axis.validate();\r\n                    axesBasis.push({\r\n                        axis: axis\r\n                    })\r\n                })\r\n            } else {\r\n                axesBasis.push({\r\n                    options: opt\r\n                })\r\n            }\r\n        });\r\n        if (axes) {\r\n            (0, _iterator.reverseEach)(axes, function(index, axis) {\r\n                if (!axesBasis.some(function(basis) {\r\n                        return basis.axis && basis.axis === axis\r\n                    })) {\r\n                    that._disposeAxis(index, isArgumentAxes)\r\n                }\r\n            })\r\n        } else {\r\n            if (isArgumentAxes) {\r\n                axes = that._argumentAxes = []\r\n            } else {\r\n                axes = that._valueAxes = []\r\n            }\r\n        }(0, _iterator.each)(axesBasis, function(_, basis) {\r\n            var axis = basis.axis;\r\n            if (basis.axis && isArgumentAxes) {\r\n                basis.axis.isVirtual = basis.axis.pane !== paneWithNonVirtualAxis\r\n            } else {\r\n                if (basis.options) {\r\n                    axis = that._createAxis(isArgumentAxes, basis.options, isArgumentAxes ? basis.options.pane !== paneWithNonVirtualAxis : void 0);\r\n                    axes.push(axis)\r\n                }\r\n            }\r\n            axis.applyVisualRangeSetter(that._getVisualRangeSetter())\r\n        })\r\n    },\r\n    _disposeAxis: function(index, isArgumentAxis) {\r\n        var axes = isArgumentAxis ? this._argumentAxes : this._valueAxes;\r\n        var axis = axes[index];\r\n        if (!axis) {\r\n            return\r\n        }\r\n        axis.dispose();\r\n        axes.splice(index, 1)\r\n    },\r\n    _disposeAxes: function() {\r\n        var that = this;\r\n        var disposeObjectsInArray = that._disposeObjectsInArray;\r\n        disposeObjectsInArray.call(that, \"_argumentAxes\");\r\n        disposeObjectsInArray.call(that, \"_valueAxes\")\r\n    },\r\n    _appendAdditionalSeriesGroups: function() {\r\n        this._crosshairCursorGroup.linkAppend();\r\n        this._scrollBar && this._scrollBarGroup.linkAppend()\r\n    },\r\n    _getLegendTargets: function() {\r\n        var _this = this;\r\n        return (this.series || []).map(function(s) {\r\n            var item = _this._getLegendOptions(s);\r\n            item.legendData.series = s;\r\n            if (!s.getOptions().showInLegend) {\r\n                item.legendData.visible = false\r\n            }\r\n            return item\r\n        })\r\n    },\r\n    _legendItemTextField: \"name\",\r\n    _seriesPopulatedHandlerCore: function() {\r\n        this._processSeriesFamilies();\r\n        this._processValueAxisFormat()\r\n    },\r\n    _renderTrackers: function() {\r\n        var that = this;\r\n        var i;\r\n        for (i = 0; i < that.series.length; ++i) {\r\n            that.series[i].drawTrackers()\r\n        }\r\n    },\r\n    _specialProcessSeries: function() {\r\n        this._processSeriesFamilies()\r\n    },\r\n    _processSeriesFamilies: function() {\r\n        var _that$seriesFamilies;\r\n        var that = this;\r\n        var types = [];\r\n        var families = [];\r\n        var paneSeries;\r\n        var themeManager = that._themeManager;\r\n        var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\r\n        var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\r\n        var familyOptions = {\r\n            minBubbleSize: themeManager.getOptions(\"minBubbleSize\"),\r\n            maxBubbleSize: themeManager.getOptions(\"maxBubbleSize\"),\r\n            barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\r\n            barGroupWidth: themeManager.getOptions(\"barGroupWidth\"),\r\n            negativesAsZeroes: (0, _type.isDefined)(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros\r\n        };\r\n        if (null === (_that$seriesFamilies = that.seriesFamilies) || void 0 === _that$seriesFamilies ? void 0 : _that$seriesFamilies.length) {\r\n            (0, _iterator.each)(that.seriesFamilies, function(_, family) {\r\n                family.updateOptions(familyOptions);\r\n                family.adjustSeriesValues()\r\n            });\r\n            return\r\n        }(0, _iterator.each)(that.series, function(_, item) {\r\n            if ((0, _array.inArray)(item.type, types) === -1) {\r\n                types.push(item.type)\r\n            }\r\n        });\r\n        (0, _iterator.each)(that._getLayoutTargets(), function(_, pane) {\r\n            paneSeries = that._getSeriesForPane(pane.name);\r\n            (0, _iterator.each)(types, function(_, type) {\r\n                var family = new _series_family.SeriesFamily({\r\n                    type: type,\r\n                    pane: pane.name,\r\n                    minBubbleSize: familyOptions.minBubbleSize,\r\n                    maxBubbleSize: familyOptions.maxBubbleSize,\r\n                    barGroupPadding: familyOptions.barGroupPadding,\r\n                    barGroupWidth: familyOptions.barGroupWidth,\r\n                    negativesAsZeroes: familyOptions.negativesAsZeroes,\r\n                    rotated: that._isRotated()\r\n                });\r\n                family.add(paneSeries);\r\n                family.adjustSeriesValues();\r\n                families.push(family)\r\n            })\r\n        });\r\n        that.seriesFamilies = families\r\n    },\r\n    _updateSeriesDimensions: function() {\r\n        var that = this;\r\n        var i;\r\n        var seriesFamilies = that.seriesFamilies || [];\r\n        for (i = 0; i < seriesFamilies.length; i++) {\r\n            var family = seriesFamilies[i];\r\n            family.updateSeriesValues();\r\n            family.adjustSeriesDimensions()\r\n        }\r\n    },\r\n    _getLegendCallBack: function(series) {\r\n        return this._legend && this._legend.getActionCallback(series)\r\n    },\r\n    _appendAxesGroups: function() {\r\n        var that = this;\r\n        that._stripsGroup.linkAppend();\r\n        that._gridGroup.linkAppend();\r\n        that._axesGroup.linkAppend();\r\n        that._constantLinesGroup.linkAppend();\r\n        that._labelAxesGroup.linkAppend();\r\n        that._scaleBreaksGroup.linkAppend()\r\n    },\r\n    _populateMarginOptions: function() {\r\n        var that = this;\r\n        var bubbleSize = estimateBubbleSize(that.getSize(), that.panes.length, that._themeManager.getOptions(\"maxBubbleSize\"), that._isRotated());\r\n        var argumentMarginOptions = {};\r\n        that._valueAxes.forEach(function(valueAxis) {\r\n            var groupSeries = that.series.filter(function(series) {\r\n                return series.getValueAxis() === valueAxis\r\n            });\r\n            var marginOptions = {};\r\n            groupSeries.forEach(function(series) {\r\n                if (series.isVisible()) {\r\n                    var seriesMarginOptions = processBubbleMargin(series.getMarginOptions(), bubbleSize);\r\n                    marginOptions = (0, _utils.mergeMarginOptions)(marginOptions, seriesMarginOptions);\r\n                    argumentMarginOptions = (0, _utils.mergeMarginOptions)(argumentMarginOptions, seriesMarginOptions)\r\n                }\r\n            });\r\n            valueAxis.setMarginOptions(marginOptions)\r\n        });\r\n        that._argumentAxes.forEach(function(a) {\r\n            return a.setMarginOptions(argumentMarginOptions)\r\n        })\r\n    },\r\n    _populateBusinessRange: function(updatedAxis, keepRange) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var argRange = new _range.Range({\r\n            rotated: !!rotated\r\n        });\r\n        var series = that._getVisibleSeries();\r\n        that._valueAxes.forEach(function(valueAxis) {\r\n            var groupRange = new _range.Range({\r\n                rotated: !!rotated,\r\n                pane: valueAxis.pane,\r\n                axis: valueAxis.name\r\n            });\r\n            var groupSeries = series.filter(function(series) {\r\n                return series.getValueAxis() === valueAxis\r\n            });\r\n            groupSeries.forEach(function(series) {\r\n                var seriesRange = series.getRangeData();\r\n                groupRange.addRange(seriesRange.val);\r\n                argRange.addRange(seriesRange.arg)\r\n            });\r\n            if (!updatedAxis || updatedAxis && groupSeries.length && valueAxis === updatedAxis) {\r\n                valueAxis.setGroupSeries(groupSeries);\r\n                valueAxis.setBusinessRange(groupRange, that._axesReinitialized || keepRange, that._argumentAxes[0]._lastVisualRangeUpdateMode)\r\n            }\r\n        });\r\n        if (!updatedAxis || updatedAxis && series.length) {\r\n            that._argumentAxes.forEach(function(a) {\r\n                return a.setBusinessRange(argRange, that._axesReinitialized, void 0, that._groupsData.categories)\r\n            })\r\n        }\r\n        that._populateMarginOptions()\r\n    },\r\n    getArgumentAxis: function() {\r\n        return (this._argumentAxes || []).filter(function(a) {\r\n            return !a.isVirtual\r\n        })[0]\r\n    },\r\n    getValueAxis: function(name) {\r\n        var _this2 = this;\r\n        return (this._valueAxes || []).filter((0, _type.isDefined)(name) ? function(a) {\r\n            return a.name === name\r\n        } : function(a) {\r\n            return a.pane === _this2.defaultPane\r\n        })[0]\r\n    },\r\n    _getGroupsData: function() {\r\n        var that = this;\r\n        var groups = [];\r\n        that._valueAxes.forEach(function(axis) {\r\n            groups.push({\r\n                series: that.series.filter(function(series) {\r\n                    return series.getValueAxis() === axis\r\n                }),\r\n                valueAxis: axis,\r\n                valueOptions: axis.getOptions()\r\n            })\r\n        });\r\n        return {\r\n            groups: groups,\r\n            argumentAxes: that._argumentAxes,\r\n            argumentOptions: that._argumentAxes[0].getOptions()\r\n        }\r\n    },\r\n    _groupSeries: function() {\r\n        var that = this;\r\n        that._correctValueAxes(false);\r\n        that._groupsData = that._getGroupsData()\r\n    },\r\n    _processValueAxisFormat: function() {\r\n        var axesWithFullStackedFormat = [];\r\n        this.series.forEach(function(series) {\r\n            var axis = series.getValueAxis();\r\n            if (series.isFullStackedSeries()) {\r\n                axis.setPercentLabelFormat();\r\n                axesWithFullStackedFormat.push(axis)\r\n            }\r\n        });\r\n        this._valueAxes.forEach(function(axis) {\r\n            if (axesWithFullStackedFormat.indexOf(axis) === -1) {\r\n                axis.resetAutoLabelFormat()\r\n            }\r\n        })\r\n    },\r\n    _populateAxesOptions: function(typeSelector, userOptions, axisOptions, rotated, virtual) {\r\n        var that = this;\r\n        var preparedUserOptions = that._prepareStripsAndConstantLines(typeSelector, userOptions, rotated);\r\n        var options = (0, _extend2.extend)(true, {}, preparedUserOptions, axisOptions, that._prepareAxisOptions(typeSelector, preparedUserOptions, rotated));\r\n        if (virtual) {\r\n            options.visible = options.tick.visible = options.minorTick.visible = options.label.visible = false;\r\n            options.title = {}\r\n        }\r\n        return options\r\n    },\r\n    _getValFilter: function(series) {\r\n        return _range_data_calculator.default.getViewPortFilter(series.getValueAxis().visualRange() || {})\r\n    },\r\n    _createAxis: function(isArgumentAxes, options, virtual) {\r\n        var that = this;\r\n        var typeSelector = isArgumentAxes ? \"argumentAxis\" : \"valueAxis\";\r\n        var renderingSettings = (0, _extend2.extend)({\r\n            renderer: that._renderer,\r\n            incidentOccurred: that._incidentOccurred,\r\n            eventTrigger: that._eventTrigger,\r\n            axisClass: isArgumentAxes ? \"arg\" : \"val\",\r\n            widgetClass: \"dxc\",\r\n            stripsGroup: that._stripsGroup,\r\n            labelAxesGroup: that._labelAxesGroup,\r\n            constantLinesGroup: that._constantLinesGroup,\r\n            scaleBreaksGroup: that._scaleBreaksGroup,\r\n            axesContainerGroup: that._axesGroup,\r\n            gridGroup: that._gridGroup,\r\n            isArgumentAxis: isArgumentAxes,\r\n            getTemplate: function() {\r\n                return that._getTemplate(options.label.template)\r\n            }\r\n        }, that._getAxisRenderingOptions(typeSelector));\r\n        var axis = new _base_axis.Axis(renderingSettings);\r\n        axis.updateOptions(options);\r\n        axis.isVirtual = virtual;\r\n        return axis\r\n    },\r\n    _applyVisualRangeByVirtualAxes: function(axis, range) {\r\n        return false\r\n    },\r\n    _applyCustomVisualRangeOption: function(axis, range) {\r\n        var that = this;\r\n        if (axis.getOptions().optionPath) {\r\n            that._parseVisualRangeOption(\"\".concat(axis.getOptions().optionPath, \".visualRange\"), range)\r\n        }\r\n    },\r\n    _getVisualRangeSetter: function() {\r\n        var chart = this;\r\n        return function(axis, _ref) {\r\n            var skipEventRising = _ref.skipEventRising,\r\n                range = _ref.range;\r\n            chart._applyCustomVisualRangeOption(axis, range);\r\n            axis.setCustomVisualRange(range);\r\n            axis.skipEventRising = skipEventRising;\r\n            if (!chart._applyVisualRangeByVirtualAxes(axis, range)) {\r\n                if (chart._applyingChanges) {\r\n                    chart._change_VISUAL_RANGE()\r\n                } else {\r\n                    chart._requestChange([VISUAL_RANGE])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return (0, _extend2.extend)(this.callBase(), {\r\n            argumentAxis: this.getArgumentAxis()\r\n        })\r\n    },\r\n    _prepareStripsAndConstantLines: function(typeSelector, userOptions, rotated) {\r\n        userOptions = this._themeManager.getOptions(typeSelector, userOptions, rotated);\r\n        if (userOptions.strips) {\r\n            (0, _iterator.each)(userOptions.strips, function(i) {\r\n                userOptions.strips[i] = (0, _extend2.extend)(true, {}, userOptions.stripStyle, userOptions.strips[i])\r\n            })\r\n        }\r\n        if (userOptions.constantLines) {\r\n            (0, _iterator.each)(userOptions.constantLines, function(i, line) {\r\n                userOptions.constantLines[i] = (0, _extend2.extend)(true, {}, userOptions.constantLineStyle, line)\r\n            })\r\n        }\r\n        return userOptions\r\n    },\r\n    refresh: function() {\r\n        this._disposeAxes();\r\n        this.callBase()\r\n    },\r\n    _layoutAxes: function(drawAxes) {\r\n        var that = this;\r\n        var cleanPanesCanvases = drawAxes();\r\n        var needSpace = that.checkForMoreSpaceForPanesCanvas();\r\n        if (needSpace) {\r\n            var size = this._layout.backward(this._rect, this._rect, [needSpace.width, needSpace.height]);\r\n            needSpace.width = Math.max(0, size[0]);\r\n            needSpace.height = Math.max(0, size[1]);\r\n            this._canvas = this._createCanvasFromRect(this._rect);\r\n            drawAxes(needSpace, cleanPanesCanvases)\r\n        }\r\n    },\r\n    checkForMoreSpaceForPanesCanvas: function() {\r\n        return this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), this._isRotated())\r\n    },\r\n    _parseVisualRangeOption: function(fullName, value) {\r\n        var that = this;\r\n        var name = fullName.split(/[.[]/)[0];\r\n        var index = fullName.match(/\\d+/g);\r\n        index = (0, _type.isDefined)(index) ? parseInt(index[0]) : index;\r\n        if (fullName.indexOf(\"visualRange\") > 0) {\r\n            that._setCustomVisualRange(name, index, value)\r\n        } else {\r\n            if ((\"object\" === (0, _type.type)(value) || _isArray(value)) && name.indexOf(\"Axis\") > 0 && JSON.stringify(value).indexOf(\"visualRange\") > 0) {\r\n                if ((0, _type.isDefined)(value.visualRange)) {\r\n                    that._setCustomVisualRange(name, index, value.visualRange)\r\n                } else {\r\n                    if (_isArray(value)) {\r\n                        value.forEach(function(a, i) {\r\n                            return (0, _type.isDefined)(a.visualRange) && that._setCustomVisualRange(name, i, a.visualRange)\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _setCustomVisualRange: function(axesName, index, value) {\r\n        var that = this;\r\n        var options = that._options.silent(axesName);\r\n        if (!options) {\r\n            return\r\n        }\r\n        if (!(0, _type.isDefined)(index)) {\r\n            options._customVisualRange = value\r\n        } else {\r\n            options[index]._customVisualRange = value\r\n        }\r\n        that._axesReinitialized = true\r\n    },\r\n    _raiseZoomEndHandlers: function() {\r\n        this._valueAxes.forEach(function(axis) {\r\n            return axis.handleZoomEnd()\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend2.extend)(this._optionsByReference, {\r\n            \"valueAxis.visualRange\": true\r\n        })\r\n    },\r\n    _notifyOptionChanged: function(option, value, previousValue) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._optionChangedLocker) {\r\n            this._parseVisualRangeOption(option, value)\r\n        }\r\n    },\r\n    _notifyVisualRange: function() {\r\n        var that = this;\r\n        that._valueAxes.forEach(function(axis) {\r\n            if (axis.getOptions().optionPath) {\r\n                var path = \"\".concat(axis.getOptions().optionPath, \".visualRange\");\r\n                var visualRange = (0, _utils.convertVisualRangeObject)(axis.visualRange(), !_isArray(that.option(path)));\r\n                if (!axis.skipEventRising || !(0, _utils.rangesAreEqual)(visualRange, that.option(path))) {\r\n                    that.option(path, visualRange)\r\n                } else {\r\n                    axis.skipEventRising = null\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _notify: function() {\r\n        this.callBase();\r\n        this._axesReinitialized = false;\r\n        if (true !== this.option(\"disableTwoWayBinding\")) {\r\n            this._notifyVisualRange()\r\n        }\r\n    },\r\n    _getAxesForScaling: function() {\r\n        return this._valueAxes\r\n    },\r\n    _getAxesByOptionPath: function(arg, isDirectOption, optionName) {\r\n        var that = this;\r\n        var sourceAxes = that._getAxesForScaling();\r\n        var axes = [];\r\n        if (isDirectOption) {\r\n            var axisPath;\r\n            if (arg.fullName) {\r\n                axisPath = arg.fullName.slice(0, arg.fullName.indexOf(\".\"))\r\n            }\r\n            axes = sourceAxes.filter(function(a) {\r\n                return a.getOptions().optionPath === axisPath\r\n            })\r\n        } else {\r\n            if (\"object\" === (0, _type.type)(arg.value)) {\r\n                axes = sourceAxes.filter(function(a) {\r\n                    return a.getOptions().optionPath === arg.name\r\n                })\r\n            } else {\r\n                if (_isArray(arg.value)) {\r\n                    arg.value.forEach(function(v, index) {\r\n                        var axis = sourceAxes.filter(function(a) {\r\n                            return a.getOptions().optionPath === \"\".concat(arg.name, \"[\").concat(index, \"]\")\r\n                        })[0];\r\n                        (0, _type.isDefined)(v[optionName]) && (0, _type.isDefined)(axis) && (axes[index] = axis)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return axes\r\n    },\r\n    _optionChanged: function(arg) {\r\n        var that = this;\r\n        if (!that._optionChangedLocker) {\r\n            var optionName = \"visualRange\";\r\n            var axes;\r\n            var isDirectOption = arg.fullName.indexOf(optionName) > 0 ? true : that.getPartialChangeOptionsName(arg).indexOf(optionName) > -1 ? false : void 0;\r\n            if ((0, _type.isDefined)(isDirectOption)) {\r\n                axes = that._getAxesByOptionPath(arg, isDirectOption, optionName);\r\n                if (axes) {\r\n                    if (axes.length > 1 || _isArray(arg.value)) {\r\n                        axes.forEach(function(a, index) {\r\n                            return setAxisVisualRangeByOption(arg, a, isDirectOption, index)\r\n                        })\r\n                    } else {\r\n                        if (1 === axes.length) {\r\n                            setAxisVisualRangeByOption(arg, axes[0], isDirectOption)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        that.callBase(arg)\r\n    },\r\n    _change_VISUAL_RANGE: function() {\r\n        var that = this;\r\n        that._recreateSizeDependentObjects(false);\r\n        if (!that._changes.has(\"FULL_RENDER\")) {\r\n            var resizePanesOnZoom = that.option(\"resizePanesOnZoom\");\r\n            that._doRender({\r\n                force: true,\r\n                drawTitle: false,\r\n                drawLegend: false,\r\n                adjustAxes: null !== resizePanesOnZoom && void 0 !== resizePanesOnZoom ? resizePanesOnZoom : that.option(\"adjustAxesOnZoom\") || false,\r\n                animate: false\r\n            });\r\n            that._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    resetVisualRange: function() {\r\n        var that = this;\r\n        that._valueAxes.forEach(function(axis) {\r\n            axis.resetVisualRange(false);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that._requestChange([VISUAL_RANGE])\r\n    },\r\n    _legendDataField: \"series\",\r\n    _adjustSeriesLabels: _common.noop,\r\n    _correctValueAxes: _common.noop\r\n});\r\nexports.AdvancedChart = AdvancedChart;\r\n"]},"metadata":{},"sourceType":"script"}