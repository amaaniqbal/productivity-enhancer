{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/error.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = _default;\n\nvar _extend = require(\"./extend\");\n\nvar _console = require(\"./console\");\n\nvar _string = require(\"./string\");\n\nvar _version = _interopRequireDefault(require(\"../version\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ERROR_URL = \"http://js.devexpress.com/error/\" + _version.default.split(\".\").slice(0, 2).join(\"_\") + \"/\";\n\nfunction _default(baseErrors, errors) {\n  var exports = {\n    ERROR_MESSAGES: (0, _extend.extend)(errors, baseErrors),\n    Error: function Error() {\n      return makeError([].slice.call(arguments));\n    },\n    log: function log(id) {\n      var method = \"log\";\n\n      if (/^E\\d+$/.test(id)) {\n        method = \"error\";\n      } else {\n        if (/^W\\d+$/.test(id)) {\n          method = \"warn\";\n        }\n      }\n\n      _console.logger[method](\"log\" === method ? id : combineMessage([].slice.call(arguments)));\n    }\n  };\n\n  function combineMessage(args) {\n    var id = args[0];\n    args = args.slice(1);\n    return formatMessage(id, formatDetails(id, args));\n  }\n\n  function formatDetails(id, args) {\n    args = [exports.ERROR_MESSAGES[id]].concat(args);\n    return _string.format.apply(this, args).replace(/\\.*\\s*?$/, \"\");\n  }\n\n  function formatMessage(id, details) {\n    return _string.format.apply(this, [\"{0} - {1}. See:\\n{2}\", id, details, getErrorUrl(id)]);\n  }\n\n  function makeError(args) {\n    var id = args[0];\n    args = args.slice(1);\n    var details = formatDetails(id, args);\n    var url = getErrorUrl(id);\n    var message = formatMessage(id, details);\n    return (0, _extend.extend)(new Error(message), {\n      __id: id,\n      __details: details,\n      url: url\n    });\n  }\n\n  function getErrorUrl(id) {\n    return ERROR_URL + id;\n  }\n\n  return exports;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/core/utils/error.js"],"names":["exports","default","_default","_extend","require","_console","_string","_version","_interopRequireDefault","obj","__esModule","ERROR_URL","split","slice","join","baseErrors","errors","ERROR_MESSAGES","extend","Error","makeError","call","arguments","log","id","method","test","logger","combineMessage","args","formatMessage","formatDetails","concat","format","apply","replace","details","getErrorUrl","url","message","__id","__details","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/error.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = _default;\r\nvar _extend = require(\"./extend\");\r\nvar _console = require(\"./console\");\r\nvar _string = require(\"./string\");\r\nvar _version = _interopRequireDefault(require(\"../version\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ERROR_URL = \"http://js.devexpress.com/error/\" + _version.default.split(\".\").slice(0, 2).join(\"_\") + \"/\";\r\n\r\nfunction _default(baseErrors, errors) {\r\n    var exports = {\r\n        ERROR_MESSAGES: (0, _extend.extend)(errors, baseErrors),\r\n        Error: function() {\r\n            return makeError([].slice.call(arguments))\r\n        },\r\n        log: function(id) {\r\n            var method = \"log\";\r\n            if (/^E\\d+$/.test(id)) {\r\n                method = \"error\"\r\n            } else {\r\n                if (/^W\\d+$/.test(id)) {\r\n                    method = \"warn\"\r\n                }\r\n            }\r\n            _console.logger[method](\"log\" === method ? id : combineMessage([].slice.call(arguments)))\r\n        }\r\n    };\r\n\r\n    function combineMessage(args) {\r\n        var id = args[0];\r\n        args = args.slice(1);\r\n        return formatMessage(id, formatDetails(id, args))\r\n    }\r\n\r\n    function formatDetails(id, args) {\r\n        args = [exports.ERROR_MESSAGES[id]].concat(args);\r\n        return _string.format.apply(this, args).replace(/\\.*\\s*?$/, \"\")\r\n    }\r\n\r\n    function formatMessage(id, details) {\r\n        return _string.format.apply(this, [\"{0} - {1}. See:\\n{2}\", id, details, getErrorUrl(id)])\r\n    }\r\n\r\n    function makeError(args) {\r\n        var id = args[0];\r\n        args = args.slice(1);\r\n        var details = formatDetails(id, args);\r\n        var url = getErrorUrl(id);\r\n        var message = formatMessage(id, details);\r\n        return (0, _extend.extend)(new Error(message), {\r\n            __id: id,\r\n            __details: details,\r\n            url: url\r\n        })\r\n    }\r\n\r\n    function getErrorUrl(id) {\r\n        return ERROR_URL + id\r\n    }\r\n    return exports\r\n}\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}