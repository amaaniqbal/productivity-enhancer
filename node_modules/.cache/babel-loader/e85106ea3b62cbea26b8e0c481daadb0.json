{"ast":null,"code":"/**\r\n * DevExtreme (exporter/svg_creator.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.getData = getData;\nexports.svgCreator = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\n\nvar _ajax = _interopRequireDefault(require(\"../core/utils/ajax\"));\n\nvar _window = require(\"../core/utils/window\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _svg = require(\"../core/utils/svg\");\n\nvar _deferred = require(\"../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar window = (0, _window.getWindow)();\nvar svgCreator = {\n  _markup: \"\",\n  _imageArray: {},\n  _imageDeferreds: [],\n  _getBinaryFile: function _getBinaryFile(src, callback) {\n    _ajax.default.sendRequest({\n      url: src,\n      method: \"GET\",\n      responseType: \"arraybuffer\"\n    }).done(callback).fail(function () {\n      callback(false);\n    });\n  },\n  _loadImages: function _loadImages() {\n    var that = this;\n    (0, _iterator.each)(that._imageArray, function (src) {\n      var deferred = new _deferred.Deferred();\n\n      that._imageDeferreds.push(deferred);\n\n      that._getBinaryFile(src, function (response) {\n        if (!response) {\n          delete that._imageArray[src];\n          deferred.resolve();\n          return;\n        }\n\n        var i;\n        var binary = \"\";\n        var bytes = new Uint8Array(response);\n        var length = bytes.byteLength;\n\n        for (i = 0; i < length; i++) {\n          binary += String.fromCharCode(bytes[i]);\n        }\n\n        that._imageArray[src] = \"data:image/png;base64,\" + window.btoa(binary);\n        deferred.resolve();\n      });\n    });\n  },\n  _parseImages: function _parseImages(element) {\n    var href;\n    var that = this;\n\n    if (\"image\" === element.tagName) {\n      href = (0, _renderer.default)(element).attr(\"href\") || (0, _renderer.default)(element).attr(\"xlink:href\");\n\n      if (!that._imageArray[href]) {\n        that._imageArray[href] = \"\";\n      }\n    }\n\n    (0, _iterator.each)(element.childNodes, function (_, element) {\n      that._parseImages(element);\n    });\n  },\n  _prepareImages: function _prepareImages(svgElem) {\n    this._parseImages(svgElem);\n\n    this._loadImages();\n\n    return _deferred.when.apply(_renderer.default, this._imageDeferreds);\n  },\n  getData: function getData(data, options) {\n    var markup;\n    var that = this;\n    var xmlVersion = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>';\n    var svgElem = (0, _svg.getSvgElement)(data);\n    var $svgObject = (0, _renderer.default)(svgElem);\n    markup = xmlVersion + (0, _svg.getSvgMarkup)($svgObject.get(0), options.backgroundColor);\n    return that._prepareImages(svgElem).then(function () {\n      (0, _iterator.each)(that._imageArray, function (href, dataURI) {\n        var regexpString = \"href=['|\\\"]\".concat(href, \"['|\\\"]\");\n        markup = markup.replace(new RegExp(regexpString, \"gi\"), 'href=\"'.concat(dataURI, '\"'));\n      });\n      return (0, _type.isFunction)(window.Blob) ? that._getBlob(markup) : that._getBase64(markup);\n    });\n  },\n  _getBlob: function _getBlob(markup) {\n    return new window.Blob([markup], {\n      type: \"image/svg+xml\"\n    });\n  },\n  _getBase64: function _getBase64(markup) {\n    return window.btoa(markup);\n  }\n};\nexports.svgCreator = svgCreator;\n\nfunction getData(data, options) {\n  return svgCreator.getData(data, options);\n}","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/exporter/svg_creator.js"],"names":["exports","getData","svgCreator","_renderer","_interopRequireDefault","require","_ajax","_window","_type","_iterator","_svg","_deferred","obj","__esModule","window","getWindow","_markup","_imageArray","_imageDeferreds","_getBinaryFile","src","callback","default","sendRequest","url","method","responseType","done","fail","_loadImages","that","each","deferred","Deferred","push","response","resolve","i","binary","bytes","Uint8Array","length","byteLength","String","fromCharCode","btoa","_parseImages","element","href","tagName","attr","childNodes","_","_prepareImages","svgElem","when","apply","data","options","markup","xmlVersion","getSvgElement","$svgObject","getSvgMarkup","get","backgroundColor","then","dataURI","regexpString","concat","replace","RegExp","isFunction","Blob","_getBlob","_getBase64","type"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (exporter/svg_creator.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getData = getData;\r\nexports.svgCreator = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _ajax = _interopRequireDefault(require(\"../core/utils/ajax\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _svg = require(\"../core/utils/svg\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar svgCreator = {\r\n    _markup: \"\",\r\n    _imageArray: {},\r\n    _imageDeferreds: [],\r\n    _getBinaryFile: function(src, callback) {\r\n        _ajax.default.sendRequest({\r\n            url: src,\r\n            method: \"GET\",\r\n            responseType: \"arraybuffer\"\r\n        }).done(callback).fail(function() {\r\n            callback(false)\r\n        })\r\n    },\r\n    _loadImages: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(that._imageArray, function(src) {\r\n            var deferred = new _deferred.Deferred;\r\n            that._imageDeferreds.push(deferred);\r\n            that._getBinaryFile(src, function(response) {\r\n                if (!response) {\r\n                    delete that._imageArray[src];\r\n                    deferred.resolve();\r\n                    return\r\n                }\r\n                var i;\r\n                var binary = \"\";\r\n                var bytes = new Uint8Array(response);\r\n                var length = bytes.byteLength;\r\n                for (i = 0; i < length; i++) {\r\n                    binary += String.fromCharCode(bytes[i])\r\n                }\r\n                that._imageArray[src] = \"data:image/png;base64,\" + window.btoa(binary);\r\n                deferred.resolve()\r\n            })\r\n        })\r\n    },\r\n    _parseImages: function(element) {\r\n        var href;\r\n        var that = this;\r\n        if (\"image\" === element.tagName) {\r\n            href = (0, _renderer.default)(element).attr(\"href\") || (0, _renderer.default)(element).attr(\"xlink:href\");\r\n            if (!that._imageArray[href]) {\r\n                that._imageArray[href] = \"\"\r\n            }\r\n        }(0, _iterator.each)(element.childNodes, function(_, element) {\r\n            that._parseImages(element)\r\n        })\r\n    },\r\n    _prepareImages: function(svgElem) {\r\n        this._parseImages(svgElem);\r\n        this._loadImages();\r\n        return _deferred.when.apply(_renderer.default, this._imageDeferreds)\r\n    },\r\n    getData: function(data, options) {\r\n        var markup;\r\n        var that = this;\r\n        var xmlVersion = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>';\r\n        var svgElem = (0, _svg.getSvgElement)(data);\r\n        var $svgObject = (0, _renderer.default)(svgElem);\r\n        markup = xmlVersion + (0, _svg.getSvgMarkup)($svgObject.get(0), options.backgroundColor);\r\n        return that._prepareImages(svgElem).then(function() {\r\n            (0, _iterator.each)(that._imageArray, function(href, dataURI) {\r\n                var regexpString = \"href=['|\\\"]\".concat(href, \"['|\\\"]\");\r\n                markup = markup.replace(new RegExp(regexpString, \"gi\"), 'href=\"'.concat(dataURI, '\"'))\r\n            });\r\n            return (0, _type.isFunction)(window.Blob) ? that._getBlob(markup) : that._getBase64(markup)\r\n        })\r\n    },\r\n    _getBlob: function(markup) {\r\n        return new window.Blob([markup], {\r\n            type: \"image/svg+xml\"\r\n        })\r\n    },\r\n    _getBase64: function(markup) {\r\n        return window.btoa(markup)\r\n    }\r\n};\r\nexports.svgCreator = svgCreator;\r\n\r\nfunction getData(data, options) {\r\n    return svgCreator.getData(data, options)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}