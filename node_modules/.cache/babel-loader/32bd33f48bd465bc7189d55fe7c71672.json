{"ast":null,"code":"/**\r\n * DevExtreme (viz/translators/logarithmic_translator.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _utils = require(\"../core/utils\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _default = {\n  _fromValue: function _fromValue(value) {\n    return null !== value ? (0, _utils.getLogExt)(value, this._canvasOptions.base, this._businessRange.allowNegatives, this._businessRange.linearThreshold) : value;\n  },\n  _toValue: function _toValue(value) {\n    return null !== value ? (0, _utils.raiseToExt)(value, this._canvasOptions.base, this._businessRange.allowNegatives, this._businessRange.linearThreshold) : value;\n  },\n  getMinBarSize: function getMinBarSize(minBarSize) {\n    var visibleArea = this.getCanvasVisibleArea();\n    var minValue = this.from(visibleArea.min + minBarSize);\n    var canvasOptions = this._canvasOptions;\n    return Math.pow(canvasOptions.base, canvasOptions.rangeMinVisible + this._fromValue(this.from(visibleArea.min)) - this._fromValue(!(0, _type.isDefined)(minValue) ? this.from(visibleArea.max) : minValue));\n  },\n  checkMinBarSize: function checkMinBarSize(initialValue, minShownValue, stackValue) {\n    var canvasOptions = this._canvasOptions;\n    var prevValue = stackValue - initialValue;\n    var baseMethod = this.constructor.prototype.checkMinBarSize;\n    var minBarSize;\n    var updateValue;\n\n    if ((0, _type.isDefined)(minShownValue) && prevValue > 0) {\n      minBarSize = baseMethod(this._fromValue(stackValue / prevValue), this._fromValue(minShownValue) - canvasOptions.rangeMinVisible);\n      updateValue = Math.pow(canvasOptions.base, this._fromValue(prevValue) + minBarSize) - prevValue;\n    } else {\n      updateValue = baseMethod(initialValue, minShownValue);\n    }\n\n    return updateValue;\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/translators/logarithmic_translator.js"],"names":["exports","default","_utils","require","_type","_default","_fromValue","value","getLogExt","_canvasOptions","base","_businessRange","allowNegatives","linearThreshold","_toValue","raiseToExt","getMinBarSize","minBarSize","visibleArea","getCanvasVisibleArea","minValue","from","min","canvasOptions","Math","pow","rangeMinVisible","isDefined","max","checkMinBarSize","initialValue","minShownValue","stackValue","prevValue","baseMethod","constructor","prototype","updateValue","module"],"mappings":"AAAA;;;;;;;;AAQA;;AACAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIE,QAAQ,GAAG;AACXC,EAAAA,UAAU,EAAE,oBAASC,KAAT,EAAgB;AACxB,WAAO,SAASA,KAAT,GAAiB,CAAC,GAAGL,MAAM,CAACM,SAAX,EAAsBD,KAAtB,EAA6B,KAAKE,cAAL,CAAoBC,IAAjD,EAAuD,KAAKC,cAAL,CAAoBC,cAA3E,EAA2F,KAAKD,cAAL,CAAoBE,eAA/G,CAAjB,GAAmJN,KAA1J;AACH,GAHU;AAIXO,EAAAA,QAAQ,EAAE,kBAASP,KAAT,EAAgB;AACtB,WAAO,SAASA,KAAT,GAAiB,CAAC,GAAGL,MAAM,CAACa,UAAX,EAAuBR,KAAvB,EAA8B,KAAKE,cAAL,CAAoBC,IAAlD,EAAwD,KAAKC,cAAL,CAAoBC,cAA5E,EAA4F,KAAKD,cAAL,CAAoBE,eAAhH,CAAjB,GAAoJN,KAA3J;AACH,GANU;AAOXS,EAAAA,aAAa,EAAE,uBAASC,UAAT,EAAqB;AAChC,QAAIC,WAAW,GAAG,KAAKC,oBAAL,EAAlB;AACA,QAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUH,WAAW,CAACI,GAAZ,GAAkBL,UAA5B,CAAf;AACA,QAAIM,aAAa,GAAG,KAAKd,cAAzB;AACA,WAAOe,IAAI,CAACC,GAAL,CAASF,aAAa,CAACb,IAAvB,EAA6Ba,aAAa,CAACG,eAAd,GAAgC,KAAKpB,UAAL,CAAgB,KAAKe,IAAL,CAAUH,WAAW,CAACI,GAAtB,CAAhB,CAAhC,GAA8E,KAAKhB,UAAL,CAAgB,CAAC,CAAC,GAAGF,KAAK,CAACuB,SAAV,EAAqBP,QAArB,CAAD,GAAkC,KAAKC,IAAL,CAAUH,WAAW,CAACU,GAAtB,CAAlC,GAA+DR,QAA/E,CAA3G,CAAP;AACH,GAZU;AAaXS,EAAAA,eAAe,EAAE,yBAASC,YAAT,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkD;AAC/D,QAAIT,aAAa,GAAG,KAAKd,cAAzB;AACA,QAAIwB,SAAS,GAAGD,UAAU,GAAGF,YAA7B;AACA,QAAII,UAAU,GAAG,KAAKC,WAAL,CAAiBC,SAAjB,CAA2BP,eAA5C;AACA,QAAIZ,UAAJ;AACA,QAAIoB,WAAJ;;AACA,QAAI,CAAC,GAAGjC,KAAK,CAACuB,SAAV,EAAqBI,aAArB,KAAuCE,SAAS,GAAG,CAAvD,EAA0D;AACtDhB,MAAAA,UAAU,GAAGiB,UAAU,CAAC,KAAK5B,UAAL,CAAgB0B,UAAU,GAAGC,SAA7B,CAAD,EAA0C,KAAK3B,UAAL,CAAgByB,aAAhB,IAAiCR,aAAa,CAACG,eAAzF,CAAvB;AACAW,MAAAA,WAAW,GAAGb,IAAI,CAACC,GAAL,CAASF,aAAa,CAACb,IAAvB,EAA6B,KAAKJ,UAAL,CAAgB2B,SAAhB,IAA6BhB,UAA1D,IAAwEgB,SAAtF;AACH,KAHD,MAGO;AACHI,MAAAA,WAAW,GAAGH,UAAU,CAACJ,YAAD,EAAeC,aAAf,CAAxB;AACH;;AACD,WAAOM,WAAP;AACH;AA1BU,CAAf;AA4BArC,OAAO,CAACC,OAAR,GAAkBI,QAAlB;AACAiC,MAAM,CAACtC,OAAP,GAAiBA,OAAO,CAACC,OAAzB","sourcesContent":["/**\r\n * DevExtreme (viz/translators/logarithmic_translator.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _utils = require(\"../core/utils\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _default = {\r\n    _fromValue: function(value) {\r\n        return null !== value ? (0, _utils.getLogExt)(value, this._canvasOptions.base, this._businessRange.allowNegatives, this._businessRange.linearThreshold) : value\r\n    },\r\n    _toValue: function(value) {\r\n        return null !== value ? (0, _utils.raiseToExt)(value, this._canvasOptions.base, this._businessRange.allowNegatives, this._businessRange.linearThreshold) : value\r\n    },\r\n    getMinBarSize: function(minBarSize) {\r\n        var visibleArea = this.getCanvasVisibleArea();\r\n        var minValue = this.from(visibleArea.min + minBarSize);\r\n        var canvasOptions = this._canvasOptions;\r\n        return Math.pow(canvasOptions.base, canvasOptions.rangeMinVisible + this._fromValue(this.from(visibleArea.min)) - this._fromValue(!(0, _type.isDefined)(minValue) ? this.from(visibleArea.max) : minValue))\r\n    },\r\n    checkMinBarSize: function(initialValue, minShownValue, stackValue) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var prevValue = stackValue - initialValue;\r\n        var baseMethod = this.constructor.prototype.checkMinBarSize;\r\n        var minBarSize;\r\n        var updateValue;\r\n        if ((0, _type.isDefined)(minShownValue) && prevValue > 0) {\r\n            minBarSize = baseMethod(this._fromValue(stackValue / prevValue), this._fromValue(minShownValue) - canvasOptions.rangeMinVisible);\r\n            updateValue = Math.pow(canvasOptions.base, this._fromValue(prevValue) + minBarSize) - prevValue\r\n        } else {\r\n            updateValue = baseMethod(initialValue, minShownValue)\r\n        }\r\n        return updateValue\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}