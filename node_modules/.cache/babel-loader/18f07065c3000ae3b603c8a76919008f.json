{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/constant_line.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = createConstantLine;\n\nvar _type = require(\"../../core/utils/type\");\n\nfunction createConstantLine(axis, options) {\n  var labelOptions = options.label || {};\n  var labelPosition = labelOptions.position || \"inside\";\n  var parsedValue;\n  var valueIsParsed = false;\n  var lastStoredCoordinates;\n\n  axis._checkAlignmentConstantLineLabels(labelOptions);\n\n  var storedCoord;\n  return {\n    options: options,\n    labelOptions: labelOptions,\n    labelPosition: labelPosition,\n    label: null,\n    line: null,\n    getParsedValue: function getParsedValue() {\n      if (!valueIsParsed) {\n        parsedValue = axis.validateUnit(options.value, \"E2105\", \"constantLine\");\n        valueIsParsed = true;\n        return parsedValue;\n      }\n\n      return parsedValue;\n    },\n    draw: function draw() {\n      if (!(0, _type.isDefined)(options.value) || axis._translator.getBusinessRange().isEmpty()) {\n        return this;\n      }\n\n      var canvas = axis._getCanvasStartEnd();\n\n      var parsedValue = this.getParsedValue();\n      this.coord = axis._getConstantLinePos(parsedValue, canvas.start, canvas.end);\n      var rootGroup = options.displayBehindSeries ? axis._axisConstantLineGroups.under : axis._axisConstantLineGroups.above;\n      var group = rootGroup[labelPosition];\n\n      if (!group) {\n        var side = axis._isHorizontal ? labelOptions.verticalAlignment : labelOptions.horizontalAlignment;\n        group = rootGroup[side];\n      }\n\n      if (!(0, _type.isDefined)(this.coord)) {\n        return this;\n      }\n\n      var path = axis._createConstantLine(this.coord, {\n        stroke: options.color,\n        \"stroke-width\": options.width,\n        dashStyle: options.dashStyle\n      });\n\n      this.line = path.append(rootGroup.inside);\n      this.label = labelOptions.visible ? axis._drawConstantLineLabels(parsedValue, labelOptions, this.coord, group) : null;\n      this.updatePosition();\n      return this;\n    },\n    getContentContainer: function getContentContainer() {\n      return this.label;\n    },\n    removeLabel: function removeLabel() {\n      this.label && this.label.remove();\n    },\n    updatePosition: function updatePosition(animate) {\n      var canvas = axis._getCanvasStartEnd();\n\n      var coord = axis._getConstantLinePos(this.getParsedValue(), canvas.start, canvas.end);\n\n      if (!(0, _type.isDefined)(coord)) {\n        return;\n      }\n\n      this.coord = coord;\n\n      if (animate && storedCoord) {\n        this.label && this.label.attr(axis._getConstantLineLabelsCoords(storedCoord, this.labelOptions));\n        this.line && this.line.attr(axis._getConstantLineGraphicAttributes(storedCoord));\n        this.label && this.label.animate(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\n        this.line && this.line.animate(axis._getConstantLineGraphicAttributes(this.coord));\n      } else {\n        this.label && this.label.attr(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\n        this.line && this.line.attr(axis._getConstantLineGraphicAttributes(this.coord));\n\n        axis._rotateConstantLine(this.line, this.coord);\n      }\n    },\n    saveCoords: function saveCoords() {\n      lastStoredCoordinates = storedCoord;\n      storedCoord = this.coord;\n    },\n    resetCoordinates: function resetCoordinates() {\n      storedCoord = lastStoredCoordinates;\n    }\n  };\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/axes/constant_line.js"],"names":["exports","default","createConstantLine","_type","require","axis","options","labelOptions","label","labelPosition","position","parsedValue","valueIsParsed","lastStoredCoordinates","_checkAlignmentConstantLineLabels","storedCoord","line","getParsedValue","validateUnit","value","draw","isDefined","_translator","getBusinessRange","isEmpty","canvas","_getCanvasStartEnd","coord","_getConstantLinePos","start","end","rootGroup","displayBehindSeries","_axisConstantLineGroups","under","above","group","side","_isHorizontal","verticalAlignment","horizontalAlignment","path","_createConstantLine","stroke","color","width","dashStyle","append","inside","visible","_drawConstantLineLabels","updatePosition","getContentContainer","removeLabel","remove","animate","attr","_getConstantLineLabelsCoords","_getConstantLineGraphicAttributes","_rotateConstantLine","saveCoords","resetCoordinates","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/constant_line.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = createConstantLine;\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction createConstantLine(axis, options) {\r\n    var labelOptions = options.label || {};\r\n    var labelPosition = labelOptions.position || \"inside\";\r\n    var parsedValue;\r\n    var valueIsParsed = false;\r\n    var lastStoredCoordinates;\r\n    axis._checkAlignmentConstantLineLabels(labelOptions);\r\n    var storedCoord;\r\n    return {\r\n        options: options,\r\n        labelOptions: labelOptions,\r\n        labelPosition: labelPosition,\r\n        label: null,\r\n        line: null,\r\n        getParsedValue: function() {\r\n            if (!valueIsParsed) {\r\n                parsedValue = axis.validateUnit(options.value, \"E2105\", \"constantLine\");\r\n                valueIsParsed = true;\r\n                return parsedValue\r\n            }\r\n            return parsedValue\r\n        },\r\n        draw: function() {\r\n            if (!(0, _type.isDefined)(options.value) || axis._translator.getBusinessRange().isEmpty()) {\r\n                return this\r\n            }\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var parsedValue = this.getParsedValue();\r\n            this.coord = axis._getConstantLinePos(parsedValue, canvas.start, canvas.end);\r\n            var rootGroup = options.displayBehindSeries ? axis._axisConstantLineGroups.under : axis._axisConstantLineGroups.above;\r\n            var group = rootGroup[labelPosition];\r\n            if (!group) {\r\n                var side = axis._isHorizontal ? labelOptions.verticalAlignment : labelOptions.horizontalAlignment;\r\n                group = rootGroup[side]\r\n            }\r\n            if (!(0, _type.isDefined)(this.coord)) {\r\n                return this\r\n            }\r\n            var path = axis._createConstantLine(this.coord, {\r\n                stroke: options.color,\r\n                \"stroke-width\": options.width,\r\n                dashStyle: options.dashStyle\r\n            });\r\n            this.line = path.append(rootGroup.inside);\r\n            this.label = labelOptions.visible ? axis._drawConstantLineLabels(parsedValue, labelOptions, this.coord, group) : null;\r\n            this.updatePosition();\r\n            return this\r\n        },\r\n        getContentContainer: function() {\r\n            return this.label\r\n        },\r\n        removeLabel: function() {\r\n            this.label && this.label.remove()\r\n        },\r\n        updatePosition: function(animate) {\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var coord = axis._getConstantLinePos(this.getParsedValue(), canvas.start, canvas.end);\r\n            if (!(0, _type.isDefined)(coord)) {\r\n                return\r\n            }\r\n            this.coord = coord;\r\n            if (animate && storedCoord) {\r\n                this.label && this.label.attr(axis._getConstantLineLabelsCoords(storedCoord, this.labelOptions));\r\n                this.line && this.line.attr(axis._getConstantLineGraphicAttributes(storedCoord));\r\n                this.label && this.label.animate(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\r\n                this.line && this.line.animate(axis._getConstantLineGraphicAttributes(this.coord))\r\n            } else {\r\n                this.label && this.label.attr(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\r\n                this.line && this.line.attr(axis._getConstantLineGraphicAttributes(this.coord));\r\n                axis._rotateConstantLine(this.line, this.coord)\r\n            }\r\n        },\r\n        saveCoords: function() {\r\n            lastStoredCoordinates = storedCoord;\r\n            storedCoord = this.coord\r\n        },\r\n        resetCoordinates: function() {\r\n            storedCoord = lastStoredCoordinates\r\n        }\r\n    }\r\n}\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}