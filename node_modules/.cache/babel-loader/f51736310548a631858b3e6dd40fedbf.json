{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/mspointer.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _base = _interopRequireDefault(require(\"./base\"));\n\nvar _observer = _interopRequireDefault(require(\"./observer\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar eventMap = {\n  dxpointerdown: \"pointerdown\",\n  dxpointermove: \"pointermove\",\n  dxpointerup: \"pointerup\",\n  dxpointercancel: \"pointercancel\",\n  dxpointerover: \"pointerover\",\n  dxpointerout: \"pointerout\",\n  dxpointerenter: \"pointerenter\",\n  dxpointerleave: \"pointerleave\"\n};\nvar observer;\nvar activated = false;\n\nvar activateStrategy = function () {\n  if (activated) {\n    return;\n  }\n\n  observer = new _observer.default(eventMap, function (a, b) {\n    return a.pointerId === b.pointerId;\n  }, function (e) {\n    if (e.isPrimary) {\n      observer.reset();\n    }\n  });\n  activated = true;\n};\n\nvar MsPointerStrategy = _base.default.inherit({\n  ctor: function () {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _fireEvent: function (args) {\n    return this.callBase((0, _extend.extend)({\n      pointers: observer.pointers(),\n      pointerId: args.originalEvent.pointerId\n    }, args));\n  }\n});\n\nMsPointerStrategy.map = eventMap;\n\nMsPointerStrategy.resetObserver = function () {\n  observer.reset();\n};\n\nvar _default = MsPointerStrategy;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/events/pointer/mspointer.js"],"names":["exports","default","_base","_interopRequireDefault","require","_observer","_extend","obj","__esModule","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","observer","activated","activateStrategy","a","b","pointerId","e","isPrimary","reset","MsPointerStrategy","inherit","ctor","callBase","apply","arguments","_fireEvent","args","extend","pointers","originalEvent","map","resetObserver","_default","module"],"mappings":"AAAA;;;;;;;;AAQA;;AACAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AACA,IAAIC,SAAS,GAAGF,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AACD,IAAIE,QAAQ,GAAG;AACXC,EAAAA,aAAa,EAAE,aADJ;AAEXC,EAAAA,aAAa,EAAE,aAFJ;AAGXC,EAAAA,WAAW,EAAE,WAHF;AAIXC,EAAAA,eAAe,EAAE,eAJN;AAKXC,EAAAA,aAAa,EAAE,aALJ;AAMXC,EAAAA,YAAY,EAAE,YANH;AAOXC,EAAAA,cAAc,EAAE,cAPL;AAQXC,EAAAA,cAAc,EAAE;AARL,CAAf;AAUA,IAAIC,QAAJ;AACA,IAAIC,SAAS,GAAG,KAAhB;;AACA,IAAIC,gBAAgB,GAAG,YAAW;AAC9B,MAAID,SAAJ,EAAe;AACX;AACH;;AACDD,EAAAA,QAAQ,GAAG,IAAIb,SAAS,CAACJ,OAAd,CAAsBQ,QAAtB,EAAgC,UAASY,CAAT,EAAYC,CAAZ,EAAe;AACtD,WAAOD,CAAC,CAACE,SAAF,KAAgBD,CAAC,CAACC,SAAzB;AACH,GAFU,EAER,UAASC,CAAT,EAAY;AACX,QAAIA,CAAC,CAACC,SAAN,EAAiB;AACbP,MAAAA,QAAQ,CAACQ,KAAT;AACH;AACJ,GANU,CAAX;AAOAP,EAAAA,SAAS,GAAG,IAAZ;AACH,CAZD;;AAaA,IAAIQ,iBAAiB,GAAGzB,KAAK,CAACD,OAAN,CAAc2B,OAAd,CAAsB;AAC1CC,EAAAA,IAAI,EAAE,YAAW;AACb,SAAKC,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACAZ,IAAAA,gBAAgB;AACnB,GAJyC;AAK1Ca,EAAAA,UAAU,EAAE,UAASC,IAAT,EAAe;AACvB,WAAO,KAAKJ,QAAL,CAAc,CAAC,GAAGxB,OAAO,CAAC6B,MAAZ,EAAoB;AACrCC,MAAAA,QAAQ,EAAElB,QAAQ,CAACkB,QAAT,EAD2B;AAErCb,MAAAA,SAAS,EAAEW,IAAI,CAACG,aAAL,CAAmBd;AAFO,KAApB,EAGlBW,IAHkB,CAAd,CAAP;AAIH;AAVyC,CAAtB,CAAxB;;AAYAP,iBAAiB,CAACW,GAAlB,GAAwB7B,QAAxB;;AACAkB,iBAAiB,CAACY,aAAlB,GAAkC,YAAW;AACzCrB,EAAAA,QAAQ,CAACQ,KAAT;AACH,CAFD;;AAGA,IAAIc,QAAQ,GAAGb,iBAAf;AACA3B,OAAO,CAACC,OAAR,GAAkBuC,QAAlB;AACAC,MAAM,CAACzC,OAAP,GAAiBA,OAAO,CAACC,OAAzB","sourcesContent":["/**\r\n * DevExtreme (events/pointer/mspointer.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _base = _interopRequireDefault(require(\"./base\"));\r\nvar _observer = _interopRequireDefault(require(\"./observer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar eventMap = {\r\n    dxpointerdown: \"pointerdown\",\r\n    dxpointermove: \"pointermove\",\r\n    dxpointerup: \"pointerup\",\r\n    dxpointercancel: \"pointercancel\",\r\n    dxpointerover: \"pointerover\",\r\n    dxpointerout: \"pointerout\",\r\n    dxpointerenter: \"pointerenter\",\r\n    dxpointerleave: \"pointerleave\"\r\n};\r\nvar observer;\r\nvar activated = false;\r\nvar activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    observer = new _observer.default(eventMap, function(a, b) {\r\n        return a.pointerId === b.pointerId\r\n    }, function(e) {\r\n        if (e.isPrimary) {\r\n            observer.reset()\r\n        }\r\n    });\r\n    activated = true\r\n};\r\nvar MsPointerStrategy = _base.default.inherit({\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _fireEvent: function(args) {\r\n        return this.callBase((0, _extend.extend)({\r\n            pointers: observer.pointers(),\r\n            pointerId: args.originalEvent.pointerId\r\n        }, args))\r\n    }\r\n});\r\nMsPointerStrategy.map = eventMap;\r\nMsPointerStrategy.resetObserver = function() {\r\n    observer.reset()\r\n};\r\nvar _default = MsPointerStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}