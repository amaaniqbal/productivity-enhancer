{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-chart\n * Generated: 2020-11-03\n * Version: 2.7.3\n * License: https://js.devexpress.com/Licensing\n */\nimport { createElement, PureComponent, createRef, isValidElement, Fragment } from 'react';\nimport { Plugin, Getter, Template, TemplatePlaceholder, TemplateConnector, Sizer, createStateHelper, Action, withComponents, PluginHost, clearSelection } from '@devexpress/dx-react-core';\nimport { defaultDomains, buildScales, scaleSeriesPoints, TOP, LEFT, RIGHT, BOTTOM, isReadyToRenderSeries, bBoxes, getRanges, getLegendItems, findSeriesByName, ARGUMENT_DOMAIN, getValueDomainName, addSeries, extendDomains, addDomain, getStackedDomains, getStackedSeries, easeOutCubic, buildAnimation, isScalesChanged, HOVERED, SELECTED, isCoordinatesChanged, getPathStart, processAreaAnimation, dRotateArea, dArea, getAreaPointTransformer, createAreaHitTester, dBar, getVisibility, adjustBarSize, isValuesChanged, getPointStart, processBarAnimation, getBarPointTransformer, createBarHitTester, processLineAnimation, dRotateLine, dLine, getLinePointTransformer, createLineHitTester, dPie, getDelay, getPieStart, processPieAnimation, getPiePointTransformer, createPieHitTester, dSymbol, processPointAnimation, getScatterPointTransformer, createScatterHitTester, dRotateSpline, dSpline, createSplineHitTester, isValidPosition, getTickCoordinates, tickCoordinatesGetter, gridCoordinatesGetter, getRotatedPosition, processHandleTooltip, getParameters, createReference, getOffset as getOffset$1, getEventCoords, isKeyPressed, setCursorType, isMultiTouch, getDeltaForTouches, getRect, getViewport, getWheelDelta, detachEvents, attachEvents, adjustLayout, buildEventHandlers, processPointerMove, changeSeriesState } from '@devexpress/dx-chart-core';\nimport { stackOffsetDiverging, stackOrderNone } from 'd3-shape';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n\nvar series = [];\n\nvar BasicData = function (_a) {\n  var data = _a.data,\n      rotated = _a.rotated;\n  return createElement(Plugin, {\n    name: \"Basis\"\n  }, createElement(Getter, {\n    name: \"data\",\n    value: data\n  }), createElement(Getter, {\n    name: \"domains\",\n    value: defaultDomains\n  }), createElement(Getter, {\n    name: \"series\",\n    value: series\n  }), createElement(Getter, {\n    name: \"rotated\",\n    value: rotated\n  }));\n};\n\nvar getScales = function (_a) {\n  var domains = _a.domains,\n      ranges = _a.ranges;\n  return buildScales(domains, ranges);\n};\n\nvar getSeries = function (_a) {\n  var series = _a.series,\n      scales = _a.scales,\n      rotated = _a.rotated;\n  return scaleSeriesPoints(series, scales, rotated);\n};\n\nvar ChartCore = /*#__PURE__*/function (_super) {\n  __extends(ChartCore, _super);\n\n  function ChartCore() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ChartCore.prototype.render = function () {\n    return createElement(Plugin, null, createElement(Getter, {\n      name: \"scales\",\n      computed: getScales\n    }), createElement(Getter, {\n      name: \"series\",\n      computed: getSeries\n    }));\n  };\n\n  return ChartCore;\n}(PureComponent);\n\nvar AxesLayout = /*#__PURE__*/function (_super) {\n  __extends(AxesLayout, _super);\n\n  function AxesLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ref = createRef();\n    return _this;\n  }\n\n  AxesLayout.prototype.render = function () {\n    return createElement(Plugin, null, createElement(Getter, {\n      name: \"centerDivRef\",\n      value: this.ref\n    }), createElement(Template, {\n      name: \"canvas\"\n    }, createElement(\"div\", {\n      id: \"center-center\",\n      ref: this.ref,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1\n      }\n    }, createElement(\"div\", {\n      id: TOP + \"-axis-container\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      }\n    }, createElement(TemplatePlaceholder, {\n      name: TOP + \"-\" + LEFT + \"-axis\"\n    }), createElement(TemplatePlaceholder, {\n      name: TOP + \"-axis\"\n    }), createElement(TemplatePlaceholder, {\n      name: TOP + \"-\" + RIGHT + \"-axis\"\n    })), createElement(\"div\", {\n      id: \"center-axis-container\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: 1\n      }\n    }, createElement(TemplatePlaceholder, {\n      name: LEFT + \"-axis\"\n    }), createElement(TemplatePlaceholder, null), createElement(TemplatePlaceholder, {\n      name: RIGHT + \"-axis\"\n    })), createElement(\"div\", {\n      id: BOTTOM + \"-axis-container\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      }\n    }, createElement(TemplatePlaceholder, {\n      name: BOTTOM + \"-\" + LEFT + \"-axis\"\n    }), createElement(TemplatePlaceholder, {\n      name: BOTTOM + \"-axis\"\n    }), createElement(TemplatePlaceholder, {\n      name: BOTTOM + \"-\" + RIGHT + \"-axis\"\n    })))));\n  };\n\n  return AxesLayout;\n}(PureComponent);\n\nvar SpaceFillingRects = /*#__PURE__*/function (_super) {\n  __extends(SpaceFillingRects, _super);\n\n  function SpaceFillingRects() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SpaceFillingRects.prototype.render = function () {\n    var placeholders = this.props.placeholders;\n    return createElement(Plugin, {\n      name: \"SpaceFillingRects\"\n    }, placeholders.map(function (name) {\n      return createElement(Template, {\n        name: name,\n        key: name\n      }, createElement(TemplateConnector, null, function (_a) {\n        var layouts = _a.layouts;\n        var key = name.slice(name.indexOf('-') + 1);\n        var width = Object.keys(layouts).reduce(function (prev, cur) {\n          if (cur.includes(key)) {\n            return prev + layouts[cur].width;\n          }\n\n          return prev;\n        }, 0);\n        return createElement(\"div\", {\n          id: name,\n          style: {\n            width: width\n          }\n        });\n      }));\n    }));\n  };\n\n  return SpaceFillingRects;\n}(PureComponent);\n\nvar ControllerComponent = /*#__PURE__*/function (_super) {\n  __extends(ControllerComponent, _super);\n\n  function ControllerComponent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isPreviousDataEmpty = true;\n\n    _this.readyToRenderSeriesComputed = function (_a) {\n      var layouts = _a.layouts,\n          centerDivRef = _a.centerDivRef,\n          data = _a.data,\n          axesExist = _a.axesExist;\n      var isPreviousDataEmpty = _this.isPreviousDataEmpty;\n      _this.isPreviousDataEmpty = !data.length;\n      return isReadyToRenderSeries(layouts, centerDivRef, isPreviousDataEmpty, !!axesExist);\n    };\n\n    return _this;\n  }\n\n  ControllerComponent.prototype.render = function () {\n    return createElement(Plugin, {\n      name: \"ControllerComponent\"\n    }, createElement(Getter, {\n      name: \"readyToRenderSeries\",\n      computed: this.readyToRenderSeriesComputed\n    }));\n  };\n\n  return ControllerComponent;\n}(PureComponent);\n\nvar EXTRA_PIXELS = 2;\n\nvar ClipPath = /*#__PURE__*/function (_super) {\n  __extends(ClipPath, _super);\n\n  function ClipPath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ClipPath.prototype.render = function () {\n    var _a = this.props,\n        id = _a.id,\n        width = _a.width,\n        height = _a.height;\n    return createElement(\"defs\", null, createElement(\"clipPath\", {\n      id: id\n    }, createElement(\"rect\", {\n      x: -EXTRA_PIXELS / 2,\n      y: -EXTRA_PIXELS / 2,\n      width: width + EXTRA_PIXELS,\n      height: height + EXTRA_PIXELS\n    })));\n  };\n\n  return ClipPath;\n}(PureComponent); // It is located in a separate file only for testing purpose -\n// it should actually be placed next to PaneLayout.\n\n\nvar UpdatableSizer = /*#__PURE__*/function (_super) {\n  __extends(UpdatableSizer, _super);\n\n  function UpdatableSizer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ref = createRef();\n    return _this;\n  }\n\n  UpdatableSizer.prototype.componentDidUpdate = function () {\n    this.ref.current.setupListeners();\n  };\n\n  UpdatableSizer.prototype.render = function () {\n    return createElement(Sizer, __assign({\n      ref: this.ref\n    }, this.props));\n  };\n\n  return UpdatableSizer;\n}(PureComponent);\n\nvar DIV_STYLE = {\n  flex: 1,\n  zIndex: 1,\n  position: 'relative',\n  width: '100%'\n};\nvar SVG_STYLE = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  overflow: 'visible'\n};\n\nvar SizerContainer = function (_a) {\n  var children = _a.children;\n  return createElement(\"div\", {\n    style: DIV_STYLE\n  }, children);\n};\n\nvar numDefs = 0;\n\nvar getUniqueId = function () {\n  numDefs += 1;\n  return numDefs;\n};\n\nvar PaneLayout = /*#__PURE__*/function (_super) {\n  __extends(PaneLayout, _super);\n\n  function PaneLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ref = createRef();\n    _this.clipPathId = \"clip_path_\" + getUniqueId();\n    return _this;\n  }\n\n  PaneLayout.prototype.render = function () {\n    var _this = this;\n\n    return createElement(Plugin, {\n      name: \"PaneLayout\"\n    }, createElement(Getter, {\n      name: \"rootRef\",\n      value: this.ref\n    }), createElement(Getter, {\n      name: \"clipPathId\",\n      value: this.clipPathId\n    }), createElement(Template, {\n      name: \"canvas\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var layouts = _a.layouts;\n        var changeBBox = _b.changeBBox;\n        var _c = layouts.pane,\n            width = _c.width,\n            height = _c.height;\n        return createElement(UpdatableSizer, {\n          containerComponent: SizerContainer,\n          onSizeChange: function (size) {\n            return changeBBox({\n              placeholder: 'pane',\n              bBox: size\n            });\n          }\n        }, createElement(\"svg\", __assign({\n          ref: _this.ref\n        }, params, {\n          width: width,\n          height: height,\n          style: SVG_STYLE\n        }), createElement(ClipPath, {\n          id: _this.clipPathId,\n          width: width,\n          height: height\n        }), createElement(TemplatePlaceholder, {\n          name: \"series\"\n        })));\n      });\n    }));\n  };\n\n  return PaneLayout;\n}(PureComponent);\n\nvar doGetRanges = function (_a) {\n  var layouts = _a.layouts,\n      rotated = _a.rotated;\n  return getRanges(layouts.pane, rotated);\n};\n\nvar LayoutManager = /*#__PURE__*/function (_super) {\n  __extends(LayoutManager, _super);\n\n  function LayoutManager(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      bBoxes: {\n        pane: {\n          width: 0,\n          height: 0\n        }\n      }\n    };\n    var stateHelper = createStateHelper(_this);\n    _this.changeBBox = stateHelper.applyFieldReducer.bind(stateHelper, 'bBoxes', bBoxes);\n    return _this;\n  }\n\n  LayoutManager.prototype.render = function () {\n    var _a = this.props,\n        width = _a.width,\n        height = _a.height,\n        Root = _a.rootComponent,\n        restProps = __rest(_a, [\"width\", \"height\", \"rootComponent\"]);\n\n    var stateBBoxes = this.state.bBoxes;\n    return createElement(Plugin, null, createElement(Getter, {\n      name: \"layouts\",\n      value: stateBBoxes\n    }), createElement(Getter, {\n      name: \"ranges\",\n      computed: doGetRanges\n    }), createElement(Action, {\n      name: \"changeBBox\",\n      action: this.changeBBox\n    }), createElement(Template, {\n      name: \"root\"\n    }, createElement(Root, __assign({\n      width: width,\n      height: height\n    }, restProps), createElement(TemplatePlaceholder, {\n      name: \"canvas\"\n    }))));\n  };\n\n  LayoutManager.defaultProps = {\n    width: 0\n  };\n  return LayoutManager;\n}(PureComponent);\n\nvar ComponentLayout = function () {\n  return createElement(Plugin, {\n    name: \"ComponentLayout\"\n  }, createElement(Template, {\n    name: \"canvas\"\n  }, createElement(\"div\", {\n    id: TOP + \"-container\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    }\n  }, createElement(TemplatePlaceholder, {\n    name: TOP + \"-\" + LEFT\n  }), createElement(TemplatePlaceholder, {\n    name: TOP\n  }), createElement(TemplatePlaceholder, {\n    name: TOP + \"-\" + RIGHT\n  })), createElement(\"div\", {\n    id: \"center-container\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexGrow: 1\n    }\n  }, createElement(TemplatePlaceholder, {\n    name: LEFT\n  }), createElement(TemplatePlaceholder, null), createElement(TemplatePlaceholder, {\n    name: RIGHT\n  })), createElement(\"div\", {\n    id: BOTTOM + \"-container\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    }\n  }, createElement(TemplatePlaceholder, {\n    name: BOTTOM + \"-\" + LEFT\n  }), createElement(TemplatePlaceholder, {\n    name: BOTTOM\n  }), createElement(TemplatePlaceholder, {\n    name: BOTTOM + \"-\" + RIGHT\n  }))));\n};\n\nvar PaletteBase = /*#__PURE__*/function (_super) {\n  __extends(PaletteBase, _super);\n\n  function PaletteBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PaletteBase.prototype.render = function () {\n    var scheme = this.props.scheme;\n    return createElement(Plugin, {\n      name: \"Palette\"\n    }, createElement(Getter, {\n      name: \"palette\",\n      value: scheme\n    }));\n  };\n\n  return PaletteBase;\n}(PureComponent);\n\nvar Palette = PaletteBase;\n\nvar Root = /*#__PURE__*/function (_super) {\n  __extends(Root, _super);\n\n  function Root() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Root.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style,\n        restProps = __rest(_a, [\"children\", \"width\", \"height\", \"style\"]);\n\n    return createElement(\"div\", __assign({\n      style: __assign(__assign(__assign({}, style), {\n        height: height + \"px\"\n      }), width ? {\n        width: width + \"px\"\n      } : null)\n    }, restProps), children);\n  };\n\n  return Root;\n}(PureComponent);\n\nvar Label = /*#__PURE__*/function (_super) {\n  __extends(Label, _super);\n\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Label.prototype.render = function () {\n    return createElement(\"text\", __assign({}, this.props));\n  };\n\n  return Label;\n}(PureComponent);\n\nvar scheme = [];\nvar placeholders = [TOP + \"-\" + LEFT, TOP + \"-\" + RIGHT, BOTTOM + \"-\" + LEFT, BOTTOM + \"-\" + RIGHT, TOP + \"-\" + LEFT + \"-axis\", TOP + \"-\" + RIGHT + \"-axis\", BOTTOM + \"-\" + LEFT + \"-axis\", BOTTOM + \"-\" + RIGHT + \"-axis\"];\n\nvar RawChart = /*#__PURE__*/function (_super) {\n  __extends(RawChart, _super);\n\n  function RawChart() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawChart.prototype.render = function () {\n    var _a = this.props,\n        data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        children = _a.children,\n        rotated = _a.rotated,\n        rootComponent = _a.rootComponent,\n        restProps = __rest(_a, [\"data\", \"width\", \"height\", \"children\", \"rotated\", \"rootComponent\"]);\n\n    return createElement(PluginHost, null, createElement(BasicData, {\n      data: data,\n      rotated: rotated\n    }), createElement(Palette, {\n      scheme: scheme\n    }), createElement(LayoutManager, __assign({\n      width: width,\n      height: height,\n      rootComponent: rootComponent\n    }, restProps)), createElement(PaneLayout, null), createElement(AxesLayout, null), createElement(ComponentLayout, null), createElement(SpaceFillingRects, {\n      placeholders: placeholders\n    }), children, createElement(ControllerComponent, null), createElement(ChartCore, null));\n  };\n\n  RawChart.defaultProps = {\n    height: 500,\n    rotated: false\n  };\n  RawChart.components = {\n    rootComponent: 'Root'\n  };\n  return RawChart;\n}(PureComponent);\n\nvar Chart = withComponents({\n  Root: Root\n})(RawChart);\nChart.Label = Label;\n\nvar Marker = /*#__PURE__*/function (_super) {\n  __extends(Marker, _super);\n\n  function Marker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Marker.prototype.render = function () {\n    var _a = this.props,\n        color = _a.color,\n        restProps = __rest(_a, [\"color\"]);\n\n    return createElement(\"svg\", __assign({\n      fill: color,\n      width: \"10\",\n      height: \"10\"\n    }, restProps), createElement(\"circle\", __assign({\n      r: 5,\n      cx: 5,\n      cy: 5\n    }, restProps)));\n  };\n\n  return Marker;\n}(PureComponent);\n\nvar RawLegend = /*#__PURE__*/function (_super) {\n  __extends(RawLegend, _super);\n\n  function RawLegend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawLegend.prototype.render = function () {\n    var _a = this.props,\n        MarkerComponent = _a.markerComponent,\n        Label = _a.labelComponent,\n        Root = _a.rootComponent,\n        Item = _a.itemComponent,\n        position = _a.position,\n        getItems = _a.getItems;\n    var placeholder = position;\n    return createElement(Plugin, {\n      name: \"Legend\"\n    }, createElement(Template, {\n      name: placeholder\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (getters) {\n      return createElement(Root, {\n        name: \"legend-\" + placeholder\n      }, getItems(getters).map(function (_a) {\n        var text = _a.text,\n            color = _a.color;\n        return createElement(Item, {\n          key: text\n        }, createElement(MarkerComponent, {\n          name: text,\n          color: color\n        }), createElement(Label, {\n          text: text\n        }));\n      }));\n    })));\n  };\n\n  RawLegend.defaultProps = {\n    position: 'right',\n    getItems: function (_a) {\n      var series = _a.series;\n      return getLegendItems(series);\n    }\n  };\n  RawLegend.components = {\n    rootComponent: 'Root',\n    itemComponent: 'Item',\n    markerComponent: 'Marker',\n    labelComponent: 'Label'\n  };\n  return RawLegend;\n}(PureComponent);\n\nvar Legend = withComponents({\n  Marker: Marker\n})(RawLegend);\n\nvar TitleBase = /*#__PURE__*/function (_super) {\n  __extends(TitleBase, _super);\n\n  function TitleBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TitleBase.prototype.render = function () {\n    var _a = this.props,\n        Text = _a.textComponent,\n        text = _a.text,\n        position = _a.position;\n    var placeholder = position;\n    return createElement(Plugin, {\n      name: \"Title\"\n    }, createElement(Template, {\n      name: placeholder\n    }, createElement(TemplatePlaceholder, null), createElement(Text, {\n      text: text\n    })));\n  };\n\n  TitleBase.components = {\n    textComponent: 'Text'\n  };\n  TitleBase.defaultProps = {\n    position: 'top'\n  };\n  return TitleBase;\n}(PureComponent);\n\nvar Title = TitleBase;\n/** @internal */\n\nvar declareSeries = function (pluginName, _a) {\n  var components = _a.components,\n      getPointTransformer = _a.getPointTransformer,\n      createHitTester = _a.createHitTester;\n\n  var Component = /*#__PURE__*/function (_super) {\n    __extends(Component, _super);\n\n    function Component() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    Component.prototype.render = function () {\n      var _a = this.props,\n          name = _a.name,\n          argumentField = _a.argumentField,\n          valueField = _a.valueField,\n          scaleName = _a.scaleName,\n          seriesComponent = _a.seriesComponent,\n          pointComponent = _a.pointComponent,\n          color = _a.color,\n          restProps = __rest(_a, [\"name\", \"argumentField\", \"valueField\", \"scaleName\", \"seriesComponent\", \"pointComponent\", \"color\"]);\n\n      var symbolName = Symbol(name);\n\n      var seriesItem = __assign(__assign({\n        getPointTransformer: getPointTransformer,\n        createHitTester: createHitTester\n      }, this.props), {\n        symbolName: symbolName\n      });\n\n      var getSeries = function (_a) {\n        var series = _a.series,\n            data = _a.data,\n            palette = _a.palette;\n        return addSeries(series, data, palette, seriesItem, restProps);\n      };\n\n      var getDomains = function (_a) {\n        var series = _a.series,\n            domains = _a.domains;\n        return extendDomains(domains, findSeriesByName(symbolName, series));\n      };\n\n      return createElement(Plugin, {\n        name: pluginName\n      }, createElement(Getter, {\n        name: \"series\",\n        computed: getSeries\n      }), createElement(Getter, {\n        name: \"domains\",\n        computed: getDomains\n      }), createElement(Template, {\n        name: \"series\"\n      }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n        var series = _a.series,\n            scales = _a.scales,\n            animation = _a.animation,\n            rotated = _a.rotated,\n            layouts = _a.layouts,\n            clipPathId = _a.clipPathId,\n            readyToRenderSeries = _a.readyToRenderSeries;\n        var pane = layouts.pane;\n        var currentSeries = findSeriesByName(symbolName, series);\n        var currentScales = {\n          argScale: scales[ARGUMENT_DOMAIN],\n          valScale: scales[getValueDomainName(currentSeries.scaleName)]\n        };\n        var Path = currentSeries.seriesComponent;\n        return createElement(Path, {\n          index: currentSeries.index,\n          pointComponent: currentSeries.pointComponent,\n          coordinates: currentSeries.points,\n          rotated: rotated,\n          state: currentSeries.state,\n          color: currentSeries.color,\n          scales: currentScales,\n          pane: pane,\n          clipPathId: clipPathId,\n          animation: animation,\n          readyToRenderSeries: readyToRenderSeries\n        });\n      })));\n    };\n\n    Component.defaultProps = {\n      name: 'defaultSeriesName'\n    };\n    return Component;\n  }(PureComponent);\n\n  Component.components = {};\n\n  if (components.Path) {\n    Component.components.seriesComponent = 'Path';\n  }\n\n  if (components.Point) {\n    Component.components.pointComponent = 'Point';\n  }\n\n  return withComponents(components)(Component);\n};\n/** @internal */\n\n\nvar withPatchedProps = function (patch) {\n  return function (Target) {\n    var Component = /*#__PURE__*/function (_super) {\n      __extends(Component, _super);\n\n      function Component() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      Component.prototype.render = function () {\n        var props = patch(this.props);\n        return createElement(Target, __assign({}, props));\n      };\n\n      Component.components = Target.components;\n      return Component;\n    }(PureComponent);\n\n    return Component;\n  };\n};\n/** @internal */\n\n\nvar Scale = /*#__PURE__*/function (_super) {\n  __extends(Scale, _super);\n\n  function Scale() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Scale.prototype.render = function () {\n    var _a = this.props,\n        name = _a.name,\n        factory = _a.factory,\n        modifyDomain = _a.modifyDomain;\n    var args = {\n      factory: factory,\n      modifyDomain: modifyDomain\n    };\n\n    var getDomains = function (_a) {\n      var domains = _a.domains;\n      return addDomain(domains, name, args);\n    };\n\n    return createElement(Plugin, {\n      name: \"Scale\"\n    }, createElement(Getter, {\n      name: \"domains\",\n      computed: getDomains\n    }));\n  };\n\n  return Scale;\n}(PureComponent);\n\nvar ArgumentScale = withPatchedProps(function (props) {\n  return __assign(__assign({}, props), {\n    name: ARGUMENT_DOMAIN\n  });\n})(Scale);\nvar ValueScale = withPatchedProps(function (props) {\n  return __assign(__assign({}, props), {\n    name: getValueDomainName(props.name)\n  });\n})(Scale);\n\nvar getDomains = function (_a) {\n  var domains = _a.domains,\n      series = _a.series;\n  return getStackedDomains(domains, series);\n};\n\nvar StackBase = /*#__PURE__*/function (_super) {\n  __extends(StackBase, _super);\n\n  function StackBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StackBase.prototype.render = function () {\n    var _a = this.props,\n        stacks = _a.stacks,\n        offset = _a.offset,\n        order = _a.order;\n    var params = {\n      stacks: stacks,\n      offset: offset,\n      order: order\n    };\n\n    var getSeries = function (_a) {\n      var series = _a.series,\n          data = _a.data;\n      return getStackedSeries(series, data, params);\n    };\n\n    return createElement(Plugin, {\n      name: \"Stack\"\n    }, createElement(Getter, {\n      name: \"series\",\n      computed: getSeries\n    }), createElement(Getter, {\n      name: \"domains\",\n      computed: getDomains\n    }));\n  };\n\n  StackBase.defaultProps = {\n    stacks: [],\n    offset: stackOffsetDiverging,\n    order: stackOrderNone\n  };\n  return StackBase;\n}(PureComponent);\n\nvar Stack = StackBase;\n\nvar AnimationBase = /*#__PURE__*/function (_super) {\n  __extends(AnimationBase, _super);\n\n  function AnimationBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AnimationBase.prototype.render = function () {\n    var _a = this.props,\n        easing = _a.easing,\n        duration = _a.duration;\n\n    var buildAnimationGetter = function () {\n      return buildAnimation(easing, duration);\n    };\n\n    return createElement(Plugin, {\n      name: \"Animation\"\n    }, createElement(Getter, {\n      name: \"animation\",\n      computed: buildAnimationGetter\n    }));\n  };\n\n  AnimationBase.defaultProps = {\n    easing: easeOutCubic,\n    duration: 1000\n  };\n  return AnimationBase;\n}(PureComponent);\n\nvar Animation = AnimationBase;\n\nvar withStates = function (states) {\n  return function (Component) {\n    var ComponentWithStates = /*#__PURE__*/function (_super) {\n      __extends(ComponentWithStates, _super);\n\n      function ComponentWithStates() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      ComponentWithStates.prototype.render = function () {\n        var _a = this.props,\n            state = _a.state,\n            restProps = __rest(_a, [\"state\"]);\n\n        var stateFunc = state && states[state];\n        var result = stateFunc ? stateFunc(restProps) : restProps;\n        return isValidElement(result) ? result : createElement(Component, __assign({}, result));\n      };\n\n      return ComponentWithStates;\n    }(PureComponent);\n\n    return ComponentWithStates;\n  };\n};\n\nvar Pattern = /*#__PURE__*/function (_super) {\n  __extends(Pattern, _super);\n\n  function Pattern() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Pattern.prototype.render = function () {\n    var _a = this.props,\n        id = _a.id,\n        size = _a.size,\n        color = _a.color,\n        opacity = _a.opacity;\n    return createElement(\"defs\", null, createElement(\"pattern\", {\n      id: id,\n      width: size,\n      height: size,\n      patternUnits: \"userSpaceOnUse\"\n    }, createElement(\"rect\", {\n      x: 0,\n      y: 0,\n      width: size,\n      height: size,\n      fill: color,\n      opacity: opacity\n    }), createElement(\"path\", {\n      // tslint:disable-next-line: max-line-length\n      d: \"M \" + size / 2 + \" \" + -size / 2 + \" L \" + -size / 2 + \" \" + size / 2 + \" M 0 \" + size + \" L \" + size + \" 0 M \" + size * 1.5 + \" \" + size / 2 + \" L \" + size / 2 + \" \" + size * 1.5,\n      strokeWidth: 2,\n      stroke: color\n    })));\n  };\n\n  Pattern.defaultProps = {\n    size: 6,\n    opacity: 0.75\n  };\n  return Pattern;\n}(PureComponent); // Function is returned (not PureComponent descendant) because\n// result is invoked as function (not as React component).\n\n\nvar withPattern = function (getPatternId, props) {\n  return function (Target) {\n    return function (targetProps) {\n      var color = targetProps.color,\n          restProps = __rest(targetProps, [\"color\"]);\n\n      var patternId = getPatternId(restProps);\n      return createElement(Fragment, null, createElement(Target, __assign({\n        color: \"url(#\" + patternId + \")\"\n      }, restProps)), createElement(Pattern, __assign({\n        id: patternId,\n        color: color\n      }, props)));\n    };\n  };\n};\n\nvar withAnimation = function (processAnimation, getProps, getStartCoordinates, isValuesChanged, getDelay) {\n  return function (Component) {\n    var ComponentWithAnimation = /*#__PURE__*/function (_super) {\n      __extends(ComponentWithAnimation, _super);\n\n      function ComponentWithAnimation(props) {\n        var _this = _super.call(this, props) || this;\n\n        _this.setAttribute = _this.setAttribute.bind(_this);\n        return _this;\n      }\n\n      ComponentWithAnimation.prototype.setAttribute = function (state) {\n        this.setState(state);\n      };\n\n      ComponentWithAnimation.prototype.componentDidMount = function () {\n        var _a = this.props,\n            animation = _a.animation,\n            scales = _a.scales,\n            index = _a.index,\n            readyToRenderSeries = _a.readyToRenderSeries;\n\n        if (!readyToRenderSeries) {\n          return;\n        }\n\n        var props = getProps(this.props);\n        this.processComponent(animation, {\n          scales: {}\n        }, scales, props, {}, index);\n      };\n\n      ComponentWithAnimation.prototype.componentDidUpdate = function (prevProps) {\n        var _a = this.props,\n            scales = _a.scales,\n            index = _a.index,\n            animation = _a.animation,\n            readyToRenderSeries = _a.readyToRenderSeries;\n\n        if (!readyToRenderSeries) {\n          return;\n        }\n\n        this.processComponent(animation, prevProps, scales, getProps(this.props), getProps(prevProps), index);\n      };\n\n      ComponentWithAnimation.prototype.processComponent = function (animation, _a, scales, props, prevProps, index) {\n        var prevScales = _a.scales;\n\n        if (!animation) {\n          this.setAttribute(props);\n        } else if (this.animate) {\n          if (isScalesChanged(prevScales, scales)) {\n            this.setAttribute(props);\n          } else if (isValuesChanged(prevProps, props)) {\n            var delay = getDelay ? getDelay(index, false) : 0;\n            this.animate.update(prevProps, props, delay);\n          }\n        } else {\n          this.animate = animation(getStartCoordinates(scales, props), props, processAnimation, this.setAttribute, getDelay && getDelay(index, true));\n        }\n      };\n\n      ComponentWithAnimation.prototype.componentWillUnmount = function () {\n        return this.animate && this.animate.stop();\n      };\n\n      ComponentWithAnimation.prototype.render = function () {\n        var _a = this.props,\n            readyToRenderSeries = _a.readyToRenderSeries,\n            restProps = __rest(_a, [\"readyToRenderSeries\"]);\n\n        if (!this.state) {\n          return null;\n        }\n\n        return createElement(Component, __assign({}, restProps, this.state));\n      };\n\n      return ComponentWithAnimation;\n    }(PureComponent);\n\n    return ComponentWithAnimation;\n  };\n};\n\nvar _a;\n\nvar RawArea = /*#__PURE__*/function (_super) {\n  __extends(RawArea, _super);\n\n  function RawArea() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawArea.prototype.render = function () {\n    var _a = this.props,\n        path = _a.path,\n        coordinates = _a.coordinates,\n        animation = _a.animation,\n        index = _a.index,\n        state = _a.state,\n        pointComponent = _a.pointComponent,\n        color = _a.color,\n        clipPathId = _a.clipPathId,\n        pane = _a.pane,\n        scales = _a.scales,\n        rotated = _a.rotated,\n        restProps = __rest(_a, [\"path\", \"coordinates\", \"animation\", \"index\", \"state\", \"pointComponent\", \"color\", \"clipPathId\", \"pane\", \"scales\", \"rotated\"]);\n\n    var dPath = path === undefined ? rotated ? dRotateArea : dArea : path;\n    return createElement(\"path\", __assign({\n      clipPath: \"url(#\" + clipPathId + \")\",\n      d: dPath(coordinates),\n      fill: color,\n      opacity: 0.5\n    }, restProps));\n  };\n\n  return RawArea;\n}(PureComponent); // It should actually be `withPattern<AreaSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\n\nvar Area = withAnimation(processAreaAnimation, function (_a) {\n  var coordinates = _a.coordinates;\n  return {\n    coordinates: coordinates\n  };\n}, getPathStart, isCoordinatesChanged)(withStates((_a = {}, _a[HOVERED] = withPattern(function (_a) {\n  var index = _a.index;\n  return \"series-\" + index + \"-hover\";\n}, {\n  opacity: 0.75\n})(RawArea), _a[SELECTED] = withPattern(function (_a) {\n  var index = _a.index;\n  return \"series-\" + index + \"-selection\";\n}, {\n  opacity: 0.5\n})(RawArea), _a))(RawArea)); // tslint:disable-next-line: max-line-length\n\nvar AreaSeries = declareSeries('AreaSeries', {\n  getPointTransformer: getAreaPointTransformer,\n  createHitTester: createAreaHitTester,\n  components: {\n    Path: Area\n  }\n});\n/** @internal */\n\nvar PointCollection = /*#__PURE__*/function (_super) {\n  __extends(PointCollection, _super);\n\n  function PointCollection() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PointCollection.prototype.render = function () {\n    var _a = this.props,\n        pointComponent = _a.pointComponent,\n        coordinates = _a.coordinates,\n        index = _a.index,\n        state = _a.state,\n        clipPathId = _a.clipPathId,\n        restProps = __rest(_a, [\"pointComponent\", \"coordinates\", \"index\", \"state\", \"clipPathId\"]) // restProps are used because of animation and scale\n    ;\n\n    var Point = pointComponent;\n    return coordinates.map(function (point) {\n      return createElement(Point, __assign({\n        key: String(point.index),\n        seriesIndex: index\n      }, restProps, point));\n    });\n  };\n\n  return PointCollection;\n}(PureComponent);\n\nvar _a$1;\n\nvar RawBar = /*#__PURE__*/function (_super) {\n  __extends(RawBar, _super);\n\n  function RawBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawBar.prototype.render = function () {\n    var _a = this.props,\n        arg = _a.arg,\n        val = _a.val,\n        startVal = _a.startVal,\n        barWidth = _a.barWidth,\n        maxBarWidth = _a.maxBarWidth,\n        animation = _a.animation,\n        argument = _a.argument,\n        value = _a.value,\n        seriesIndex = _a.seriesIndex,\n        index = _a.index,\n        state = _a.state,\n        rotated = _a.rotated,\n        color = _a.color,\n        pane = _a.pane,\n        scales = _a.scales,\n        restProps = __rest(_a, [\"arg\", \"val\", \"startVal\", \"barWidth\", \"maxBarWidth\", \"animation\", \"argument\", \"value\", \"seriesIndex\", \"index\", \"state\", \"rotated\", \"color\", \"pane\", \"scales\"]);\n\n    var width = barWidth * maxBarWidth;\n    var bar = dBar(arg, val, startVal, width, rotated);\n    var visibility = getVisibility(pane, bar.x + bar.width / 2, bar.y + bar.height, bar.width, bar.height);\n    var adjustedBar = visibility === 'visible' ? adjustBarSize(bar, pane) : bar;\n    return createElement(\"rect\", __assign({}, adjustedBar, {\n      fill: color,\n      visibility: visibility\n    }, restProps));\n  };\n\n  return RawBar;\n}(PureComponent); // It should actually be `withPattern<BarSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\n\nvar Bar = withAnimation(processBarAnimation, function (_a) {\n  var arg = _a.arg,\n      val = _a.val,\n      startVal = _a.startVal;\n  return {\n    arg: arg,\n    val: val,\n    startVal: startVal\n  };\n}, getPointStart, isValuesChanged)(withStates((_a$1 = {}, _a$1[HOVERED] = withPattern(function (_a) {\n  var seriesIndex = _a.seriesIndex,\n      index = _a.index;\n  return \"series-\" + seriesIndex + \"-point-\" + index + \"-hover\";\n}, {\n  opacity: 0.75\n})(RawBar), _a$1[SELECTED] = withPattern(function (_a) {\n  var seriesIndex = _a.seriesIndex,\n      index = _a.index;\n  return \"series-\" + seriesIndex + \"-point-\" + index + \"-selection\";\n}, {\n  opacity: 0.5\n})(RawBar), _a$1))(RawBar)); // tslint:disable-next-line: max-line-length\n\nvar BarSeries = declareSeries('BarSeries', {\n  getPointTransformer: getBarPointTransformer,\n  createHitTester: createBarHitTester,\n  components: {\n    Path: PointCollection,\n    Point: Bar\n  }\n});\nBarSeries.defaultProps = {\n  barWidth: 0.9\n};\n\nvar _a$2;\n\nvar RawPath = /*#__PURE__*/function (_super) {\n  __extends(RawPath, _super);\n\n  function RawPath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawPath.prototype.render = function () {\n    var _a = this.props,\n        path = _a.path,\n        animation = _a.animation,\n        coordinates = _a.coordinates,\n        rotated = _a.rotated,\n        index = _a.index,\n        state = _a.state,\n        pointComponent = _a.pointComponent,\n        color = _a.color,\n        clipPathId = _a.clipPathId,\n        scales = _a.scales,\n        pane = _a.pane,\n        restProps = __rest(_a, [\"path\", \"animation\", \"coordinates\", \"rotated\", \"index\", \"state\", \"pointComponent\", \"color\", \"clipPathId\", \"scales\", \"pane\"]);\n\n    return createElement(\"path\", __assign({\n      clipPath: \"url(#\" + clipPathId + \")\",\n      d: path(coordinates),\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: color\n    }, restProps));\n  };\n\n  return RawPath;\n}(PureComponent);\n\nvar Path = withAnimation(processLineAnimation, function (_a) {\n  var coordinates = _a.coordinates;\n  return {\n    coordinates: coordinates\n  };\n}, getPathStart, isCoordinatesChanged)(withStates((_a$2 = {}, _a$2[HOVERED] = function (props) {\n  return __assign({\n    strokeWidth: 4\n  }, props);\n}, _a$2[SELECTED] = function (props) {\n  return __assign({\n    strokeWidth: 4\n  }, props);\n}, _a$2))(RawPath));\n\nvar Line = /*#__PURE__*/function (_super) {\n  __extends(Line, _super);\n\n  function Line() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Line.prototype.render = function () {\n    var _a = this.props,\n        rotated = _a.rotated,\n        path = _a.path;\n    var dPath = path === undefined ? rotated ? dRotateLine : dLine : path;\n    return createElement(Path, __assign({}, this.props, {\n      path: dPath\n    }));\n  };\n\n  return Line;\n}(PureComponent); // tslint:disable-next-line: max-line-length\n\n\nvar LineSeries = declareSeries('LineSeries', {\n  getPointTransformer: getLinePointTransformer,\n  createHitTester: createLineHitTester,\n  components: {\n    Path: Line\n  }\n});\n\nvar _a$3;\n\nvar RawSlice = /*#__PURE__*/function (_super) {\n  __extends(RawSlice, _super);\n\n  function RawSlice() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawSlice.prototype.render = function () {\n    var _a = this.props,\n        arg = _a.arg,\n        val = _a.val,\n        rotated = _a.rotated,\n        argument = _a.argument,\n        value = _a.value,\n        seriesIndex = _a.seriesIndex,\n        index = _a.index,\n        state = _a.state,\n        maxRadius = _a.maxRadius,\n        innerRadius = _a.innerRadius,\n        outerRadius = _a.outerRadius,\n        startAngle = _a.startAngle,\n        endAngle = _a.endAngle,\n        color = _a.color,\n        animation = _a.animation,\n        pane = _a.pane,\n        scales = _a.scales,\n        restProps = __rest(_a, [\"arg\", \"val\", \"rotated\", \"argument\", \"value\", \"seriesIndex\", \"index\", \"state\", \"maxRadius\", \"innerRadius\", \"outerRadius\", \"startAngle\", \"endAngle\", \"color\", \"animation\", \"pane\", \"scales\"]);\n\n    return createElement(\"g\", {\n      transform: \"translate(\" + arg + \" \" + val + \")\"\n    }, createElement(\"path\", __assign({\n      d: dPie(maxRadius, innerRadius, outerRadius, startAngle, endAngle),\n      fill: color,\n      stroke: \"none\"\n    }, restProps)));\n  };\n\n  return RawSlice;\n}(PureComponent); // It should actually be `withPattern<PieSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\n\nvar Slice = withAnimation(processPieAnimation, function (_a) {\n  var innerRadius = _a.innerRadius,\n      outerRadius = _a.outerRadius,\n      startAngle = _a.startAngle,\n      endAngle = _a.endAngle;\n  return {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n}, getPieStart, isValuesChanged, getDelay)(withStates((_a$3 = {}, _a$3[HOVERED] = withPattern(function (_a) {\n  var seriesIndex = _a.seriesIndex,\n      index = _a.index;\n  return \"series-\" + seriesIndex + \"-point-\" + index + \"-hover\";\n}, {\n  opacity: 0.75\n})(RawSlice), _a$3[SELECTED] = withPattern(function (_a) {\n  var seriesIndex = _a.seriesIndex,\n      index = _a.index;\n  return \"series-\" + seriesIndex + \"-point-\" + index + \"-selection\";\n}, {\n  opacity: 0.5\n})(RawSlice), _a$3))(RawSlice)); // tslint:disable-next-line: max-line-length\n\nvar PieSeries = declareSeries('PieSeries', {\n  getPointTransformer: getPiePointTransformer,\n  createHitTester: createPieHitTester,\n  components: {\n    Path: PointCollection,\n    Point: Slice\n  }\n});\nPieSeries.defaultProps = {\n  innerRadius: 0,\n  outerRadius: 1\n};\n\nvar _a$4;\n\nvar RawPoint = /*#__PURE__*/function (_super) {\n  __extends(RawPoint, _super);\n\n  function RawPoint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RawPoint.prototype.render = function () {\n    var _a = this.props,\n        arg = _a.arg,\n        val = _a.val,\n        rotated = _a.rotated,\n        animation = _a.animation,\n        argument = _a.argument,\n        value = _a.value,\n        seriesIndex = _a.seriesIndex,\n        index = _a.index,\n        state = _a.state,\n        pointOptions = _a.point,\n        color = _a.color,\n        pane = _a.pane,\n        scales = _a.scales,\n        restProps = __rest(_a, [\"arg\", \"val\", \"rotated\", \"animation\", \"argument\", \"value\", \"seriesIndex\", \"index\", \"state\", \"point\", \"color\", \"pane\", \"scales\"]);\n\n    var x = rotated ? val : arg;\n    var y = rotated ? arg : val;\n    var visibility = getVisibility(pane, x, y, 0, 0);\n    return createElement(\"path\", __assign({\n      transform: \"translate(\" + x + \" \" + y + \")\",\n      d: dSymbol(pointOptions),\n      fill: color,\n      visibility: visibility,\n      stroke: \"none\"\n    }, restProps));\n  };\n\n  return RawPoint;\n}(PureComponent); // The expression is used to have 12 from 7 in default scenario\n// and to adjust hovered or selected size when custom *point.size* is defined.\n\n\nvar getAdjustedOptions = function (_a) {\n  var size = _a.size;\n  return {\n    size: Math.round(size * 1.7)\n  };\n};\n\nvar Point = withAnimation(processPointAnimation, function (_a) {\n  var arg = _a.arg,\n      val = _a.val;\n  return {\n    arg: arg,\n    val: val\n  };\n}, getPointStart, isValuesChanged)(withStates((_a$4 = {}, _a$4[HOVERED] = function (_a) {\n  var color = _a.color,\n      point = _a.point,\n      restProps = __rest(_a, [\"color\", \"point\"]);\n\n  return __assign({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    point: getAdjustedOptions(point)\n  }, restProps);\n}, _a$4[SELECTED] = function (_a) {\n  var color = _a.color,\n      point = _a.point,\n      restProps = __rest(_a, [\"color\", \"point\"]);\n\n  return __assign({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    point: getAdjustedOptions(point)\n  }, restProps);\n}, _a$4))(RawPoint)); // tslint:disable-next-line: max-line-length\n\nvar ScatterSeries = declareSeries('ScatterSeries', {\n  getPointTransformer: getScatterPointTransformer,\n  createHitTester: createScatterHitTester,\n  components: {\n    Path: PointCollection,\n    Point: Point\n  }\n});\nScatterSeries.defaultProps = {\n  point: {\n    size: 7\n  }\n};\n\nvar Spline = /*#__PURE__*/function (_super) {\n  __extends(Spline, _super);\n\n  function Spline() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Spline.prototype.render = function () {\n    var _a = this.props,\n        rotated = _a.rotated,\n        path = _a.path;\n    var dPath = path === undefined ? rotated ? dRotateSpline : dSpline : path;\n    return createElement(Path, __assign({}, this.props, {\n      path: dPath\n    }));\n  };\n\n  return Spline;\n}(PureComponent); // tslint:disable-next-line: max-line-length\n\n\nvar SplineSeries = declareSeries('SplineSeries', {\n  getPointTransformer: getLinePointTransformer,\n  createHitTester: createSplineHitTester,\n  components: {\n    Path: Spline\n  }\n});\n\nvar getOffset = function (position) {\n  return position >= 0 ? 0 : -position;\n};\n\nvar getSize = function (position, delta) {\n  return position >= 0 ? position + delta : -position;\n};\n\nvar Root$1 = /*#__PURE__*/function (_super) {\n  __extends(Root, _super);\n\n  function Root(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.ref = createRef();\n    _this.state = {\n      x: 0,\n      y: 0\n    };\n    _this.adjust = _this.adjust.bind(_this);\n    return _this;\n  }\n\n  Root.prototype.componentDidMount = function () {\n    this.setState(this.adjust);\n  };\n\n  Root.prototype.componentDidUpdate = function () {\n    // *setState* is called unconditionally because PureComponent is expected to break the cycle.\n    this.setState(this.adjust);\n  }; // Since calculated state does not depend on current state non-callback version of *setState*\n  // might have been expected - it can't be done.\n  // Parent component (Axis) accesses its DOM content in *onSizeChange* handler. When\n  // this component is mounted parent is not yet - it crashes on DOM access.\n  // *setState* callback is invoked later then *componentDidMount* - by that time parent component\n  // is already mounted and can access its DOM.\n  // Because of it callback version of *setState* has to be used here.\n  // Can we rely on the fact that by the time of callback parent is mounted?\n  // For now we stick with it, but need to find a more solid solution.\n\n\n  Root.prototype.adjust = function (_, _a) {\n    var dx = _a.dx,\n        dy = _a.dy,\n        onSizeChange = _a.onSizeChange;\n    var bbox = this.ref.current.getBBox();\n    var width = dx ? bbox.width : getSize(bbox.x, bbox.width);\n    var height = dy ? bbox.height : getSize(bbox.y, bbox.height);\n    var x = dx ? 0 : getOffset(bbox.x);\n    var y = dy ? 0 : getOffset(bbox.y);\n    onSizeChange({\n      width: width,\n      height: height\n    });\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  Root.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        onSizeChange = _a.onSizeChange,\n        dx = _a.dx,\n        dy = _a.dy,\n        restProps = __rest(_a, [\"children\", \"onSizeChange\", \"dx\", \"dy\"]);\n\n    var _b = this.state,\n        x = _b.x,\n        y = _b.y;\n    return createElement(\"g\", __assign({\n      ref: this.ref,\n      transform: \"translate(\" + x + \" \" + y + \")\"\n    }, restProps), children);\n  };\n\n  return Root;\n}(PureComponent);\n\nvar Label$1 = /*#__PURE__*/function (_super) {\n  __extends(Label, _super);\n\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Label.prototype.render = function () {\n    var _a = this.props,\n        text = _a.text,\n        restProps = __rest(_a, [\"text\"]);\n\n    return createElement(\"text\", __assign({}, restProps), text);\n  };\n\n  return Label;\n}(PureComponent);\n\nvar Line$1 = /*#__PURE__*/function (_super) {\n  __extends(Line, _super);\n\n  function Line() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Line.prototype.render = function () {\n    var _a = this.props,\n        x1 = _a.x1,\n        x2 = _a.x2,\n        y1 = _a.y1,\n        y2 = _a.y2,\n        restProps = __rest(_a, [\"x1\", \"x2\", \"y1\", \"y2\"]);\n\n    return createElement(\"path\", __assign({\n      d: \"M \" + x1 + \" \" + y1 + \" L \" + x2 + \" \" + y2\n    }, restProps));\n  };\n\n  return Line;\n}(PureComponent);\n\nvar SVG_STYLE$1 = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  overflow: 'visible'\n};\n\nvar RawAxis = /*#__PURE__*/function (_super) {\n  __extends(RawAxis, _super);\n\n  function RawAxis() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.rootRef = createRef();\n    _this.adjustedWidth = 0;\n    _this.adjustedHeight = 0;\n    return _this;\n  }\n\n  RawAxis.prototype.renderAxis = function (position) {\n    var _this = this;\n\n    var _a = this.props,\n        scaleName = _a.scaleName,\n        tickSize = _a.tickSize,\n        tickFormat = _a.tickFormat,\n        indentFromAxis = _a.indentFromAxis,\n        showTicks = _a.showTicks,\n        showLine = _a.showLine,\n        showLabels = _a.showLabels,\n        RootComponent = _a.rootComponent,\n        TickComponent = _a.tickComponent,\n        LabelComponent = _a.labelComponent,\n        LineComponent = _a.lineComponent;\n    var placeholder = position + \"-axis\";\n    var layoutName = placeholder + \"-\" + scaleName;\n    return createElement(Template, {\n      name: placeholder\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var scales = _a.scales,\n          layouts = _a.layouts,\n          rotated = _a.rotated;\n      var changeBBox = _b.changeBBox;\n\n      if (!isValidPosition(position, scaleName, rotated)) {\n        return null;\n      }\n\n      var scale = scales[scaleName];\n\n      if (!scale) {\n        return null;\n      }\n\n      var _c = layouts[layoutName] || {\n        width: 0,\n        height: 0\n      },\n          width = _c.width,\n          height = _c.height;\n\n      var paneSize = layouts.pane;\n\n      var _d = getTickCoordinates({\n        callback: tickCoordinatesGetter,\n        scaleName: scaleName,\n        position: position,\n        tickSize: tickSize,\n        tickFormat: tickFormat,\n        indentFromAxis: indentFromAxis,\n        scale: scale,\n        paneSize: [paneSize.width, paneSize.height],\n        rotated: rotated\n      }),\n          _e = __read(_d.sides, 2),\n          dx = _e[0],\n          dy = _e[1],\n          ticks = _d.ticks;\n\n      var handleSizeChange = function (size) {\n        // The callback is called when DOM is available -\n        // *rootRef.current* can be surely accessed.\n        var rect = _this.rootRef.current.getBoundingClientRect();\n\n        var rectSize = [dx ? rect.width : size.width, dy ? rect.height : size.height];\n\n        if (rectSize[0] === _this.adjustedWidth && rectSize[1] === _this.adjustedHeight) {\n          return;\n        } // *setState* is not used because it would cause excessive Plugin rerenders.\n        // Template rerender is provided by *changeBBox* invocation.\n\n\n        _this.adjustedWidth = rectSize[0];\n        _this.adjustedHeight = rectSize[1];\n        changeBBox({\n          placeholder: layoutName,\n          bBox: size\n        });\n      };\n\n      return createElement(\"div\", {\n        style: {\n          position: 'relative',\n          width: dy * width || undefined,\n          height: dx * height || undefined,\n          flexGrow: dx || undefined\n        },\n        ref: _this.rootRef\n      }, createElement(\"svg\", {\n        width: _this.adjustedWidth,\n        height: _this.adjustedHeight,\n        style: SVG_STYLE$1\n      }, createElement(RootComponent, {\n        dx: dx,\n        dy: dy,\n        onSizeChange: handleSizeChange\n      }, showTicks && ticks.map(function (_a) {\n        var x1 = _a.x1,\n            x2 = _a.x2,\n            y1 = _a.y1,\n            y2 = _a.y2,\n            key = _a.key;\n        return createElement(TickComponent, {\n          key: key,\n          x1: x1,\n          x2: x2,\n          y1: y1,\n          y2: y2\n        });\n      }), showLine && createElement(LineComponent, {\n        x1: 0,\n        x2: dx * paneSize.width,\n        y1: 0,\n        y2: dy * paneSize.height\n      }), showLabels && ticks.map(function (_a) {\n        var text = _a.text,\n            xText = _a.xText,\n            yText = _a.yText,\n            delta = _a.dy,\n            textAnchor = _a.textAnchor,\n            key = _a.key;\n        return createElement(LabelComponent, {\n          key: key,\n          text: text,\n          x: xText,\n          y: yText,\n          dy: delta,\n          textAnchor: textAnchor\n        });\n      }))));\n    }));\n  };\n\n  RawAxis.prototype.renderGrid = function () {\n    var _a = this.props,\n        scaleName = _a.scaleName,\n        showGrid = _a.showGrid,\n        GridComponent = _a.gridComponent;\n    return createElement(Template, {\n      name: \"series\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var scales = _a.scales,\n          layouts = _a.layouts,\n          rotated = _a.rotated;\n      var scale = scales[scaleName];\n\n      if (!scale || !showGrid) {\n        return null;\n      }\n\n      var _b = layouts.pane,\n          width = _b.width,\n          height = _b.height;\n\n      var _c = getTickCoordinates({\n        callback: gridCoordinatesGetter,\n        scaleName: scaleName,\n        scale: scale,\n        paneSize: [width, height],\n        rotated: rotated\n      }),\n          ticks = _c.ticks,\n          _d = __read(_c.sides, 2),\n          dx = _d[0],\n          dy = _d[1];\n\n      return createElement(Fragment, null, ticks.map(function (_a) {\n        var key = _a.key,\n            x1 = _a.x1,\n            y1 = _a.y1;\n        return createElement(GridComponent, {\n          key: key,\n          x1: x1,\n          x2: x1 + dy * width,\n          y1: y1,\n          y2: y1 + dx * height\n        });\n      }));\n    }));\n  };\n\n  RawAxis.prototype.render = function () {\n    var position = this.props.position;\n    var rotatedPosition = getRotatedPosition(position); // We have to occupy two placeholders (one for default case and one for rotated case) because\n    // by now it is unknown if Chart is rotated or not.\n    // Only one of templates is rendered then, the other is discarded.\n\n    return createElement(Plugin, {\n      name: \"Axis\"\n    }, createElement(Getter, {\n      name: \"axesExist\",\n      value: true\n    }), this.renderAxis(position), this.renderAxis(rotatedPosition), this.renderGrid());\n  };\n\n  RawAxis.components = {\n    rootComponent: 'Root',\n    tickComponent: 'Tick',\n    labelComponent: 'Label',\n    lineComponent: 'Line',\n    gridComponent: 'Grid'\n  };\n  RawAxis.defaultProps = {\n    tickSize: 5,\n    indentFromAxis: 10\n  };\n  return RawAxis;\n}(PureComponent);\n/** @internal */\n\n\nvar Axis = withComponents({\n  Label: Label$1,\n  Line: Line$1,\n  Root: Root$1,\n  Tick: Line$1,\n  Grid: Line$1\n})(RawAxis); // TODO: It is not axis who defines that argument is HORIZONTAL and value is VERTICAL.\n// TODO: *position* should not be *orientation* dependent -\n// if HORIZONTAL then TOP or BOTTOM, otherwise LEFT of RIGHT.\n// It should be domain dependent - something like AT_DOMAIN_START or AT_DOMAIN_END.\n\nvar ArgumentAxis = withPatchedProps(function (props) {\n  return __assign(__assign({\n    position: BOTTOM,\n    showGrid: false,\n    showTicks: true,\n    showLine: true,\n    showLabels: true\n  }, props), {\n    scaleName: ARGUMENT_DOMAIN\n  });\n})(Axis);\nvar ValueAxis = withPatchedProps(function (props) {\n  return __assign(__assign({\n    position: LEFT,\n    showGrid: true,\n    showTicks: false,\n    showLine: false,\n    showLabels: true\n  }, props), {\n    scaleName: getValueDomainName(props.scaleName)\n  });\n})(Axis);\nvar dependencies = [{\n  name: 'EventTracker',\n  optional: true\n}];\n\nvar TooltipBase = /*#__PURE__*/function (_super) {\n  __extends(TooltipBase, _super);\n\n  function TooltipBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      target: props.targetItem || props.defaultTargetItem\n    };\n\n    var handlePointerMove = _this.handlePointerMove.bind(_this);\n\n    _this.getPointerMoveHandlers = function (_a) {\n      var _b = _a.pointerMoveHandlers,\n          pointerMoveHandlers = _b === void 0 ? [] : _b;\n      return __spread(pointerMoveHandlers, [handlePointerMove]);\n    };\n\n    return _this;\n  }\n\n  TooltipBase.getDerivedStateFromProps = function (props, state) {\n    return {\n      target: props.targetItem !== undefined ? props.targetItem : state.target\n    };\n  };\n\n  TooltipBase.prototype.handlePointerMove = function (_a) {\n    var targets = _a.targets;\n    this.setState(function (_a, _b) {\n      var currentTarget = _a.target;\n      var onTargetItemChange = _b.onTargetItemChange;\n      var target = processHandleTooltip(targets, currentTarget, onTargetItemChange);\n\n      if (target === undefined) {\n        return null;\n      }\n\n      return {\n        target: target\n      };\n    });\n  };\n\n  TooltipBase.prototype.render = function () {\n    var _a = this.props,\n        OverlayComponent = _a.overlayComponent,\n        ContentComponent = _a.contentComponent,\n        SheetComponent = _a.sheetComponent,\n        arrowComponent = _a.arrowComponent;\n    var target = this.state.target;\n    return createElement(Plugin, {\n      name: \"Tooltip\",\n      dependencies: dependencies\n    }, createElement(Getter, {\n      name: \"pointerMoveHandlers\",\n      computed: this.getPointerMoveHandlers\n    }), createElement(Template, {\n      name: \"series\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var series = _a.series,\n          rootRef = _a.rootRef,\n          rotated = _a.rotated;\n\n      if (!target) {\n        return null;\n      }\n\n      var _b = getParameters(series, target),\n          text = _b.text,\n          element = _b.element;\n\n      return createElement(OverlayComponent, {\n        key: \"\" + target.series + target.point,\n        target: createReference(element, rootRef),\n        rotated: rotated,\n        arrowComponent: arrowComponent\n      }, createElement(SheetComponent, null, createElement(ContentComponent, {\n        text: text,\n        targetItem: target\n      })));\n    })));\n  };\n\n  TooltipBase.components = {\n    overlayComponent: 'Overlay',\n    contentComponent: 'Content',\n    arrowComponent: 'Arrow',\n    sheetComponent: 'Sheet'\n  };\n  return TooltipBase;\n}(PureComponent);\n\nvar Tooltip = TooltipBase;\n\nvar DragBox = /*#__PURE__*/function (_super) {\n  __extends(DragBox, _super);\n\n  function DragBox() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DragBox.prototype.render = function () {\n    var _a = this.props,\n        rect = _a.rect,\n        restProps = __rest(_a, [\"rect\"]);\n\n    return createElement(\"rect\", __assign({\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }, restProps));\n  };\n\n  return DragBox;\n}(PureComponent);\n\nvar events = {\n  wheel: {\n    func: 'onWheel'\n  },\n  mousedown: {\n    func: 'onStart',\n    extraEvents: ['mousemove', 'mouseup']\n  },\n  touchstart: {\n    func: 'onStart',\n    extraEvents: ['touchmove', 'touchend']\n  }\n};\n\nvar ZoomPanProvider = /*#__PURE__*/function (_super) {\n  __extends(ZoomPanProvider, _super);\n\n  function ZoomPanProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ZoomPanProvider.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.svgElement = this.props.rootRef.current;\n    setCursorType(this.svgElement);\n    this.windowHandlers = Object.keys(events).reduce(function (prev, key) {\n      var _a, _b;\n\n      var extraEvents = events[key].extraEvents;\n\n      if (extraEvents) {\n        return __assign(__assign({}, prev), (_a = {}, _a[key] = (_b = {}, _b[extraEvents[0]] = function (event) {\n          _this.props.onMove(event);\n        }, _b[extraEvents[1]] = function (event) {\n          _this.props.onEnd(event);\n\n          setCursorType(_this.svgElement);\n          detachEvents(window, _this.windowHandlers[key]);\n        }, _b), _a));\n      }\n\n      return prev;\n    }, {});\n    this.handlers = Object.keys(events).reduce(function (prev, key) {\n      var _a;\n\n      return __assign(__assign({}, prev), (_a = {}, _a[key] = function (e) {\n        _this.props[events[key].func](e);\n\n        if (events[key].extraEvents) {\n          attachEvents(window, _this.windowHandlers[key]);\n        }\n      }, _a));\n    }, {});\n    attachEvents(this.svgElement, this.handlers);\n  };\n\n  ZoomPanProvider.prototype.componentWillUnmount = function () {\n    var _this = this;\n\n    detachEvents(this.svgElement, this.handlers);\n    Object.keys(this.windowHandlers).forEach(function (el) {\n      detachEvents(window, _this.windowHandlers[el]);\n    });\n  };\n\n  ZoomPanProvider.prototype.render = function () {\n    return null;\n  };\n\n  return ZoomPanProvider;\n}(PureComponent); // tslint:disable-next-line:max-classes-per-file\n\n\nvar ZoomAndPanBase = /*#__PURE__*/function (_super) {\n  __extends(ZoomAndPanBase, _super);\n\n  function ZoomAndPanBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.multiTouchDelta = null;\n    _this.lastCoordinates = null;\n    _this.rectOrigin = null;\n    _this.offset = [0, 0];\n    _this.state = {\n      viewport: props.viewport || props.defaultViewport,\n      rectBox: null\n    };\n    return _this;\n  }\n\n  ZoomAndPanBase.getDerivedStateFromProps = function (props, state) {\n    return {\n      viewport: props.viewport !== undefined ? props.viewport : state.viewport\n    };\n  };\n\n  ZoomAndPanBase.prototype.handleStart = function (zoomRegionKey, e) {\n    // Default browser behavior is prevented in \"move\" handler. It is not enough for IPad.\n    // Calling \"preventDefault\" here (on \"start\") works for IPad.\n    // Going further, since we have to call \"preventDefault\" on \"start\" we may try to get rid of\n    // \"preventDefault\" on move.\n    // TODO: Try to remove \"preventDefault\" from \"move\" handler.\n    e.preventDefault();\n    this.offset = getOffset$1(e.currentTarget);\n    var coords = getEventCoords(e, this.offset); // Rectangle mode should be canceled if \"zoomRegionKey\" is released during mouse movevent or\n    // not pressed when mouse is up. To do it access to \"event\" object is required in\n    // \"handleMove\" and \"handleEnd\".\n    // TODO: Provide rectangle mode canceling.\n\n    if (isKeyPressed(e, zoomRegionKey)) {\n      this.rectOrigin = coords;\n    } else {\n      setCursorType(e.currentTarget, 'grabbing');\n    }\n\n    if (isMultiTouch(e)) {\n      this.multiTouchDelta = getDeltaForTouches(e.touches).delta;\n    }\n\n    this.lastCoordinates = coords;\n  };\n\n  ZoomAndPanBase.prototype.handleMove = function (scales, rotated, e, pane) {\n    e.preventDefault();\n    clearSelection();\n\n    if (isMultiTouch(e)) {\n      var current = getDeltaForTouches(e.touches);\n      this.zoom(scales, rotated, current.delta - this.multiTouchDelta, current.center);\n      this.multiTouchDelta = current.delta;\n    } else {\n      this.scroll(scales, rotated, e, pane);\n    }\n  };\n\n  ZoomAndPanBase.prototype.scroll = function (scales, rotated, e, pane) {\n    var _this = this;\n\n    var coords = getEventCoords(e, this.offset);\n    var deltaX = coords[0] - this.lastCoordinates[0];\n    var deltaY = coords[1] - this.lastCoordinates[1];\n    this.lastCoordinates = coords;\n    this.setState(function (_a, _b) {\n      var viewport = _a.viewport;\n      var onViewportChange = _b.onViewportChange,\n          interactionWithArguments = _b.interactionWithArguments,\n          interactionWithValues = _b.interactionWithValues;\n\n      if (_this.rectOrigin) {\n        return {\n          rectBox: getRect(rotated, interactionWithArguments, interactionWithValues, _this.rectOrigin, coords, pane)\n        };\n      }\n\n      return getViewport(scales, rotated, [interactionWithArguments, interactionWithValues], 'pan', [-deltaX, -deltaY], null, null, viewport, onViewportChange);\n    });\n  };\n\n  ZoomAndPanBase.prototype.handleEnd = function (scales, rotated) {\n    var _this = this;\n\n    this.lastCoordinates = null;\n    this.multiTouchDelta = null;\n\n    if (this.rectOrigin) {\n      this.setState(function (_a, _b) {\n        var viewport = _a.viewport,\n            rectBox = _a.rectBox;\n        var onViewportChange = _b.onViewportChange,\n            interactionWithArguments = _b.interactionWithArguments,\n            interactionWithValues = _b.interactionWithValues;\n        if (rectBox === null) return {};\n        _this.rectOrigin = null;\n        return __assign({\n          rectBox: null\n        }, getViewport(scales, rotated, [interactionWithArguments, interactionWithValues], 'zoom', null, null, [[rectBox.x, rectBox.x + rectBox.width], [rectBox.y, rectBox.y + rectBox.height]], viewport, onViewportChange));\n      });\n    }\n  };\n\n  ZoomAndPanBase.prototype.zoom = function (scales, rotated, delta, anchors) {\n    this.setState(function (_a, _b) {\n      var viewport = _a.viewport;\n      var onViewportChange = _b.onViewportChange,\n          interactionWithArguments = _b.interactionWithArguments,\n          interactionWithValues = _b.interactionWithValues;\n      return getViewport(scales, rotated, [interactionWithArguments, interactionWithValues], 'zoom', [delta, delta], anchors, null, viewport, onViewportChange);\n    });\n  };\n\n  ZoomAndPanBase.prototype.handleZoom = function (scales, rotated, e) {\n    e.preventDefault();\n    var center = getEventCoords(e, getOffset$1(e.currentTarget));\n    this.zoom(scales, rotated, getWheelDelta(e), center);\n  };\n\n  ZoomAndPanBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        viewport = _a.viewport,\n        rectBox = _a.rectBox;\n    var _b = this.props,\n        DragBoxComponent = _b.dragBoxComponent,\n        zoomRegionKey = _b.zoomRegionKey;\n\n    var getAdjustedLayout = function (_a) {\n      var domains = _a.domains,\n          ranges = _a.ranges;\n      return adjustLayout(domains, ranges, viewport);\n    };\n\n    return createElement(Plugin, {\n      name: \"zoomAndPan\"\n    }, createElement(Getter, {\n      name: \"ranges\",\n      computed: getAdjustedLayout\n    }), createElement(Template, {\n      name: \"root\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var scales = _a.scales,\n          rotated = _a.rotated,\n          rootRef = _a.rootRef,\n          layouts = _a.layouts;\n      return createElement(ZoomPanProvider, {\n        rootRef: rootRef,\n        onWheel: function (e) {\n          return _this.handleZoom(scales, rotated, e);\n        },\n        onStart: function (e) {\n          return _this.handleStart(zoomRegionKey, e);\n        },\n        onMove: function (e) {\n          return _this.handleMove(scales, rotated, e, layouts.pane);\n        },\n        onEnd: function (e) {\n          return _this.handleEnd(scales, rotated);\n        }\n      });\n    })), createElement(Template, {\n      name: \"series\"\n    }, createElement(TemplatePlaceholder, null), rectBox ? createElement(DragBoxComponent, {\n      rect: rectBox\n    }) : null));\n  };\n\n  ZoomAndPanBase.components = {\n    dragBoxComponent: 'DragBox'\n  };\n  ZoomAndPanBase.defaultProps = {\n    interactionWithValues: 'none',\n    interactionWithArguments: 'both',\n    zoomRegionKey: 'shift'\n  };\n  return ZoomAndPanBase;\n}(PureComponent);\n\nvar ZoomAndPan = withComponents({\n  DragBox: DragBox\n})(ZoomAndPanBase);\n\nvar wrapToList = function (arg) {\n  return arg ? [arg] : [];\n};\n\nvar EVENT_NAME_TO_REACT_MAP = {\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mouseleave: 'onMouseLeave',\n  touchstart: 'onTouchStart'\n}; // Translates event names from common space to React.\n// https://developer.mozilla.org/en-US/docs/Web/Events\n\nvar translateEventNames = function (handlers) {\n  var result = {};\n  Object.entries(handlers).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        name = _b[0],\n        handler = _b[1];\n\n    result[EVENT_NAME_TO_REACT_MAP[name]] = handler;\n  });\n  return result;\n};\n\nvar EventTrackerBase = /*#__PURE__*/function (_super) {\n  __extends(EventTrackerBase, _super);\n\n  function EventTrackerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  EventTrackerBase.prototype.render = function () {\n    var _a = this.props,\n        onClick = _a.onClick,\n        onPointerMove = _a.onPointerMove;\n    return createElement(Plugin, {\n      name: \"EventTracker\"\n    }, createElement(Getter, {\n      name: \"clickHandlers\",\n      value: wrapToList(onClick)\n    }), createElement(Getter, {\n      name: \"pointerMoveHandlers\",\n      value: wrapToList(onPointerMove)\n    }), createElement(Template, {\n      name: \"canvas\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var series = _a.series,\n            clickHandlers = _a.clickHandlers,\n            pointerMoveHandlers = _a.pointerMoveHandlers;\n        var handlers = buildEventHandlers(series, {\n          clickHandlers: clickHandlers,\n          pointerMoveHandlers: pointerMoveHandlers\n        }); // TODO: Conflicts are still possible. Improve this code.\n\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), translateEventNames(handlers))\n        });\n      });\n    }));\n  };\n\n  return EventTrackerBase;\n}(PureComponent);\n\nvar EventTracker = EventTrackerBase;\nvar dependencies$1 = [{\n  name: 'EventTracker',\n  optional: true\n}];\n\nvar HoverStateBase = /*#__PURE__*/function (_super) {\n  __extends(HoverStateBase, _super);\n\n  function HoverStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      hover: props.hover || props.defaultHover\n    };\n\n    var handlePointerMove = _this.handlePointerMove.bind(_this);\n\n    _this.getPointerMoveHandlers = function (_a) {\n      var _b = _a.pointerMoveHandlers,\n          pointerMoveHandlers = _b === void 0 ? [] : _b;\n      return __spread(pointerMoveHandlers, [handlePointerMove]);\n    };\n\n    return _this;\n  }\n\n  HoverStateBase.getDerivedStateFromProps = function (props, state) {\n    return {\n      hover: props.hover !== undefined ? props.hover : state.hover\n    };\n  };\n\n  HoverStateBase.prototype.handlePointerMove = function (_a) {\n    var targets = _a.targets;\n    this.setState(function (_a, _b) {\n      var currentTarget = _a.hover;\n      var onHoverChange = _b.onHoverChange;\n      var hover = processPointerMove(targets, currentTarget, onHoverChange);\n      return hover !== undefined ? {\n        hover: hover\n      } : null;\n    });\n  };\n\n  HoverStateBase.prototype.render = function () {\n    var hover = this.state.hover; // Function has to be recreated every time as there is no other way\n    // to notify that \"series\" is updated.\n\n    var targets = hover ? [hover] : [];\n\n    var getSeries = function (_a) {\n      var series = _a.series;\n      return changeSeriesState(series, targets, HOVERED);\n    };\n\n    return createElement(Plugin, {\n      name: \"HoverState\",\n      dependencies: dependencies$1\n    }, createElement(Getter, {\n      name: \"pointerMoveHandlers\",\n      computed: this.getPointerMoveHandlers\n    }), createElement(Getter, {\n      name: \"series\",\n      computed: getSeries\n    }));\n  };\n\n  return HoverStateBase;\n}(PureComponent);\n\nvar HoverState = HoverStateBase;\n\nvar SelectionStateBase = /*#__PURE__*/function (_super) {\n  __extends(SelectionStateBase, _super);\n\n  function SelectionStateBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SelectionStateBase.prototype.render = function () {\n    var selection = this.props.selection;\n    var targets = selection || [];\n\n    var getSeries = function (_a) {\n      var series = _a.series;\n      return changeSeriesState(series, targets, SELECTED);\n    };\n\n    return createElement(Plugin, {\n      name: \"SelectionState\"\n    }, createElement(Getter, {\n      name: \"series\",\n      computed: getSeries\n    }));\n  };\n\n  return SelectionStateBase;\n}(PureComponent);\n\nvar SelectionState = SelectionStateBase;\nexport { Animation, AreaSeries, ArgumentAxis, ArgumentScale, Axis, BarSeries, Chart, EventTracker, HoverState, Legend, LineSeries, Palette, PieSeries, Scale, ScatterSeries, SelectionState, SplineSeries, Stack, Title, Tooltip, ValueAxis, ValueScale, ZoomAndPan, withPatchedProps };","map":{"version":3,"sources":["../src/plugins/basic-data.tsx","../src/plugins/chart-core.tsx","../src/plugins/axes-layout.tsx","../src/plugins/space-filling-rects.tsx","../src/plugins/controller-component.tsx","../src/templates/clip-path.tsx","../src/utils/updatable-sizer.tsx","../src/plugins/pane-layout.tsx","../src/plugins/layout-manager.tsx","../src/plugins/component-layout.tsx","../src/plugins/palette.tsx","../src/templates/layout.tsx","../src/templates/label.tsx","../src/chart.tsx","../src/templates/legend/marker.tsx","../src/plugins/legend.tsx","../src/plugins/title.tsx","../src/utils/series-helper.tsx","../src/utils/patch-props.tsx","../src/plugins/scale.tsx","../src/plugins/stack.tsx","../src/plugins/animation.tsx","../src/utils/with-states.tsx","../src/templates/pattern.tsx","../src/utils/with-pattern.tsx","../src/utils/with-animation.tsx","../src/templates/series/area.tsx","../src/plugins/area-series.tsx","../src/templates/series/point-collection.tsx","../src/templates/series/bar.tsx","../src/plugins/bar-series.tsx","../src/templates/series/path.tsx","../src/templates/series/line.tsx","../src/plugins/line-series.tsx","../src/templates/series/slice.tsx","../src/plugins/pie-series.tsx","../src/templates/series/point.tsx","../src/plugins/scatter-series.tsx","../src/templates/series/spline.tsx","../src/plugins/spline-series.tsx","../src/templates/axis/root.tsx","../src/templates/axis/label.tsx","../src/templates/axis/line.tsx","../src/plugins/axis.tsx","../src/plugins/tooltip.tsx","../src/templates/drag-box.tsx","../src/plugins/zoom-and-pan.tsx","../src/plugins/event-tracker.tsx","../src/plugins/hover-state.tsx","../src/plugins/selection-state.tsx"],"names":["React.createElement","React.PureComponent","React.createRef","React.isValidElement","React.Fragment","_a","SVG_STYLE","Line","getOffset","dependencies"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { defaultDomains } from '@devexpress/dx-chart-core';\nimport { BasicDataProps } from '../types';\n\nconst series = [];\n\nexport const BasicData: React.SFC<BasicDataProps> = ({ data, rotated }) => (\n  <Plugin name=\"Basis\">\n    <Getter name=\"data\" value={data} />\n    <Getter name=\"domains\" value={defaultDomains} />\n    <Getter name=\"series\" value={series} />\n    <Getter name=\"rotated\" value={rotated} />\n  </Plugin>\n);\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { buildScales, scaleSeriesPoints } from '@devexpress/dx-chart-core';\n\nconst getScales = ({ domains, ranges }: Getters) => buildScales(domains, ranges);\n\nconst getSeries = ({\n  series, scales, rotated,\n}: Getters) => scaleSeriesPoints(series, scales, rotated);\n\nexport class ChartCore extends React.PureComponent {\n  render() {\n    return (\n      <Plugin>\n        <Getter name=\"scales\" computed={getScales} />\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder, Getter } from '@devexpress/dx-react-core';\n\nexport class AxesLayout extends React.PureComponent {\n  ref = React.createRef<HTMLDivElement>();\n  render() {\n    return (\n      <Plugin>\n        <Getter name=\"centerDivRef\" value={this.ref} />\n        <Template name=\"canvas\">\n          <div\n            id=\"center-center\"\n            ref={this.ref}\n            style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}\n          >\n            <div id={`${TOP}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n              <TemplatePlaceholder name={`${TOP}-${LEFT}-axis`} />\n              <TemplatePlaceholder name={`${TOP}-axis`} />\n              <TemplatePlaceholder name={`${TOP}-${RIGHT}-axis`} />\n            </div>\n            <div\n              id=\"center-axis-container\"\n              style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}\n            >\n              <TemplatePlaceholder name={`${LEFT}-axis`} />\n              <TemplatePlaceholder />\n              <TemplatePlaceholder name={`${RIGHT}-axis`} />\n            </div>\n            <div id={`${BOTTOM}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n              <TemplatePlaceholder name={`${BOTTOM}-${LEFT}-axis`} />\n              <TemplatePlaceholder name={`${BOTTOM}-axis`} />\n              <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}-axis`} />\n            </div>\n          </div>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Plugin, Template, TemplateConnector } from '@devexpress/dx-react-core';\nimport { SpaceFillingRectsProps, BBoxes } from '../types';\n\nexport class SpaceFillingRects extends React.PureComponent<SpaceFillingRectsProps> {\n  render() {\n    const { placeholders } = this.props;\n    return (\n      <Plugin name=\"SpaceFillingRects\">\n        {placeholders.map(name => (\n          <Template name={name} key={name}>\n            <TemplateConnector>\n              {({ layouts }) => {\n                const key = name.slice(name.indexOf('-') + 1);\n                const width = Object.keys(layouts as BBoxes).reduce((prev, cur) => {\n                  if (cur.includes(key)) {\n                    return prev + layouts[cur].width;\n                  }\n                  return prev;\n                }, 0);\n                return <div id={name} style={{ width }} />;\n              }}\n            </TemplateConnector>\n          </Template>\n        ))}\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { isReadyToRenderSeries } from '@devexpress/dx-chart-core';\n\nexport class ControllerComponent extends React.PureComponent {\n  isPreviousDataEmpty: boolean = true;\n\n  readyToRenderSeriesComputed = ({\n    layouts, centerDivRef, data, axesExist,\n  }: Getters) => {\n    const isPreviousDataEmpty = this.isPreviousDataEmpty;\n    this.isPreviousDataEmpty = !data.length;\n    return isReadyToRenderSeries(layouts, centerDivRef, isPreviousDataEmpty, !!axesExist);\n  }\n\n  render () {\n    return (\n    <Plugin name=\"ControllerComponent\">\n      <Getter name=\"readyToRenderSeries\" computed={this.readyToRenderSeriesComputed} />\n    </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ClipPathProps } from '../types';\n\nconst EXTRA_PIXELS = 2;\n\nexport class ClipPath extends React.PureComponent<ClipPathProps> {\n  render() {\n    const {\n      id, width, height,\n    } = this.props;\n    return (\n      <defs>\n        <clipPath id={id}>\n          <rect\n            x={-EXTRA_PIXELS / 2}\n            y={-EXTRA_PIXELS / 2}\n            width={width + EXTRA_PIXELS}\n            height={height + EXTRA_PIXELS}\n          />\n        </clipPath>\n      </defs>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Sizer, SizerProps } from '@devexpress/dx-react-core';\n\n// It is located in a separate file only for testing purpose -\n// it should actually be placed next to PaneLayout.\nexport class UpdatableSizer extends React.PureComponent<SizerProps> {\n  ref = React.createRef<Sizer>();\n\n  componentDidUpdate() {\n    this.ref.current!.setupListeners();\n  }\n\n  render() {\n    return <Sizer ref={this.ref} {...this.props} />;\n  }\n}\n","import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { ClipPath } from '../templates/clip-path';\n\n// Original *Sizer* cannot be used because it ignores (as it should do) *forceUpdate* request.\n// *UpdatableSizer* implements *componentDidUpdate* and forces internal *Sizer* size calculation.\n// It allows to run chart size recalculation by calling *forceUpdate* on chart instance.\nimport { UpdatableSizer } from '../utils/updatable-sizer';\n\nconst DIV_STYLE: React.CSSProperties = {\n  flex: 1, zIndex: 1, position: 'relative', width: '100%',\n};\n\nconst SVG_STYLE: React.CSSProperties = {\n  position: 'absolute', left: 0, top: 0, overflow: 'visible',\n};\n\nconst SizerContainer: React.SFC = ({ children }) => (\n  <div style={DIV_STYLE}>{children}</div>\n);\n\nlet numDefs = 0;\nconst getUniqueId = () => {\n  numDefs += 1;\n  return numDefs;\n};\nexport class PaneLayout extends React.PureComponent {\n  ref = React.createRef<SVGSVGElement>();\n  clipPathId = `clip_path_${getUniqueId()}`;\n\n  render() {\n    return (\n      <Plugin name=\"PaneLayout\">\n        <Getter name=\"rootRef\" value={this.ref} />\n        <Getter name=\"clipPathId\" value={this.clipPathId} />\n        <Template name=\"canvas\">\n        {params => (\n          <TemplateConnector>\n            {({ layouts }, { changeBBox }) => {\n              const { width, height } = layouts.pane;\n              return (\n                <UpdatableSizer\n                  containerComponent={SizerContainer}\n                  onSizeChange={size => changeBBox({ placeholder: 'pane', bBox: size })}\n                >\n                  <svg\n                    ref={this.ref}\n                    {...params}\n                    width={width}\n                    height={height}\n                    style={SVG_STYLE}\n                  >\n                    <ClipPath id={this.clipPathId} width={width} height={height} />\n                    <TemplatePlaceholder name=\"series\" />\n                  </svg>\n                </UpdatableSizer>\n              );\n            }}\n          </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Action,\n  Template,\n  TemplatePlaceholder,\n  createStateHelper,\n  Getters,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport { bBoxes, getRanges } from '@devexpress/dx-chart-core';\nimport { LayoutManagerProps, LayoutManagerState, BBoxesChange } from '../types';\n\nconst doGetRanges = ({ layouts, rotated }: Getters) => getRanges(layouts.pane, rotated);\n\nexport class LayoutManager extends React.PureComponent<LayoutManagerProps, LayoutManagerState> {\n  static defaultProps: Partial<LayoutManagerProps> = {\n    width: 0,\n  };\n  changeBBox: ActionFn<BBoxesChange>;\n\n  constructor(props: LayoutManagerProps) {\n    super(props);\n\n    this.state = { bBoxes: { pane: { width: 0, height: 0 } } };\n\n    const stateHelper = createStateHelper(this);\n    this.changeBBox = stateHelper.applyFieldReducer.bind(\n      stateHelper,\n      'bBoxes',\n      bBoxes,\n    );\n  }\n\n  render() {\n    const {\n      width, height, rootComponent: Root, ...restProps\n    } = this.props;\n    const { bBoxes: stateBBoxes } = this.state;\n\n    return (\n      <Plugin>\n        <Getter name=\"layouts\" value={stateBBoxes} />\n        <Getter name=\"ranges\" computed={doGetRanges} />\n        <Action name=\"changeBBox\" action={this.changeBBox} />\n\n        <Template name=\"root\">\n          <Root\n            width={width!}\n            height={height}\n            {...restProps}\n          >\n            <TemplatePlaceholder name=\"canvas\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const ComponentLayout: React.SFC = () => (\n  <Plugin name=\"ComponentLayout\">\n    <Template name=\"canvas\">\n      <div id={`${TOP}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n        <TemplatePlaceholder name={TOP} />\n        <TemplatePlaceholder name={`${TOP}-${RIGHT}`} />\n      </div>\n      <div id=\"center-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n        <TemplatePlaceholder name={LEFT} />\n        <TemplatePlaceholder />\n        <TemplatePlaceholder name={RIGHT} />\n      </div>\n      <div id={`${BOTTOM}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${BOTTOM}-${LEFT}`} />\n        <TemplatePlaceholder name={BOTTOM} />\n        <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}`} />\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { PaletteProps } from '../types';\n\nclass PaletteBase extends React.PureComponent<PaletteProps> {\n  render() {\n    const { scheme } = this.props;\n    return (\n      <Plugin name=\"Palette\">\n        <Getter name=\"palette\" value={scheme} />\n      </Plugin>\n    );\n  }\n}\n\nexport const Palette: React.ComponentType<PaletteProps> = PaletteBase;\n","import * as React from 'react';\nimport { RootLayoutProps } from '../types';\n\nexport class Root extends React.PureComponent<RootLayoutProps> {\n  render() {\n    const {\n      children, width, height, style, ...restProps\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          ...style,\n          height: `${height}px`,\n          ...width ? { width: `${width}px` } : null,\n        }}\n        {...restProps}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Chart } from '../types';\n\nexport class Label extends React.PureComponent<Chart.LabelProps> {\n  render() {\n    return (\n      <text {...this.props} />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PluginHost, withComponents, PluginComponents } from '@devexpress/dx-react-core';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { ChartProps } from './types';\n\nimport { BasicData } from './plugins/basic-data';\nimport { ChartCore } from './plugins/chart-core';\nimport { AxesLayout } from './plugins/axes-layout';\nimport { SpaceFillingRects } from './plugins/space-filling-rects';\nimport { ControllerComponent } from './plugins/controller-component';\nimport { PaneLayout } from './plugins/pane-layout';\nimport { LayoutManager } from './plugins/layout-manager';\nimport { ComponentLayout } from './plugins/component-layout';\nimport { Palette } from './plugins/palette';\nimport { Root } from './templates/layout';\nimport { Label } from './templates/label';\n\nconst scheme = [];\nconst placeholders = [\n  `${TOP}-${LEFT}`,\n  `${TOP}-${RIGHT}`,\n  `${BOTTOM}-${LEFT}`,\n  `${BOTTOM}-${RIGHT}`,\n  `${TOP}-${LEFT}-axis`,\n  `${TOP}-${RIGHT}-axis`,\n  `${BOTTOM}-${LEFT}-axis`,\n  `${BOTTOM}-${RIGHT}-axis`,\n];\n\nclass RawChart extends React.PureComponent<ChartProps> {\n  static defaultProps: Partial<ChartProps> = {\n    height: 500,\n    rotated: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n  };\n\n  render() {\n    const {\n      data,\n      width,\n      height,\n      children,\n      rotated,\n      rootComponent,\n      ...restProps\n    } = this.props;\n    return ((\n      <PluginHost>\n        <BasicData data={data} rotated={rotated!} />\n        <Palette scheme={scheme} />\n        <LayoutManager\n          width={width}\n          height={height!}\n          rootComponent={rootComponent}\n          {...restProps}\n        />\n        <PaneLayout />\n        <AxesLayout />\n        <ComponentLayout />\n        <SpaceFillingRects placeholders={placeholders} />\n        {children}\n        <ControllerComponent />\n        <ChartCore />\n      </PluginHost>\n    ));\n  }\n}\n\nexport const Chart: React.ComponentType<ChartProps> = withComponents({ Root })(RawChart);\n(Chart as any).Label = Label;\n","import * as React from 'react';\nimport { Legend } from '../../types';\n\nexport class Marker extends React.PureComponent<Legend.MarkerProps> {\n  render() {\n    const { color, ...restProps } = this.props;\n    return (\n      <svg fill={color} width=\"10\" height=\"10\" {...restProps}>\n        <circle r={5} cx={5} cy={5} {...restProps} />\n      </svg>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  withComponents,\n  Getters,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { getLegendItems } from '@devexpress/dx-chart-core';\nimport { Marker } from '../templates/legend/marker';\nimport { LegendProps } from '../types';\n\nclass RawLegend extends React.PureComponent<LegendProps> {\n  static defaultProps: Partial<LegendProps> = {\n    position: 'right',\n    getItems: ({ series }: Getters) => getLegendItems(series),\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    itemComponent: 'Item',\n    markerComponent: 'Marker',\n    labelComponent: 'Label',\n  };\n\n  render() {\n    const {\n      markerComponent: MarkerComponent,\n      labelComponent: Label,\n      rootComponent: Root,\n      itemComponent: Item,\n      position,\n      getItems,\n    } = this.props;\n    const placeholder = position!;\n    return (\n      <Plugin name=\"Legend\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {getters => (\n              <Root name={`legend-${placeholder}`}>\n                {getItems!(getters).map(({ text, color }) => (\n                  <Item key={text}>\n                    <MarkerComponent name={text} color={color} />\n                    <Label text={text} />\n                  </Item>\n                ))}\n              </Root>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const Legend: React.ComponentType<LegendProps> = withComponents({ Marker })(RawLegend);\n","import * as React from 'react';\n\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TitleProps } from '../types';\n\nclass TitleBase extends React.PureComponent<TitleProps> {\n  static components: PluginComponents = {\n    textComponent: 'Text',\n  };\n  static defaultProps: Partial<TitleProps> = {\n    position: 'top',\n  };\n\n  render() {\n    const {\n      textComponent: Text,\n      text,\n      position,\n    } = this.props;\n    const placeholder = position!;\n    return (\n      <Plugin name=\"Title\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <Text text={text} />\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const Title: React.ComponentType<TitleProps> = TitleBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n  withComponents,\n  Getters,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  findSeriesByName, addSeries, extendDomains, getValueDomainName, ARGUMENT_DOMAIN,\n} from '@devexpress/dx-chart-core';\nimport {\n  ExtraSeriesParameters, SeriesProps, PathComponentProps, Scales,\n} from '../types';\n\n/** @internal */\nexport const declareSeries = <T extends SeriesProps>(\n  pluginName: string,\n  { components, getPointTransformer, createHitTester }: ExtraSeriesParameters,\n): React.ComponentType<T> => {\n  class Component extends React.PureComponent<T> {\n    static components: PluginComponents;\n    static defaultProps: Partial<SeriesProps> = {\n      name: 'defaultSeriesName',\n    };\n\n    render() {\n      const {\n        name,\n        argumentField,\n        valueField,\n        scaleName,\n        seriesComponent,\n        pointComponent,\n        color,\n        ...restProps\n      } = this.props;\n      const symbolName = Symbol(name);\n      const seriesItem = {\n        getPointTransformer,\n        createHitTester,\n        ...this.props,\n        symbolName,\n      };\n      const getSeries = ({\n        series,\n        data,\n        palette,\n      }: Getters) => addSeries(series, data, palette, seriesItem, restProps);\n      const getDomains = ({\n        series,\n        domains,\n      }: Getters) => extendDomains(domains, findSeriesByName(symbolName, series));\n      return (\n        <Plugin name={pluginName}>\n          <Getter name=\"series\" computed={getSeries} />\n          <Getter name=\"domains\" computed={getDomains} />\n          <Template name=\"series\">\n            <TemplatePlaceholder />\n            <TemplateConnector>\n              {({\n                series, scales, animation, rotated, layouts, clipPathId, readyToRenderSeries,\n              }) => {\n                const { pane } = layouts;\n                const currentSeries = findSeriesByName(symbolName, series);\n                const currentScales: Scales = {\n                  argScale: scales[ARGUMENT_DOMAIN],\n                  valScale: scales[getValueDomainName(currentSeries!.scaleName)],\n                };\n                const Path: React.ComponentType<PathComponentProps> =\n                  currentSeries.seriesComponent as any;\n                return (\n                  <Path\n                    index={currentSeries.index}\n                    pointComponent={currentSeries.pointComponent}\n                    coordinates={currentSeries.points as any}\n                    rotated={rotated}\n                    state={currentSeries.state}\n                    color={currentSeries.color}\n                    scales={currentScales}\n                    pane={pane}\n                    clipPathId={clipPathId}\n                    animation={animation}\n                    readyToRenderSeries={readyToRenderSeries}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          </Template>\n        </Plugin>\n      );\n    }\n  }\n  Component.components = {};\n  if (components.Path) {\n    Component.components.seriesComponent = 'Path';\n  }\n  if (components.Point) {\n    Component.components.pointComponent = 'Point';\n  }\n  return withComponents(components)(Component);\n};\n","import * as React from 'react';\nimport { ITargetComponent } from '@devexpress/dx-react-core';\nimport { CommonComponentProps } from '@devexpress/dx-chart-core';\nimport { RawAxisProps, ScaleProps } from '../types';\n\n/** @internal */\nexport const withPatchedProps = (\n  patch: <T extends CommonComponentProps | RawAxisProps | ScaleProps>(props: T) => T,\n) => <K extends CommonComponentProps | RawAxisProps | ScaleProps>(\n  Target: React.ComponentType<K>,\n): React.ComponentType<K> => {\n  class Component extends React.PureComponent<K> {\n    static components = (Target as any as ITargetComponent).components;\n\n    render() {\n      const props = patch(this.props as K);\n      return <Target {...props} />;\n    }\n  }\n  return Component;\n};\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { ARGUMENT_DOMAIN, getValueDomainName, addDomain } from '@devexpress/dx-chart-core';\nimport { withPatchedProps } from '../utils';\nimport { ScaleProps, ArgumentScaleProps, ValueScaleProps } from '../types';\n\n/** @internal */\nexport class Scale extends React.PureComponent<ScaleProps> {\n  render() {\n    const { name, factory, modifyDomain } = this.props;\n    const args = { factory, modifyDomain };\n    const getDomains = ({ domains }: Getters) => addDomain(domains, name!, args);\n    return (\n      <Plugin name=\"Scale\">\n        <Getter name=\"domains\" computed={getDomains} />\n      </Plugin>\n    );\n  }\n}\n\nexport const ArgumentScale: React.ComponentType<ArgumentScaleProps> = withPatchedProps(props => ({\n  ...props,\n  name: ARGUMENT_DOMAIN,\n}))(Scale);\n\nexport const ValueScale: React.ComponentType<ValueScaleProps> = withPatchedProps(props => ({\n  ...props,\n  name: getValueDomainName((props as ScaleProps).name),\n}))(Scale);\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { getStackedSeries, getStackedDomains } from '@devexpress/dx-chart-core';\nimport { StackProps, StacksOptions, OffsetFn, OrderFn } from '../types';\nimport {\n  stackOrderNone,\n  stackOffsetDiverging,\n} from 'd3-shape';\n\nconst getDomains = ({ domains, series }: Getters) => getStackedDomains(domains, series);\n\nclass StackBase extends React.PureComponent<StackProps> {\n  static defaultProps: Partial<StackProps> = {\n    stacks: [],\n    offset: stackOffsetDiverging as OffsetFn,\n    order: stackOrderNone as OrderFn,\n  };\n\n  render() {\n    const { stacks, offset, order } = this.props;\n    const params: StacksOptions = {\n      stacks: stacks!,\n      offset: offset!,\n      order: order!,\n    };\n    const getSeries = ({ series, data }: Getters) => getStackedSeries(series, data, params);\n    return (\n      <Plugin name=\"Stack\">\n        <Getter name=\"series\" computed={getSeries} />\n        <Getter name=\"domains\" computed={getDomains} />\n      </Plugin>\n    );\n  }\n}\n\nexport const Stack: React.ComponentType<StackProps> = StackBase;\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { buildAnimation, easeOutCubic } from '@devexpress/dx-chart-core';\nimport { AnimationProps } from '../types';\n\nclass AnimationBase extends React.PureComponent<AnimationProps> {\n  static defaultProps: Partial<AnimationProps> = {\n    easing: easeOutCubic,\n    duration: 1000,\n  };\n  render() {\n    const { easing, duration } = this.props;\n    const buildAnimationGetter = () => buildAnimation(easing!, duration!);\n    return (\n      <Plugin name=\"Animation\">\n        <Getter name=\"animation\" computed={buildAnimationGetter} />\n      </Plugin>\n    );\n  }\n}\n\nexport const Animation: React.ComponentType<AnimationProps> = AnimationBase;\n","import * as React from 'react';\nimport { CommonComponentProps } from '@devexpress/dx-chart-core';\n\nexport const withStates = (\n  states: { readonly [key: string]: (props: any) => any; },\n) => <K extends CommonComponentProps>(\n  Component: React.ComponentType<K>,\n): React.ComponentType<K> => {\n  class ComponentWithStates extends React.PureComponent<K> {\n    render() {\n      const { state, ...restProps } = this.props;\n      const stateFunc = state && states[state!];\n      const result = stateFunc ? stateFunc(restProps) : restProps;\n      return React.isValidElement(result) ? result : <Component {...result} />;\n    }\n  }\n  return ComponentWithStates;\n};\n","import * as React from 'react';\nimport { PatternProps } from '../types';\n\nexport class Pattern extends React.PureComponent<PatternProps> {\n  static defaultProps: Partial<PatternProps> = {\n    size: 6,\n    opacity: 0.75,\n  };\n\n  render() {\n    const {\n      id, size, color, opacity,\n    } = this.props;\n    return (\n      <defs>\n        <pattern\n          id={id}\n          width={size}\n          height={size}\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <rect x={0} y={0} width={size} height={size} fill={color} opacity={opacity} />\n          <path\n            // tslint:disable-next-line: max-line-length\n            d={`M ${size! / 2} ${-size! / 2} L ${-size! / 2} ${size! / 2} M 0 ${size!} L ${size!} 0 M ${size! * 1.5} ${size! / 2} L ${size! / 2} ${size! * 1.5}`}\n            strokeWidth={2}\n            stroke={color}\n          />\n        </pattern>\n      </defs>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Pattern } from '../templates/pattern';\n\n// Function is returned (not PureComponent descendant) because\n// result is invoked as function (not as React component).\nexport const withPattern = <T extends any>(\n  getPatternId: (props: T) => string, props: T,\n) => (Target: React.ComponentType<any>) => (targetProps: any) => {\n  const { color, ...restProps } = targetProps;\n  const patternId = getPatternId(restProps);\n  return (\n    <React.Fragment>\n      <Target\n        color={`url(#${patternId})`}\n        {...restProps}\n      />\n      <Pattern\n        id={patternId}\n        color={color}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport { Animation, isScalesChanged } from '@devexpress/dx-chart-core';\nimport { GetDelayFn, Scales, AnimatedComponent } from '../types';\n\nexport const withAnimation = <T extends AnimatedComponent>(\n    processAnimation: (start: T, end: T) => (progress: number) => any, getProps: (props: T) => any,\n    getStartCoordinates: (scales: Scales, props: T) => any,\n    isValuesChanged: (previous: T, current: T) => boolean,\n    getDelay?: GetDelayFn,\n) => (Component: React.ComponentType<T>): React.ComponentType<T> => {\n  class ComponentWithAnimation extends React.PureComponent<T, T> {\n    animate: Animation | undefined;\n    constructor(props) {\n      super(props);\n\n      this.setAttribute = this.setAttribute.bind(this);\n    }\n\n    setAttribute(state) {\n      this.setState(state);\n    }\n\n    componentDidMount() {\n      const {\n        animation, scales, index, readyToRenderSeries,\n      } = this.props;\n      if (!readyToRenderSeries) {\n        return;\n      }\n      const props = getProps(this.props);\n      this.processComponent(animation, { scales: {} }, scales, props, {}, index);\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        scales, index, animation, readyToRenderSeries,\n      } = this.props;\n      if (!readyToRenderSeries) {\n        return;\n      }\n      this.processComponent(\n        animation, prevProps, scales, getProps(this.props),\n        getProps(prevProps), index,\n      );\n    }\n\n    processComponent(animation, { scales: prevScales }, scales, props, prevProps, index) {\n      if (!animation) {\n        this.setAttribute(props);\n      } else if (this.animate) {\n        if (isScalesChanged(prevScales, scales)) {\n          this.setAttribute(props);\n        } else if (isValuesChanged(prevProps, props)) {\n          const delay = getDelay ? getDelay(index, false) : 0;\n          this.animate.update(prevProps, props, delay);\n        }\n      } else {\n        this.animate = animation(\n          getStartCoordinates(scales, props), props,\n          processAnimation, this.setAttribute, getDelay && getDelay(index, true),\n        );\n      }\n    }\n\n    componentWillUnmount() {\n      return this.animate && this.animate.stop();\n    }\n\n    render() {\n      const { readyToRenderSeries, ...restProps } = this.props;\n      if (!this.state) {\n        return null;\n      }\n      return (\n        <Component {...restProps} {...this.state} />\n      );\n    }\n  }\n  return ComponentWithAnimation;\n};\n","import * as React from 'react';\nimport {\n  HOVERED, SELECTED, dArea, dRotateArea,\n  processAreaAnimation, getPathStart,\n  isCoordinatesChanged,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\nimport { withAnimation } from '../../utils/with-animation';\nimport { AreaSeries } from '../../types';\n\nclass RawArea extends React.PureComponent<AreaSeries.SeriesProps> {\n  render() {\n    const {\n      path,\n      coordinates, animation,\n      index, state, pointComponent,\n      color, clipPathId, pane,\n      scales, rotated,\n      ...restProps\n    } = this.props;\n    const dPath = path === undefined ? (rotated ? dRotateArea : dArea) : path;\n    return (\n      <path\n        clipPath={`url(#${clipPathId})`}\n        d={dPath!(coordinates)}\n        fill={color}\n        opacity={0.5}\n        {...restProps}\n      />\n    );\n  }\n}\n\n// It should actually be `withPattern<AreaSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\nexport const Area: React.ComponentType<AreaSeries.SeriesProps> = withAnimation<any>(\n  processAreaAnimation,\n  ({ coordinates }) => ({ coordinates }),\n  getPathStart,\n  isCoordinatesChanged,\n)(withStates({\n  [HOVERED]: withPattern<any>(\n    ({ index }) => `series-${index}-hover`, { opacity: 0.75 },\n  )(RawArea),\n  [SELECTED]: withPattern<any>(\n    ({ index }) => `series-${index}-selection`, { opacity: 0.5 },\n  )(RawArea),\n})(RawArea));\n","import * as React from 'react';\nimport {\n  getAreaPointTransformer as getPointTransformer, createAreaHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Area as Path } from '../templates/series/area';\nimport { AreaSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const AreaSeries: React.ComponentType<AreaSeriesProps> = declareSeries<AreaSeriesProps>('AreaSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path },\n});\n","import * as React from 'react';\nimport { PathComponentProps } from '../../types';\n\n/** @internal */\nexport class PointCollection extends React.PureComponent<PathComponentProps> {\n  render() {\n    const {\n      pointComponent,\n      coordinates,\n      index,\n      state,\n      clipPathId,\n      ...restProps // restProps are used because of animation and scale\n    } = this.props;\n    const Point = pointComponent!;\n    return (coordinates.map(point => (\n      <Point\n        key={String(point.index)}\n        seriesIndex={index}\n        {...restProps}\n        {...point}\n      />\n    )));\n  }\n}\n","import * as React from 'react';\nimport {\n  processBarAnimation, HOVERED, SELECTED, dBar, getVisibility, adjustBarSize,\n  isValuesChanged, getPointStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\nimport { withAnimation } from '../../utils/with-animation';\nimport { BarSeries } from '../../types';\n\nclass RawBar extends React.PureComponent<BarSeries.PointProps> {\n  render() {\n    const {\n      arg, val, startVal, barWidth, maxBarWidth, animation,\n      argument, value, seriesIndex, index, state, rotated,\n      color, pane,\n      scales,\n      ...restProps\n    } = this.props;\n    const width = barWidth * maxBarWidth;\n    const bar = dBar(arg, val, startVal, width, rotated);\n    const visibility = getVisibility(\n      pane, bar.x + bar.width / 2, bar.y + bar.height, bar.width, bar.height,\n    );\n    const adjustedBar = visibility === 'visible' ? adjustBarSize(bar, pane) : bar;\n    return (\n      <rect\n        {...adjustedBar}\n        fill={color}\n        visibility={visibility}\n        {...restProps}\n      />\n    );\n  }\n}\n\n// It should actually be `withPattern<BarSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\nexport const Bar: React.ComponentType<BarSeries.PointProps> = withAnimation<any>(\n    processBarAnimation,\n    ({ arg, val, startVal }) => ({ arg, val, startVal }),\n    getPointStart,\n    isValuesChanged,\n    )(withStates({\n      [HOVERED]: withPattern<any>(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-hover`, { opacity: 0.75 },\n    )(RawBar),\n      [SELECTED]: withPattern<any>(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-selection`, { opacity: 0.5 },\n    )(RawBar),\n    })(RawBar));\n","import * as React from 'react';\nimport {\n  getBarPointTransformer as getPointTransformer,\n  createBarHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Bar as Point } from '../templates/series/bar';\nimport { BarSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const BarSeries: React.ComponentType<BarSeriesProps> = declareSeries<BarSeriesProps>('BarSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path, Point },\n});\n\nBarSeries.defaultProps = {\n  barWidth: 0.9,\n};\n","import * as React from 'react';\nimport {\n  processLineAnimation, HOVERED, SELECTED, isCoordinatesChanged, getPathStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withAnimation } from '../../utils/with-animation';\nimport { PathComponentPathProps } from '../../types';\n\nclass RawPath extends React.PureComponent<PathComponentPathProps> {\n  render() {\n    const {\n      path, animation,\n      coordinates, rotated,\n      index, state, pointComponent,\n      color, clipPathId,\n      scales, pane,\n      ...restProps\n    } = this.props;\n    return (\n      <path\n        clipPath={`url(#${clipPathId})`}\n        d={path!(coordinates)}\n        fill=\"none\"\n        strokeWidth={2}\n        stroke={color}\n        {...restProps}\n      />\n    );\n  }\n}\n\nexport const Path = withAnimation<any>(\n  processLineAnimation,\n  ({ coordinates }) => ({ coordinates }),\n  getPathStart,\n  isCoordinatesChanged,\n)(withStates({\n  [HOVERED]: props => ({ strokeWidth: 4, ...props }),\n  [SELECTED]: props => ({ strokeWidth: 4, ...props }),\n})(RawPath));\n","import * as React from 'react';\nimport { dLine, dRotateLine } from '@devexpress/dx-chart-core';\nimport { Path } from './path';\nimport { LineSeries } from '../../types';\n\nexport class Line extends React.PureComponent<LineSeries.SeriesProps> {\n  render() {\n    const { rotated, path } = this.props;\n    const dPath = path === undefined ? (rotated ? dRotateLine : dLine) : path;\n    return <Path {...this.props} path={dPath} />;\n  }\n}\n","import * as React from 'react';\nimport {\n  getLinePointTransformer as getPointTransformer,\n  createLineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Line as Path } from '../templates/series/line';\nimport { AreaSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const LineSeries: React.ComponentType<AreaSeriesProps> = declareSeries<AreaSeriesProps>('LineSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path },\n});\n","import * as React from 'react';\nimport {\n  dPie, HOVERED, SELECTED, processPieAnimation, isValuesChanged, getDelay,\n  getPieStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\nimport { withAnimation } from '../../utils/with-animation';\nimport { PieSeries } from '../../types';\n\nclass RawSlice extends React.PureComponent<PieSeries.PointProps> {\n  render() {\n    const {\n      arg, val, rotated,\n      argument, value, seriesIndex, index, state, maxRadius,\n      innerRadius, outerRadius, startAngle, endAngle,\n      color, animation, pane,\n      scales,\n      ...restProps\n    } = this.props;\n    return (\n      <g transform={`translate(${arg} ${val})`}>\n        <path\n          d={dPie(maxRadius, innerRadius, outerRadius,\n            startAngle, endAngle)}\n          fill={color}\n          stroke=\"none\"\n          {...restProps}\n        />\n      </g>\n    );\n  }\n}\n\n// It should actually be `withPattern<PieSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\nexport const Slice: React.ComponentType<PieSeries.PointProps> = withAnimation<any>(\n  processPieAnimation,\n  ({ innerRadius, outerRadius, startAngle, endAngle }) =>\n  ({ innerRadius, outerRadius, startAngle, endAngle }),\n  getPieStart,\n  isValuesChanged,\n  getDelay,\n)(withStates({\n  [HOVERED]: withPattern<any>(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-hover`, { opacity: 0.75 },\n  )(RawSlice),\n  [SELECTED]: withPattern<any>(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-selection`, { opacity: 0.5 },\n  )(RawSlice),\n})(RawSlice));\n","import * as React from 'react';\nimport {\n  getPiePointTransformer as getPointTransformer,\n  createPieHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Slice as Point } from '../templates/series/slice';\nimport { PieSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const PieSeries: React.ComponentType<PieSeriesProps> = declareSeries<PieSeriesProps>('PieSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path, Point },\n});\n\nPieSeries.defaultProps = {\n  innerRadius: 0,\n  outerRadius: 1,\n};\n","import * as React from 'react';\nimport {\n  processPointAnimation, dSymbol, HOVERED, SELECTED, getVisibility,\n  isValuesChanged, getPointStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withAnimation } from '../../utils/with-animation';\nimport { ScatterSeries } from '../../types';\n\nclass RawPoint extends React.PureComponent<ScatterSeries.PointProps> {\n  render() {\n    const {\n      arg, val, rotated, animation,\n      argument, value, seriesIndex, index, state,\n      point: pointOptions,\n      color, pane,\n      scales,\n      ...restProps\n    } = this.props;\n    const x = rotated ? val : arg;\n    const y = rotated ? arg : val;\n    const visibility = getVisibility(pane, x!, y!, 0, 0);\n    return (\n      <path\n        transform={`translate(${x} ${y})`}\n        d={dSymbol(pointOptions)}\n        fill={color}\n        visibility={visibility}\n        stroke=\"none\"\n        {...restProps}\n      />\n    );\n  }\n}\n\n// The expression is used to have 12 from 7 in default scenario\n// and to adjust hovered or selected size when custom *point.size* is defined.\nconst getAdjustedOptions = ({ size }) => ({ size: Math.round(size * 1.7) });\n\nexport const Point: React.ComponentType<ScatterSeries.PointProps> = withAnimation<any>(\n  processPointAnimation,\n  ({ arg, val }) => ({ arg, val }),\n  getPointStart,\n  isValuesChanged,\n)(withStates({\n  [HOVERED]: ({ color, point, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    point: getAdjustedOptions(point),\n    ...restProps,\n  }),\n  [SELECTED]: ({ color, point, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    point: getAdjustedOptions(point),\n    ...restProps,\n  }),\n})(RawPoint));\n","import * as React from 'react';\nimport {\n  getScatterPointTransformer as getPointTransformer,\n  createScatterHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Point } from '../templates/series/point';\nimport { ScatterSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const ScatterSeries: React.ComponentType<ScatterSeriesProps> = declareSeries<ScatterSeriesProps>('ScatterSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path, Point },\n});\n\nScatterSeries.defaultProps = {\n  point: { size: 7 },\n};\n","import * as React from 'react';\nimport { dSpline, dRotateSpline } from '@devexpress/dx-chart-core';\nimport { Path } from './path';\nimport { SplineSeries } from '../../types';\n\nexport class Spline extends React.PureComponent<SplineSeries.SeriesProps> {\n  render() {\n    const { rotated, path } = this.props;\n    const dPath = path === undefined ? (rotated ? dRotateSpline : dSpline) : path;\n    return <Path {...this.props} path={dPath} />;\n  }\n}\n","import * as React from 'react';\nimport {\n  getLinePointTransformer as getPointTransformer,\n  createSplineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Spline as Path } from '../templates/series/spline';\nimport { AreaSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const SplineSeries: React.ComponentType<AreaSeriesProps> = declareSeries<AreaSeriesProps>('SplineSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path },\n});\n","import * as React from 'react';\nimport { Axis } from '../../types';\n\nconst getOffset = (position: number) => (position >= 0 ? 0 : -position);\nconst getSize = (position: number, delta: number) => (position >= 0 ? position + delta : -position);\n\nexport class Root extends React.PureComponent<Axis.RootProps, Axis.RootState> {\n  ref = React.createRef<SVGGElement>();\n\n  constructor(props: Axis.RootProps) {\n    super(props);\n    this.state = {\n      x: 0, y: 0,\n    };\n    this.adjust = this.adjust.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.adjust);\n  }\n\n  componentDidUpdate() {\n    // *setState* is called unconditionally because PureComponent is expected to break the cycle.\n    this.setState(this.adjust);\n  }\n\n  // Since calculated state does not depend on current state non-callback version of *setState*\n  // might have been expected - it can't be done.\n  // Parent component (Axis) accesses its DOM content in *onSizeChange* handler. When\n  // this component is mounted parent is not yet - it crashes on DOM access.\n  // *setState* callback is invoked later then *componentDidMount* - by that time parent component\n  // is already mounted and can access its DOM.\n  // Because of it callback version of *setState* has to be used here.\n  // Can we rely on the fact that by the time of callback parent is mounted?\n  // For now we stick with it, but need to find a more solid solution.\n  adjust(_: Axis.RootState, { dx, dy, onSizeChange }: Axis.RootProps): Axis.RootState {\n    const bbox = this.ref.current!.getBBox();\n    const width = dx ? bbox.width : getSize(bbox.x, bbox.width);\n    const height = dy ? bbox.height : getSize(bbox.y, bbox.height);\n    const x = dx ? 0 : getOffset(bbox.x);\n    const y = dy ? 0 : getOffset(bbox.y);\n    onSizeChange({ width, height });\n    return { x, y };\n  }\n\n  render() {\n    const { children, onSizeChange, dx, dy, ...restProps } = this.props;\n    const { x, y } = this.state;\n    return (\n      <g\n        ref={this.ref}\n        transform={`translate(${x} ${y})`}\n        {...restProps}\n      >\n        {children}\n      </g>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Axis } from '../../types';\n\nexport class Label extends React.PureComponent<Axis.LabelProps> {\n  render() {\n    const {\n      text, ...restProps\n    } = this.props;\n\n    return (\n      <text\n        {...restProps}\n      >\n        {text}\n      </text>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Axis } from '../../types';\n\nexport class Line extends React.PureComponent<Axis.LineProps> {\n  render() {\n    const {\n      x1, x2, y1, y2, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        {...restProps}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  withComponents,\n  PluginComponents,\n  onSizeChangeFn,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  ARGUMENT_DOMAIN, getValueDomainName,\n  getRotatedPosition, isValidPosition,\n  LEFT, BOTTOM, getTickCoordinates, gridCoordinatesGetter, tickCoordinatesGetter,\n  Tick, Grid,\n} from '@devexpress/dx-chart-core';\nimport { RawAxisProps } from '../types';\nimport { Root } from '../templates/axis/root';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\n\nimport { withPatchedProps } from '../utils';\n\nconst SVG_STYLE: React.CSSProperties = {\n  position: 'absolute', left: 0, top: 0, overflow: 'visible',\n};\n\nclass RawAxis extends React.PureComponent<RawAxisProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    tickComponent: 'Tick',\n    labelComponent: 'Label',\n    lineComponent: 'Line',\n    gridComponent: 'Grid',\n  };\n  static defaultProps: Partial<RawAxisProps> = {\n    tickSize: 5,\n    indentFromAxis: 10,\n  };\n\n  rootRef = React.createRef<HTMLDivElement>();\n  adjustedWidth = 0;\n  adjustedHeight = 0;\n\n  renderAxis(position: string) {\n    const {\n      scaleName,\n      tickSize,\n      tickFormat,\n      indentFromAxis,\n      showTicks,\n      showLine,\n      showLabels,\n      rootComponent: RootComponent,\n      tickComponent: TickComponent,\n      labelComponent: LabelComponent,\n      lineComponent: LineComponent,\n    } = this.props;\n    const placeholder = `${position}-axis`;\n    const layoutName = `${placeholder}-${scaleName}`;\n    return (\n      <Template name={placeholder}>\n        <TemplatePlaceholder />\n        <TemplateConnector>\n          {({ scales, layouts, rotated }, { changeBBox }) => {\n            if (!isValidPosition(position!, scaleName!, rotated)) {\n              return null;\n            }\n            const scale = scales[scaleName!];\n            if (!scale) {\n              return null;\n            }\n            const { width, height } = layouts[layoutName] || { width: 0, height: 0 };\n            const paneSize = layouts.pane;\n\n            const { sides: [dx, dy], ticks } = getTickCoordinates({\n              callback: tickCoordinatesGetter,\n              scaleName: scaleName!,\n              position: position!,\n              tickSize: tickSize!,\n              tickFormat,\n              indentFromAxis: indentFromAxis!,\n              scale,\n              paneSize: [paneSize.width, paneSize.height],\n              rotated,\n            });\n\n            const handleSizeChange: onSizeChangeFn = (size) => {\n              // The callback is called when DOM is available -\n              // *rootRef.current* can be surely accessed.\n              const rect = this.rootRef.current!.getBoundingClientRect();\n              const rectSize = [dx ? rect.width : size.width, dy ? rect.height : size.height];\n\n              if (rectSize[0] === this.adjustedWidth && rectSize[1] === this.adjustedHeight) {\n                return;\n              }\n              // *setState* is not used because it would cause excessive Plugin rerenders.\n              // Template rerender is provided by *changeBBox* invocation.\n              this.adjustedWidth = rectSize[0];\n              this.adjustedHeight = rectSize[1];\n              changeBBox({ placeholder: layoutName, bBox: size });\n            };\n\n            return (\n              <div\n                style={{\n                  position: 'relative',\n                  width: (dy * width) || undefined,\n                  height: (dx * height) || undefined,\n                  flexGrow: dx || undefined,\n                }}\n                ref={this.rootRef}\n              >\n                <svg\n                  width={this.adjustedWidth}\n                  height={this.adjustedHeight}\n                  style={SVG_STYLE}\n                >\n                  <RootComponent\n                    dx={dx}\n                    dy={dy}\n                    onSizeChange={handleSizeChange}\n                  >\n                    {showTicks && (ticks as Tick[]).map(({\n                      x1, x2, y1, y2, key,\n                    }) => (\n                      <TickComponent\n                        key={key}\n                        x1={x1}\n                        x2={x2}\n                        y1={y1}\n                        y2={y2}\n                      />\n                    ))}\n                    {showLine && (\n                      <LineComponent\n                        x1={0}\n                        x2={dx * paneSize.width}\n                        y1={0}\n                        y2={dy * paneSize.height}\n                      />\n                    )}\n                    {showLabels && (ticks as Tick[]).map(({\n                      text,\n                      xText,\n                      yText,\n                      dy: delta,\n                      textAnchor,\n                      key,\n                    }) => (\n                      <LabelComponent\n                        key={key}\n                        text={text}\n                        x={xText}\n                        y={yText}\n                        dy={delta}\n                        textAnchor={textAnchor}\n                      />\n                    ))}\n                  </RootComponent>\n                </svg>\n              </div>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    );\n  }\n\n  renderGrid() {\n    const {\n      scaleName,\n      showGrid,\n      gridComponent: GridComponent,\n    } = this.props;\n    return (\n      <Template name=\"series\">\n        <TemplatePlaceholder />\n        <TemplateConnector>\n          {({ scales, layouts, rotated }) => {\n            const scale = scales[scaleName!];\n            if (!scale || !showGrid) {\n              return null;\n            }\n            const { width, height } = layouts.pane;\n            const { ticks, sides: [dx, dy] } = getTickCoordinates({\n              callback: gridCoordinatesGetter,\n              scaleName: scaleName!,\n              scale,\n              paneSize: [width, height],\n              rotated,\n            });\n            return ((\n              <React.Fragment>\n                {(ticks as Grid[]).map(({\n                  key, x1, y1,\n                }) => (\n                  <GridComponent\n                    key={key}\n                    x1={x1}\n                    x2={x1 + dy * width}\n                    y1={y1}\n                    y2={y1 + dx * height}\n                  />\n                ))}\n              </React.Fragment>\n            ));\n          }}\n        </TemplateConnector>\n      </Template>\n    );\n  }\n\n  render() {\n    const { position } = this.props;\n    const rotatedPosition = getRotatedPosition(position!);\n    // We have to occupy two placeholders (one for default case and one for rotated case) because\n    // by now it is unknown if Chart is rotated or not.\n    // Only one of templates is rendered then, the other is discarded.\n    return (\n      <Plugin name=\"Axis\">\n        <Getter name=\"axesExist\" value />\n        {this.renderAxis(position!)}\n        {this.renderAxis(rotatedPosition)}\n        {this.renderGrid()}\n      </Plugin>\n    );\n  }\n}\n/** @internal */\nexport const Axis: React.ComponentType<RawAxisProps> = withComponents({\n  Label,\n  Line,\n  Root,\n  Tick: Line,\n  Grid: Line,\n})(RawAxis);\n\n// TODO: It is not axis who defines that argument is HORIZONTAL and value is VERTICAL.\n\n// TODO: *position* should not be *orientation* dependent -\n// if HORIZONTAL then TOP or BOTTOM, otherwise LEFT of RIGHT.\n// It should be domain dependent - something like AT_DOMAIN_START or AT_DOMAIN_END.\n\nexport const ArgumentAxis: React.ComponentType<RawAxisProps> = withPatchedProps(props => ({\n  position: BOTTOM,\n  showGrid: false,\n  showTicks: true,\n  showLine: true,\n  showLabels: true,\n  ...props,\n  scaleName: ARGUMENT_DOMAIN,\n}))(Axis);\n\nexport const ValueAxis: React.ComponentType<RawAxisProps> = withPatchedProps(props => ({\n  position: LEFT,\n  showGrid: true,\n  showTicks: false,\n  showLine: false,\n  showLabels: true,\n  ...props,\n  scaleName: getValueDomainName((props as RawAxisProps).scaleName),\n}))(Axis);\n","import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { getParameters, processHandleTooltip, createReference } from '@devexpress/dx-chart-core';\nimport { TooltipProps, TooltipState, GetPointerMoveHandlersFn } from '../types';\n\nconst dependencies = [{ name: 'EventTracker', optional: true }];\n\nclass TooltipBase extends React.PureComponent<TooltipProps, TooltipState> {\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    contentComponent: 'Content',\n    arrowComponent: 'Arrow',\n    sheetComponent: 'Sheet',\n  };\n  getPointerMoveHandlers: GetPointerMoveHandlersFn;\n\n  constructor(props: TooltipProps) {\n    super(props);\n    this.state = {\n      target: props.targetItem || props.defaultTargetItem,\n    };\n    const handlePointerMove = this.handlePointerMove.bind(this);\n    this.getPointerMoveHandlers = ({ pointerMoveHandlers = [] }) => [\n      ...pointerMoveHandlers, handlePointerMove,\n    ];\n  }\n\n  static getDerivedStateFromProps(props: TooltipProps, state: TooltipState): TooltipState {\n    return { target: props.targetItem !== undefined ? props.targetItem : state.target };\n  }\n\n  handlePointerMove({ targets }) {\n    this.setState((\n      { target: currentTarget },\n      { onTargetItemChange },\n    ) => {\n      const target = processHandleTooltip(targets, currentTarget!, onTargetItemChange);\n      if (target === undefined) {\n        return null;\n      }\n      return { target: target! };\n    });\n  }\n\n  render() {\n    const {\n      overlayComponent: OverlayComponent,\n      contentComponent: ContentComponent,\n      sheetComponent: SheetComponent,\n      arrowComponent,\n    } = this.props;\n    const { target } = this.state;\n    return (\n      <Plugin name=\"Tooltip\" dependencies={dependencies}>\n        <Getter name=\"pointerMoveHandlers\" computed={this.getPointerMoveHandlers} />\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ series, rootRef, rotated }) => {\n              if (!target) {\n                return null;\n              }\n              const { text, element } = getParameters(series, target);\n              return (\n                <OverlayComponent\n                  key={`${target.series}${target.point}`}\n                  target={createReference(element, rootRef)}\n                  rotated={rotated}\n                  arrowComponent={arrowComponent}\n                >\n                  <SheetComponent>\n                    <ContentComponent text={text} targetItem={target} />\n                  </SheetComponent>\n                </OverlayComponent>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const Tooltip: React.ComponentType<TooltipProps> = TooltipBase;\n","import * as React from 'react';\n\nimport { ZoomAndPan } from '../types';\n\nexport class DragBox extends React.PureComponent<ZoomAndPan.DragBoxProps> {\n  render() {\n    const {\n      rect, ...restProps\n    } = this.props;\n    return (\n      <rect\n        x={rect.x}\n        y={rect.y}\n        width={rect.width}\n        height={rect.height}\n        {...restProps}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Plugin,\n  TemplatePlaceholder,\n  Template,\n  TemplateConnector,\n  Getters,\n  Getter,\n  PluginComponents,\n  withComponents,\n  Size,\n  clearSelection,\n} from '@devexpress/dx-react-core';\nimport { DragBox } from '../templates/drag-box';\nimport {\n  adjustLayout, getViewport, isKeyPressed, getOffset, getDeltaForTouches, getRect,\n  ScalesCache, getWheelDelta, getEventCoords, isMultiTouch, attachEvents, detachEvents,\n  setCursorType,\n} from '@devexpress/dx-chart-core';\nimport {\n  ZoomAndPanProps, ZoomAndPanState, Location, NumberArray, ZoomPanProviderProps, EventHandlers,\n} from '../types';\n\nconst events = {\n  wheel: { func: 'onWheel' },\n  mousedown: {\n    func: 'onStart',\n    extraEvents: ['mousemove', 'mouseup'],\n  },\n  touchstart: {\n    func: 'onStart',\n    extraEvents: ['touchmove', 'touchend'],\n  },\n};\n\nclass ZoomPanProvider extends React.PureComponent<ZoomPanProviderProps> {\n  handlers!: EventHandlers;\n  svgElement!: SVGElement;\n  windowHandlers!: { [key: string]: EventHandlers};\n\n  componentDidMount() {\n    this.svgElement = this.props.rootRef.current!;\n    setCursorType(this.svgElement);\n\n    this.windowHandlers = Object.keys(events).reduce((prev, key) => {\n      const extraEvents = events[key].extraEvents;\n      if (extraEvents) {\n        return {\n          ...prev,\n          [key]: {\n            [extraEvents[0]]: (event: any) => {\n              this.props.onMove(event);\n            },\n            [extraEvents[1]]: (event: any) => {\n              this.props.onEnd(event);\n              setCursorType(this.svgElement);\n              detachEvents(window, this.windowHandlers[key]);\n            },\n          },\n        };\n      }\n      return prev;\n    }, {});\n\n    this.handlers = Object.keys(events).reduce((prev, key) => {\n      return {\n        ...prev,\n        [key]: (e: any) => {\n          this.props[events[key].func](e);\n          if (events[key].extraEvents) {\n            attachEvents(window, this.windowHandlers[key]);\n          }\n        },\n      };\n    }, {});\n    attachEvents(this.svgElement, this.handlers);\n  }\n\n  componentWillUnmount() {\n    detachEvents(this.svgElement, this.handlers);\n    Object.keys(this.windowHandlers).forEach((el) => {\n      detachEvents(window, this.windowHandlers[el]);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nclass ZoomAndPanBase extends React.PureComponent<ZoomAndPanProps, ZoomAndPanState> {\n  static components: PluginComponents = {\n    dragBoxComponent: 'DragBox',\n  };\n  static defaultProps: Partial<ZoomAndPanProps> = {\n    interactionWithValues: 'none',\n    interactionWithArguments: 'both',\n    zoomRegionKey: 'shift',\n  };\n\n  multiTouchDelta: number | null = null;\n  lastCoordinates: Location | null = null;\n  rectOrigin: Location | null = null;\n  offset: NumberArray = [0, 0];\n\n  constructor(props: ZoomAndPanProps) {\n    super(props);\n\n    this.state = {\n      viewport: props.viewport || props.defaultViewport,\n      rectBox: null,\n    };\n  }\n\n  static getDerivedStateFromProps(props: ZoomAndPanProps, state: ZoomAndPanState): ZoomAndPanState {\n    return {\n      viewport: props.viewport !== undefined ? props.viewport : state.viewport,\n    };\n  }\n\n  handleStart(zoomRegionKey: string, e: any) {\n    // Default browser behavior is prevented in \"move\" handler. It is not enough for IPad.\n    // Calling \"preventDefault\" here (on \"start\") works for IPad.\n    // Going further, since we have to call \"preventDefault\" on \"start\" we may try to get rid of\n    // \"preventDefault\" on move.\n    // TODO: Try to remove \"preventDefault\" from \"move\" handler.\n    e.preventDefault();\n    this.offset = getOffset(e.currentTarget);\n    const coords = getEventCoords(e, this.offset);\n      // Rectangle mode should be canceled if \"zoomRegionKey\" is released during mouse movevent or\n      // not pressed when mouse is up. To do it access to \"event\" object is required in\n      // \"handleMove\" and \"handleEnd\".\n      // TODO: Provide rectangle mode canceling.\n    if (isKeyPressed(e, zoomRegionKey)) {\n      this.rectOrigin = coords;\n    } else {\n      setCursorType(e.currentTarget, 'grabbing');\n    }\n    if (isMultiTouch(e)) {\n      this.multiTouchDelta = getDeltaForTouches(e.touches).delta;\n    }\n    this.lastCoordinates = coords;\n  }\n\n  handleMove(scales: ScalesCache, rotated: boolean, e: any, pane: Size) {\n    e.preventDefault();\n    clearSelection();\n    if (isMultiTouch(e)) {\n      const current = getDeltaForTouches(e.touches);\n      this.zoom(scales, rotated, current.delta - this.multiTouchDelta!, current.center);\n      this.multiTouchDelta = current.delta;\n    } else {\n      this.scroll(scales, rotated, e, pane);\n    }\n  }\n\n  scroll(scales: ScalesCache, rotated: boolean, e: any, pane: Size) {\n    const coords = getEventCoords(e, this.offset);\n    const deltaX = coords[0] - this.lastCoordinates![0];\n    const deltaY = coords[1] - this.lastCoordinates![1];\n    this.lastCoordinates = coords;\n    this.setState((\n      { viewport }, { onViewportChange, interactionWithArguments, interactionWithValues },\n    ) => {\n      if (this.rectOrigin) {\n        return {\n          rectBox: getRect(\n            rotated,\n            interactionWithArguments!,\n            interactionWithValues!,\n            this.rectOrigin,\n            coords,\n            pane,\n          ),\n        };\n      }\n      return getViewport(\n        scales, rotated, [interactionWithArguments!, interactionWithValues!], 'pan',\n        [-deltaX, -deltaY], null, null, viewport, onViewportChange,\n      );\n    });\n  }\n\n  handleEnd(scales: ScalesCache, rotated: boolean) {\n    this.lastCoordinates = null;\n    this.multiTouchDelta = null;\n    if (this.rectOrigin) {\n      this.setState((\n        { viewport, rectBox },\n        { onViewportChange, interactionWithArguments, interactionWithValues },\n      ) => {\n        if (rectBox === null) return {};\n\n        this.rectOrigin = null;\n        return {\n          rectBox: null,\n          ...getViewport(\n            scales, rotated, [interactionWithArguments!, interactionWithValues!], 'zoom',\n            null,\n            null,\n            [\n              [rectBox!.x, rectBox!.x + rectBox!.width],\n              [rectBox!.y, rectBox!.y + rectBox!.height],\n            ],\n            viewport, onViewportChange,\n          ),\n        };\n      });\n    }\n  }\n\n  zoom(scales: ScalesCache, rotated: boolean, delta: number, anchors: Location) {\n    this.setState((\n      { viewport }, { onViewportChange, interactionWithArguments, interactionWithValues },\n    ) => {\n      return getViewport(\n        scales, rotated, [interactionWithArguments!, interactionWithValues!], 'zoom',\n        [delta, delta], anchors, null, viewport, onViewportChange,\n      );\n    });\n  }\n\n  handleZoom(scales: ScalesCache, rotated: boolean, e: any) {\n    e.preventDefault();\n    const center = getEventCoords(e, getOffset(e.currentTarget));\n    this.zoom(scales, rotated, getWheelDelta(e), center);\n  }\n\n  render() {\n    const { viewport, rectBox } = this.state;\n    const {\n      dragBoxComponent: DragBoxComponent,\n      zoomRegionKey,\n     } = this.props;\n    const getAdjustedLayout = ({\n      domains,\n      ranges,\n    }: Getters) => adjustLayout(domains, ranges, viewport);\n    return (\n      <Plugin name=\"zoomAndPan\">\n      <Getter name=\"ranges\" computed={getAdjustedLayout} />\n        <Template name=\"root\">\n        <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ scales, rotated, rootRef, layouts }) => (\n                <ZoomPanProvider\n                  rootRef={rootRef}\n                  onWheel={e => this.handleZoom(scales, rotated, e)}\n                  onStart={e => this.handleStart(zoomRegionKey!, e)}\n                  onMove={e => this.handleMove(scales, rotated, e, layouts.pane)}\n                  onEnd={e => this.handleEnd(scales, rotated)}\n                />\n              )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          {rectBox ? (\n              <DragBoxComponent\n                rect={rectBox!}\n              />\n          ) : null}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const ZoomAndPan: React.ComponentType<\n  ZoomAndPanProps\n> =  withComponents({ DragBox })(ZoomAndPanBase);\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { buildEventHandlers } from '@devexpress/dx-chart-core';\nimport { EventTrackerProps, HandlerFn, EventHandlers } from '../types';\n\nconst wrapToList = (arg?: HandlerFn) => (arg ? [arg] : []);\n\nconst EVENT_NAME_TO_REACT_MAP = {\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mouseleave: 'onMouseLeave',\n  touchstart: 'onTouchStart',\n};\n\n// Translates event names from common space to React.\n// https://developer.mozilla.org/en-US/docs/Web/Events\nconst translateEventNames = (handlers: EventHandlers) => {\n  const result = {};\n  Object.entries(handlers).forEach(([name, handler]) => {\n    result[EVENT_NAME_TO_REACT_MAP[name]] = handler;\n  });\n  return result;\n};\n\nclass EventTrackerBase extends React.PureComponent<EventTrackerProps> {\n  render() {\n    const { onClick, onPointerMove } = this.props;\n    return (\n      <Plugin name=\"EventTracker\">\n        <Getter name=\"clickHandlers\" value={wrapToList(onClick)} />\n        <Getter name=\"pointerMoveHandlers\" value={wrapToList(onPointerMove)} />\n        <Template name=\"canvas\">\n          {params => (\n            <TemplateConnector>\n              {({ series, clickHandlers, pointerMoveHandlers }) => {\n                const handlers = buildEventHandlers(series, { clickHandlers, pointerMoveHandlers });\n                // TODO: Conflicts are still possible. Improve this code.\n                return (\n                  <TemplatePlaceholder params={{ ...params, ...translateEventNames(handlers) }} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const EventTracker: React.ComponentType<EventTrackerProps> = EventTrackerBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Getters,\n} from '@devexpress/dx-react-core';\nimport {\n  changeSeriesState, processPointerMove, HOVERED, TargetData,\n} from '@devexpress/dx-chart-core';\nimport { HoverStateProps, HoverStateState, GetPointerMoveHandlersFn } from '../types';\n\nconst dependencies = [{ name: 'EventTracker', optional: true }];\n\nclass HoverStateBase extends React.PureComponent<HoverStateProps, HoverStateState> {\n  getPointerMoveHandlers: GetPointerMoveHandlersFn;\n\n  constructor(props: HoverStateProps) {\n    super(props);\n    this.state = {\n      hover: props.hover || props.defaultHover,\n    };\n    const handlePointerMove = this.handlePointerMove.bind(this);\n    this.getPointerMoveHandlers = ({ pointerMoveHandlers = [] }) => [\n      ...pointerMoveHandlers, handlePointerMove,\n    ];\n  }\n\n  static getDerivedStateFromProps(props: HoverStateProps, state: HoverStateState): HoverStateState {\n    return { hover: props.hover !== undefined ? props.hover : state.hover };\n  }\n\n  handlePointerMove({ targets }: TargetData) {\n    this.setState(({ hover: currentTarget }, { onHoverChange }) => {\n      const hover = processPointerMove(targets, currentTarget!, onHoverChange);\n      return hover !== undefined ? { hover: hover! } : null;\n    });\n  }\n\n  render() {\n    const { hover } = this.state;\n    // Function has to be recreated every time as there is no other way\n    // to notify that \"series\" is updated.\n    const targets = hover ? [hover] : [];\n    const getSeries = ({ series }: Getters) => changeSeriesState(series, targets, HOVERED);\n    return (\n      <Plugin name=\"HoverState\" dependencies={dependencies}>\n        <Getter name=\"pointerMoveHandlers\" computed={this.getPointerMoveHandlers} />\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nexport const HoverState: React.ComponentType<HoverStateProps> = HoverStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Getters,\n} from '@devexpress/dx-react-core';\nimport { changeSeriesState, SELECTED } from '@devexpress/dx-chart-core';\nimport { SelectionStateProps } from '../types';\n\nclass SelectionStateBase extends React.PureComponent<SelectionStateProps> {\n  render() {\n    const { selection } = this.props;\n    const targets = selection || [];\n    const getSeries = ({ series }: Getters) => changeSeriesState(series, targets, SELECTED);\n    return (\n      <Plugin name=\"SelectionState\">\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nexport const SelectionState: React.ComponentType<SelectionStateProps> = SelectionStateBase;\n"]},"metadata":{},"sourceType":"module"}