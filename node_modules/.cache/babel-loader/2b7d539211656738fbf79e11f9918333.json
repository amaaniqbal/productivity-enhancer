{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/observer.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _ready_callbacks = _interopRequireDefault(require(\"../../core/utils/ready_callbacks\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar addEventsListener = function addEventsListener(events, handler) {\n  _ready_callbacks.default.add(function () {\n    events.split(\" \").forEach(function (event) {\n      _dom_adapter.default.listen(_dom_adapter.default.getDocument(), event, handler, true);\n    });\n  });\n};\n\nvar Observer = function Observer(eventMap, pointerEquals, onPointerAdding) {\n  onPointerAdding = onPointerAdding || function () {};\n\n  var pointers = [];\n\n  var getPointerIndex = function getPointerIndex(e) {\n    var index = -1;\n    (0, _iterator.each)(pointers, function (i, pointer) {\n      if (!pointerEquals(e, pointer)) {\n        return true;\n      }\n\n      index = i;\n      return false;\n    });\n    return index;\n  };\n\n  var addPointer = function addPointer(e) {\n    if (getPointerIndex(e) === -1) {\n      onPointerAdding(e);\n      pointers.push(e);\n    }\n  };\n\n  var removePointer = function removePointer(e) {\n    var index = getPointerIndex(e);\n\n    if (index > -1) {\n      pointers.splice(index, 1);\n    }\n  };\n\n  var updatePointer = function updatePointer(e) {\n    pointers[getPointerIndex(e)] = e;\n  };\n\n  addEventsListener(eventMap.dxpointerdown, addPointer);\n  addEventsListener(eventMap.dxpointermove, updatePointer);\n  addEventsListener(eventMap.dxpointerup, removePointer);\n  addEventsListener(eventMap.dxpointercancel, removePointer);\n\n  this.pointers = function () {\n    return pointers;\n  };\n\n  this.reset = function () {\n    pointers = [];\n  };\n};\n\nvar _default = Observer;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/events/pointer/observer.js"],"names":["exports","default","_iterator","require","_ready_callbacks","_interopRequireDefault","_dom_adapter","obj","__esModule","addEventsListener","events","handler","add","split","forEach","event","listen","getDocument","Observer","eventMap","pointerEquals","onPointerAdding","pointers","getPointerIndex","e","index","each","i","pointer","addPointer","push","removePointer","splice","updatePointer","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","reset","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (events/pointer/observer.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _ready_callbacks = _interopRequireDefault(require(\"../../core/utils/ready_callbacks\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar addEventsListener = function(events, handler) {\r\n    _ready_callbacks.default.add(function() {\r\n        events.split(\" \").forEach(function(event) {\r\n            _dom_adapter.default.listen(_dom_adapter.default.getDocument(), event, handler, true)\r\n        })\r\n    })\r\n};\r\nvar Observer = function(eventMap, pointerEquals, onPointerAdding) {\r\n    onPointerAdding = onPointerAdding || function() {};\r\n    var pointers = [];\r\n    var getPointerIndex = function(e) {\r\n        var index = -1;\r\n        (0, _iterator.each)(pointers, function(i, pointer) {\r\n            if (!pointerEquals(e, pointer)) {\r\n                return true\r\n            }\r\n            index = i;\r\n            return false\r\n        });\r\n        return index\r\n    };\r\n    var addPointer = function(e) {\r\n        if (getPointerIndex(e) === -1) {\r\n            onPointerAdding(e);\r\n            pointers.push(e)\r\n        }\r\n    };\r\n    var removePointer = function(e) {\r\n        var index = getPointerIndex(e);\r\n        if (index > -1) {\r\n            pointers.splice(index, 1)\r\n        }\r\n    };\r\n    var updatePointer = function(e) {\r\n        pointers[getPointerIndex(e)] = e\r\n    };\r\n    addEventsListener(eventMap.dxpointerdown, addPointer);\r\n    addEventsListener(eventMap.dxpointermove, updatePointer);\r\n    addEventsListener(eventMap.dxpointerup, removePointer);\r\n    addEventsListener(eventMap.dxpointercancel, removePointer);\r\n    this.pointers = function() {\r\n        return pointers\r\n    };\r\n    this.reset = function() {\r\n        pointers = []\r\n    }\r\n};\r\nvar _default = Observer;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}