{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/base_axis.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.Axis = exports.calculateCanvasMargins = exports.measureLabels = void 0;\n\nvar _smart_formatter = require(\"./smart_formatter\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _axes_constants = _interopRequireDefault(require(\"./axes_constants\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\n\nvar _parse_utils = require(\"../components/parse_utils\");\n\nvar _tick_generator = require(\"./tick_generator\");\n\nvar _translator2d = require(\"../translators/translator2d\");\n\nvar _range = require(\"../translators/range\");\n\nvar _tick = require(\"./tick\");\n\nvar _math2 = require(\"../../core/utils/math\");\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _xy_axes = _interopRequireDefault(require(\"./xy_axes\"));\n\nvar polarMethods = _interopRequireWildcard(require(\"./polar_axes\"));\n\nvar _constant_line = _interopRequireDefault(require(\"./constant_line\"));\n\nvar _strip = _interopRequireDefault(require(\"./strip\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar convertTicksToValues = _axes_constants.default.convertTicksToValues;\nvar _math = Math;\nvar _abs = _math.abs;\nvar _max = _math.max;\nvar _min = _math.min;\nvar _isArray = Array.isArray;\nvar DEFAULT_AXIS_LABEL_SPACING = 5;\nvar MAX_GRID_BORDER_ADHENSION = 4;\nvar TOP = _axes_constants.default.top;\nvar BOTTOM = _axes_constants.default.bottom;\nvar LEFT = _axes_constants.default.left;\nvar RIGHT = _axes_constants.default.right;\nvar CENTER = _axes_constants.default.center;\nvar KEEP = \"keep\";\nvar SHIFT = \"shift\";\nvar RESET = \"reset\";\nvar ROTATE = \"rotate\";\nvar DEFAULT_AXIS_DIVISION_FACTOR = 50;\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\nvar SCROLL_THRESHOLD = 5;\nvar MIN_BAR_MARGIN = 5;\nvar MAX_MARGIN_VALUE = .8;\nvar dateIntervals = {\n  day: 864e5,\n  week: 6048e5\n};\n\nfunction getTickGenerator(options, incidentOccurred, skipTickGeneration, rangeIsEmpty, adjustDivisionFactor, _ref) {\n  var _options$workWeek;\n\n  var allowNegatives = _ref.allowNegatives,\n      linearThreshold = _ref.linearThreshold;\n  return (0, _tick_generator.tickGenerator)({\n    axisType: options.type,\n    dataType: options.dataType,\n    logBase: options.logarithmBase,\n    allowNegatives: allowNegatives,\n    linearThreshold: linearThreshold,\n    axisDivisionFactor: adjustDivisionFactor(options.axisDivisionFactor || DEFAULT_AXIS_DIVISION_FACTOR),\n    minorAxisDivisionFactor: adjustDivisionFactor(options.minorAxisDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR),\n    numberMultipliers: options.numberMultipliers,\n    calculateMinors: options.minorTick.visible || options.minorGrid.visible || options.calculateMinors,\n    allowDecimals: options.allowDecimals,\n    endOnTick: options.endOnTick,\n    incidentOccurred: incidentOccurred,\n    firstDayOfWeek: null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0],\n    skipTickGeneration: skipTickGeneration,\n    skipCalculationLimits: options.skipCalculationLimits,\n    generateExtraTick: options.generateExtraTick,\n    minTickInterval: options.minTickInterval,\n    rangeIsEmpty: rangeIsEmpty\n  });\n}\n\nfunction createMajorTick(axis, renderer, skippedCategory) {\n  var options = axis.getOptions();\n  return (0, _tick.tick)(axis, renderer, options.tick, options.grid, skippedCategory, false);\n}\n\nfunction createMinorTick(axis, renderer) {\n  var options = axis.getOptions();\n  return (0, _tick.tick)(axis, renderer, options.minorTick, options.minorGrid);\n}\n\nfunction createBoundaryTick(axis, renderer, isFirst) {\n  var options = axis.getOptions();\n  return (0, _tick.tick)(axis, renderer, (0, _extend.extend)({}, options.tick, {\n    visible: options.showCustomBoundaryTicks\n  }), options.grid, void 0, false, isFirst ? -1 : 1);\n}\n\nfunction callAction(elements, action, actionArgument1, actionArgument2) {\n  (elements || []).forEach(function (e) {\n    return e[action](actionArgument1, actionArgument2);\n  });\n}\n\nfunction initTickCoords(ticks) {\n  callAction(ticks, \"initCoords\");\n}\n\nfunction drawTickMarks(ticks, options) {\n  callAction(ticks, \"drawMark\", options);\n}\n\nfunction drawGrids(ticks, drawLine) {\n  callAction(ticks, \"drawGrid\", drawLine);\n}\n\nfunction updateTicksPosition(ticks, options, animate) {\n  callAction(ticks, \"updateTickPosition\", options, animate);\n}\n\nfunction updateGridsPosition(ticks, animate) {\n  callAction(ticks, \"updateGridPosition\", animate);\n}\n\nvar measureLabels = function measureLabels(items) {\n  items.forEach(function (item) {\n    var label = item.getContentContainer();\n    item.labelBBox = label ? label.getBBox() : {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  });\n};\n\nexports.measureLabels = measureLabels;\n\nfunction cleanUpInvalidTicks(ticks) {\n  var i = ticks.length - 1;\n\n  for (i; i >= 0; i--) {\n    if (!removeInvalidTick(ticks, i)) {\n      break;\n    }\n  }\n\n  for (i = 0; i < ticks.length; i++) {\n    if (removeInvalidTick(ticks, i)) {\n      i--;\n    } else {\n      break;\n    }\n  }\n}\n\nfunction removeInvalidTick(ticks, i) {\n  if (null === ticks[i].coords.x || null === ticks[i].coords.y) {\n    ticks.splice(i, 1);\n    return true;\n  }\n\n  return false;\n}\n\nfunction validateAxisOptions(options) {\n  var _labelOptions$minSpac;\n\n  var labelOptions = options.label;\n  var position = options.position;\n  var defaultPosition = options.isHorizontal ? BOTTOM : LEFT;\n  var secondaryPosition = options.isHorizontal ? TOP : RIGHT;\n  var labelPosition = labelOptions.position;\n\n  if (position !== defaultPosition && position !== secondaryPosition) {\n    position = defaultPosition;\n  }\n\n  if (!labelPosition || \"outside\" === labelPosition) {\n    labelPosition = position;\n  } else {\n    if (\"inside\" === labelPosition) {\n      var _TOP$BOTTOM$LEFT$RIGH;\n\n      labelPosition = (_TOP$BOTTOM$LEFT$RIGH = {}, _defineProperty(_TOP$BOTTOM$LEFT$RIGH, TOP, BOTTOM), _defineProperty(_TOP$BOTTOM$LEFT$RIGH, BOTTOM, TOP), _defineProperty(_TOP$BOTTOM$LEFT$RIGH, LEFT, RIGHT), _defineProperty(_TOP$BOTTOM$LEFT$RIGH, RIGHT, LEFT), _TOP$BOTTOM$LEFT$RIGH)[position];\n    }\n  }\n\n  if (labelPosition !== defaultPosition && labelPosition !== secondaryPosition) {\n    labelPosition = position;\n  }\n\n  if (labelOptions.alignment !== CENTER && !labelOptions.userAlignment) {\n    var _TOP$BOTTOM$LEFT$RIGH2;\n\n    labelOptions.alignment = (_TOP$BOTTOM$LEFT$RIGH2 = {}, _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, TOP, CENTER), _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, BOTTOM, CENTER), _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, LEFT, RIGHT), _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, RIGHT, LEFT), _TOP$BOTTOM$LEFT$RIGH2)[labelPosition];\n  }\n\n  options.position = position;\n  labelOptions.position = labelPosition;\n  options.hoverMode = options.hoverMode ? options.hoverMode.toLowerCase() : \"none\";\n  labelOptions.minSpacing = null !== (_labelOptions$minSpac = labelOptions.minSpacing) && void 0 !== _labelOptions$minSpac ? _labelOptions$minSpac : DEFAULT_AXIS_LABEL_SPACING;\n  options.type && (options.type = options.type.toLowerCase());\n  options.argumentType && (options.argumentType = options.argumentType.toLowerCase());\n  options.valueType && (options.valueType = options.valueType.toLowerCase());\n}\n\nfunction getOptimalAngle(boxes, labelOpt) {\n  var angle = 180 * _math.asin((boxes[0].height + labelOpt.minSpacing) / (boxes[1].x - boxes[0].x)) / _math.PI;\n\n  return angle < 45 ? -45 : -90;\n}\n\nfunction updateLabels(ticks, step, func) {\n  ticks.forEach(function (tick, index) {\n    if (tick.getContentContainer()) {\n      if (index % step !== 0) {\n        tick.removeLabel();\n      } else {\n        if (func) {\n          func(tick, index);\n        }\n      }\n    }\n  });\n}\n\nfunction getZoomBoundValue(optionValue, dataValue) {\n  if (void 0 === optionValue) {\n    return dataValue;\n  } else {\n    if (null === optionValue) {\n      return;\n    } else {\n      return optionValue;\n    }\n  }\n}\n\nfunction configureGenerator(options, axisDivisionFactor, viewPort, screenDelta, minTickInterval) {\n  var tickGeneratorOptions = (0, _extend.extend)({}, options, {\n    endOnTick: true,\n    axisDivisionFactor: axisDivisionFactor,\n    skipCalculationLimits: true,\n    generateExtraTick: true,\n    minTickInterval: minTickInterval\n  });\n  return function (tickInterval, skipTickGeneration, min, max, breaks) {\n    return getTickGenerator(tickGeneratorOptions, _common.noop, skipTickGeneration, viewPort.isEmpty(), function (v) {\n      return v;\n    }, viewPort)({\n      min: min,\n      max: max,\n      categories: viewPort.categories,\n      isSpacedMargin: viewPort.isSpacedMargin\n    }, screenDelta, tickInterval, (0, _type.isDefined)(tickInterval), void 0, void 0, void 0, breaks);\n  };\n}\n\nfunction getConstantLineSharpDirection(coord, axisCanvas) {\n  return Math.max(axisCanvas.start, axisCanvas.end) !== coord ? 1 : -1;\n}\n\nvar calculateCanvasMargins = function calculateCanvasMargins(bBoxes, canvas) {\n  var cLeft = canvas.left;\n  var cTop = canvas.top;\n  var cRight = canvas.width - canvas.right;\n  var cBottom = canvas.height - canvas.bottom;\n  return bBoxes.reduce(function (margins, bBox) {\n    if (!bBox || bBox.isEmpty) {\n      return margins;\n    }\n\n    return {\n      left: _max(margins.left, cLeft - bBox.x),\n      top: _max(margins.top, cTop - bBox.y),\n      right: _max(margins.right, bBox.x + bBox.width - cRight),\n      bottom: _max(margins.bottom, bBox.y + bBox.height - cBottom)\n    };\n  }, {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  });\n};\n\nexports.calculateCanvasMargins = calculateCanvasMargins;\n\nvar Axis = function Axis(renderSettings) {\n  var that = this;\n  that._renderer = renderSettings.renderer;\n  that._incidentOccurred = renderSettings.incidentOccurred;\n  that._eventTrigger = renderSettings.eventTrigger;\n  that._stripsGroup = renderSettings.stripsGroup;\n  that._labelAxesGroup = renderSettings.labelAxesGroup;\n  that._constantLinesGroup = renderSettings.constantLinesGroup;\n  that._scaleBreaksGroup = renderSettings.scaleBreaksGroup;\n  that._axesContainerGroup = renderSettings.axesContainerGroup;\n  that._gridContainerGroup = renderSettings.gridGroup;\n  that._axisCssPrefix = renderSettings.widgetClass + \"-\" + (renderSettings.axisClass ? renderSettings.axisClass + \"-\" : \"\");\n\n  that._setType(renderSettings.axisType, renderSettings.drawingType);\n\n  that._createAxisGroups();\n\n  that._translator = that._createTranslator();\n  that.isArgumentAxis = renderSettings.isArgumentAxis;\n  that._viewport = {};\n  that._firstDrawing = true;\n  that._initRange = {};\n  that._getTemplate = renderSettings.getTemplate;\n};\n\nexports.Axis = Axis;\nAxis.prototype = {\n  constructor: Axis,\n  _drawAxis: function _drawAxis() {\n    var options = this._options;\n\n    if (!options.visible) {\n      return;\n    }\n\n    this._axisElement = this._createAxisElement();\n\n    this._updateAxisElementPosition();\n\n    this._axisElement.attr({\n      \"stroke-width\": options.width,\n      stroke: options.color,\n      \"stroke-opacity\": options.opacity\n    }).sharp(this._getSharpParam(true), this.getAxisSharpDirection()).append(this._axisLineGroup);\n  },\n  _createPathElement: function _createPathElement(points, attr, sharpDirection) {\n    return this.sharp(this._renderer.path(points, \"line\").attr(attr), sharpDirection);\n  },\n  sharp: function sharp(svgElement) {\n    var sharpDirection = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\n    return svgElement.sharp(this._getSharpParam(), sharpDirection);\n  },\n  customPositionIsAvailable: function customPositionIsAvailable() {\n    return false;\n  },\n  getOrthogonalAxis: _common.noop,\n  getCustomPosition: _common.noop,\n  getCustomBoundaryPosition: _common.noop,\n  resolveOverlappingForCustomPositioning: _common.noop,\n  hasCustomPosition: function hasCustomPosition() {\n    return false;\n  },\n  customPositionIsBoundaryOrthogonalAxis: function customPositionIsBoundaryOrthogonalAxis() {\n    return false;\n  },\n  getResolvedBoundaryPosition: function getResolvedBoundaryPosition() {\n    return this.getOptions().position;\n  },\n  getAxisSharpDirection: function getAxisSharpDirection() {\n    var position = this.getResolvedBoundaryPosition();\n    return this.hasCustomPosition() || position !== BOTTOM && position !== RIGHT ? 1 : -1;\n  },\n  getSharpDirectionByCoords: function getSharpDirectionByCoords(coords) {\n    var canvas = this._getCanvasStartEnd();\n\n    var maxCoord = Math.max(canvas.start, canvas.end);\n    return this.getRadius ? 0 : maxCoord !== coords[this._isHorizontal ? \"x\" : \"y\"] ? 1 : -1;\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      var grid = that._getGridPoints(tick.coords);\n\n      if (grid.points) {\n        return that._createPathElement(grid.points, gridStyle, that.getSharpDirectionByCoords(tick.coords));\n      }\n\n      return null;\n    };\n  },\n  _getGridPoints: function _getGridPoints(coords) {\n    var that = this;\n    var isHorizontal = this._isHorizontal;\n    var tickPositionField = isHorizontal ? \"x\" : \"y\";\n    var orthogonalPositions = this._orthogonalPositions;\n    var positionFrom = orthogonalPositions.start;\n    var positionTo = orthogonalPositions.end;\n    var borderOptions = that.borderOptions;\n    var canvasStart = isHorizontal ? LEFT : TOP;\n    var canvasEnd = isHorizontal ? RIGHT : BOTTOM;\n    var axisCanvas = that.getCanvas();\n    var canvas = {\n      left: axisCanvas.left,\n      right: axisCanvas.width - axisCanvas.right,\n      top: axisCanvas.top,\n      bottom: axisCanvas.height - axisCanvas.bottom\n    };\n    var firstBorderLinePosition = borderOptions.visible && borderOptions[canvasStart] ? canvas[canvasStart] : void 0;\n    var lastBorderLinePosition = borderOptions.visible && borderOptions[canvasEnd] ? canvas[canvasEnd] : void 0;\n    var minDelta = MAX_GRID_BORDER_ADHENSION + firstBorderLinePosition;\n    var maxDelta = lastBorderLinePosition - MAX_GRID_BORDER_ADHENSION;\n\n    if (that.areCoordsOutsideAxis(coords) || void 0 === coords[tickPositionField] || coords[tickPositionField] < minDelta || coords[tickPositionField] > maxDelta) {\n      return {\n        points: null\n      };\n    }\n\n    return {\n      points: isHorizontal ? null !== coords[tickPositionField] ? [coords[tickPositionField], positionFrom, coords[tickPositionField], positionTo] : null : null !== coords[tickPositionField] ? [positionFrom, coords[tickPositionField], positionTo, coords[tickPositionField]] : null\n    };\n  },\n  _getConstantLinePos: function _getConstantLinePos(parsedValue, canvasStart, canvasEnd) {\n    var value = this._getTranslatedCoord(parsedValue);\n\n    if (!(0, _type.isDefined)(value) || value < _min(canvasStart, canvasEnd) || value > _max(canvasStart, canvasEnd)) {\n      return;\n    }\n\n    return value;\n  },\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    var positionFrom = this._orthogonalPositions.start;\n    var positionTo = this._orthogonalPositions.end;\n    return {\n      points: this._isHorizontal ? [value, positionFrom, value, positionTo] : [positionFrom, value, positionTo, value]\n    };\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr, getConstantLineSharpDirection(value, this._getCanvasStartEnd()));\n  },\n  _drawConstantLineLabelText: function _drawConstantLineLabelText(text, x, y, _ref2, group) {\n    var font = _ref2.font,\n        cssClass = _ref2.cssClass;\n    return this._renderer.text(text, x, y).css((0, _utils.patchFontOptions)((0, _extend.extend)({}, this._options.label.font, font))).attr({\n      align: \"center\",\n      \"class\": cssClass\n    }).append(group);\n  },\n  _drawConstantLineLabels: function _drawConstantLineLabels(parsedValue, lineLabelOptions, value, group) {\n    var _text;\n\n    var that = this;\n    var text = lineLabelOptions.text;\n    var options = that._options;\n    var labelOptions = options.label;\n\n    that._checkAlignmentConstantLineLabels(lineLabelOptions);\n\n    text = null !== (_text = text) && void 0 !== _text ? _text : that.formatLabel(parsedValue, labelOptions);\n\n    var coords = that._getConstantLineLabelsCoords(value, lineLabelOptions);\n\n    return that._drawConstantLineLabelText(text, coords.x, coords.y, lineLabelOptions, group);\n  },\n  _getStripPos: function _getStripPos(startValue, endValue, canvasStart, canvasEnd, range) {\n    var isContinuous = !!(range.minVisible || range.maxVisible);\n    var categories = (range.categories || []).reduce(function (result, cat) {\n      result.push(cat.valueOf());\n      return result;\n    }, []);\n    var start;\n    var end;\n    var swap;\n    var startCategoryIndex;\n    var endCategoryIndex;\n\n    if (!isContinuous) {\n      if ((0, _type.isDefined)(startValue) && (0, _type.isDefined)(endValue)) {\n        var parsedStartValue = this.parser(startValue);\n        var parsedEndValue = this.parser(endValue);\n        startCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedStartValue) ? parsedStartValue.valueOf() : void 0, categories);\n        endCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedEndValue) ? parsedEndValue.valueOf() : void 0, categories);\n\n        if (startCategoryIndex === -1 || endCategoryIndex === -1) {\n          return {\n            from: 0,\n            to: 0,\n            outOfCanvas: true\n          };\n        }\n\n        if (startCategoryIndex > endCategoryIndex) {\n          swap = endValue;\n          endValue = startValue;\n          startValue = swap;\n        }\n      }\n    }\n\n    if ((0, _type.isDefined)(startValue)) {\n      startValue = this.validateUnit(startValue, \"E2105\", \"strip\");\n      start = this._getTranslatedCoord(startValue, -1);\n    } else {\n      start = canvasStart;\n    }\n\n    if ((0, _type.isDefined)(endValue)) {\n      endValue = this.validateUnit(endValue, \"E2105\", \"strip\");\n      end = this._getTranslatedCoord(endValue, 1);\n    } else {\n      end = canvasEnd;\n    }\n\n    var stripPosition = start < end ? {\n      from: start,\n      to: end\n    } : {\n      from: end,\n      to: start\n    };\n    var visibleArea = this.getVisibleArea();\n\n    if (stripPosition.from <= visibleArea[0] && stripPosition.to <= visibleArea[0] || stripPosition.from >= visibleArea[1] && stripPosition.to >= visibleArea[1]) {\n      stripPosition.outOfCanvas = true;\n    }\n\n    return stripPosition;\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromPoint, toPoint) {\n    var x;\n    var y;\n    var width;\n    var height;\n    var orthogonalPositions = this._orthogonalPositions;\n    var positionFrom = orthogonalPositions.start;\n    var positionTo = orthogonalPositions.end;\n\n    if (this._isHorizontal) {\n      x = fromPoint;\n      y = _min(positionFrom, positionTo);\n      width = toPoint - fromPoint;\n      height = _abs(positionFrom - positionTo);\n    } else {\n      x = _min(positionFrom, positionTo);\n      y = fromPoint;\n      width = _abs(positionFrom - positionTo);\n      height = _abs(fromPoint - toPoint);\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  _createStrip: function _createStrip(attrs) {\n    return this._renderer.rect(attrs.x, attrs.y, attrs.width, attrs.height);\n  },\n  _adjustStripLabels: function _adjustStripLabels() {\n    var that = this;\n\n    this._strips.forEach(function (strip) {\n      if (strip.label) {\n        strip.label.attr(that._getAdjustedStripLabelCoords(strip));\n      }\n    });\n  },\n  _adjustLabelsCoord: function _adjustLabelsCoord(offset, maxWidth, checkCanvas) {\n    var _this = this;\n\n    var that = this;\n\n    var getContainerAttrs = function getContainerAttrs(tick) {\n      return _this._getLabelAdjustedCoord(tick, offset + (tick.labelOffset || 0), maxWidth, checkCanvas);\n    };\n\n    that._majorTicks.forEach(function (tick) {\n      if (tick.label) {\n        tick.updateMultilineTextAlignment();\n        tick.label.attr(getContainerAttrs(tick));\n      } else {\n        tick.templateContainer && tick.templateContainer.attr(getContainerAttrs(tick));\n      }\n    });\n  },\n  _adjustLabels: function _adjustLabels(offset) {\n    var that = this;\n    var options = that.getOptions();\n    var positionsAreConsistent = options.position === options.label.position;\n\n    var maxSize = that._majorTicks.reduce(function (size, tick) {\n      if (!tick.getContentContainer()) {\n        return size;\n      }\n\n      var bBox = tick.labelRotationAngle ? (0, _utils.rotateBBox)(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle) : tick.labelBBox;\n      return {\n        width: _max(size.width || 0, bBox.width),\n        height: _max(size.height || 0, bBox.height),\n        offset: _max(size.offset || 0, tick.labelOffset || 0)\n      };\n    }, {});\n\n    var additionalOffset = positionsAreConsistent ? that._isHorizontal ? maxSize.height : maxSize.width : 0;\n\n    that._adjustLabelsCoord(offset, maxSize.width);\n\n    return offset + additionalOffset + (additionalOffset && that._options.label.indentFromAxis) + (positionsAreConsistent ? maxSize.offset : 0);\n  },\n  _getLabelAdjustedCoord: function _getLabelAdjustedCoord(tick, offset, maxWidth) {\n    offset = offset || 0;\n    var that = this;\n    var options = that._options;\n    var templateBox = tick.templateContainer && tick.templateContainer.getBBox();\n    var box = templateBox || (0, _utils.rotateBBox)(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle || 0);\n    var textAlign = tick.labelAlignment || options.label.alignment;\n    var isDiscrete = \"discrete\" === that._options.type;\n    var isFlatLabel = tick.labelRotationAngle % 90 === 0;\n    var indentFromAxis = options.label.indentFromAxis;\n    var labelPosition = options.label.position;\n    var axisPosition = that._axisPosition;\n    var labelCoords = tick.labelCoords;\n    var labelX = labelCoords.x;\n    var translateX;\n    var translateY;\n\n    if (that._isHorizontal) {\n      if (labelPosition === BOTTOM) {\n        translateY = axisPosition + indentFromAxis - box.y + offset;\n      } else {\n        translateY = axisPosition - indentFromAxis - (box.y + box.height) - offset;\n      }\n\n      if (textAlign === RIGHT) {\n        translateX = isDiscrete && isFlatLabel ? tick.coords.x - (box.x + box.width) : labelX - box.x - box.width;\n      } else {\n        if (textAlign === LEFT) {\n          translateX = isDiscrete && isFlatLabel ? labelX - box.x - (tick.coords.x - labelX) : labelX - box.x;\n        } else {\n          translateX = labelX - box.x - box.width / 2;\n        }\n      }\n    } else {\n      translateY = labelCoords.y - box.y - box.height / 2;\n\n      if (labelPosition === LEFT) {\n        if (textAlign === LEFT) {\n          translateX = axisPosition - indentFromAxis - maxWidth - box.x;\n        } else {\n          if (textAlign === CENTER) {\n            translateX = axisPosition - indentFromAxis - maxWidth / 2 - box.x - box.width / 2;\n          } else {\n            translateX = axisPosition - indentFromAxis - box.x - box.width;\n          }\n        }\n\n        translateX -= offset;\n      } else {\n        if (textAlign === RIGHT) {\n          translateX = axisPosition + indentFromAxis + maxWidth - box.x - box.width;\n        } else {\n          if (textAlign === CENTER) {\n            translateX = axisPosition + indentFromAxis + maxWidth / 2 - box.x - box.width / 2;\n          } else {\n            translateX = axisPosition + indentFromAxis - box.x;\n          }\n        }\n\n        translateX += offset;\n      }\n    }\n\n    return {\n      translateX: translateX,\n      translateY: translateY\n    };\n  },\n  _createAxisConstantLineGroups: function _createAxisConstantLineGroups() {\n    var that = this;\n    var renderer = that._renderer;\n    var classSelector = that._axisCssPrefix;\n    var constantLinesClass = classSelector + \"constant-lines\";\n    var insideGroup = renderer.g().attr({\n      \"class\": constantLinesClass\n    });\n    var outsideGroup1 = renderer.g().attr({\n      \"class\": constantLinesClass\n    });\n    var outsideGroup2 = renderer.g().attr({\n      \"class\": constantLinesClass\n    });\n    return {\n      inside: insideGroup,\n      outside1: outsideGroup1,\n      left: outsideGroup1,\n      top: outsideGroup1,\n      outside2: outsideGroup2,\n      right: outsideGroup2,\n      bottom: outsideGroup2,\n      remove: function remove() {\n        this.inside.remove();\n        this.outside1.remove();\n        this.outside2.remove();\n      },\n      clear: function clear() {\n        this.inside.clear();\n        this.outside1.clear();\n        this.outside2.clear();\n      }\n    };\n  },\n  _createAxisGroups: function _createAxisGroups() {\n    var that = this;\n    var renderer = that._renderer;\n    var classSelector = that._axisCssPrefix;\n    that._axisGroup = renderer.g().attr({\n      \"class\": classSelector + \"axis\"\n    }).enableLinks();\n    that._axisStripGroup = renderer.g().attr({\n      \"class\": classSelector + \"strips\"\n    });\n    that._axisGridGroup = renderer.g().attr({\n      \"class\": classSelector + \"grid\"\n    });\n    that._axisElementsGroup = renderer.g().attr({\n      \"class\": classSelector + \"elements\"\n    }).linkOn(that._axisGroup, \"axisElements\").linkAppend();\n    that._axisLineGroup = renderer.g().attr({\n      \"class\": classSelector + \"line\"\n    }).linkOn(that._axisGroup, \"axisLine\").linkAppend();\n    that._axisTitleGroup = renderer.g().attr({\n      \"class\": classSelector + \"title\"\n    }).append(that._axisGroup);\n    that._axisConstantLineGroups = {\n      above: that._createAxisConstantLineGroups(),\n      under: that._createAxisConstantLineGroups()\n    };\n    that._axisStripLabelGroup = renderer.g().attr({\n      \"class\": classSelector + \"axis-labels\"\n    });\n  },\n  _clearAxisGroups: function _clearAxisGroups() {\n    var that = this;\n\n    that._axisGroup.remove();\n\n    that._axisStripGroup.remove();\n\n    that._axisStripLabelGroup.remove();\n\n    that._axisConstantLineGroups.above.remove();\n\n    that._axisConstantLineGroups.under.remove();\n\n    that._axisGridGroup.remove();\n\n    that._axisTitleGroup.clear();\n\n    (!that._options.label.template || !that.isRendered()) && that._axisElementsGroup.clear();\n    that._axisLineGroup && that._axisLineGroup.clear();\n    that._axisStripGroup && that._axisStripGroup.clear();\n    that._axisGridGroup && that._axisGridGroup.clear();\n\n    that._axisConstantLineGroups.above.clear();\n\n    that._axisConstantLineGroups.under.clear();\n\n    that._axisStripLabelGroup && that._axisStripLabelGroup.clear();\n  },\n  _getLabelFormatObject: function _getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks) {\n    range = range || this._getViewportRange();\n    var formatObject = {\n      value: value,\n      valueText: (0, _smart_formatter.smartFormatter)(value, {\n        labelOptions: labelOptions,\n        ticks: ticks || convertTicksToValues(this._majorTicks),\n        tickInterval: null !== tickInterval && void 0 !== tickInterval ? tickInterval : this._tickInterval,\n        dataType: this._options.dataType,\n        logarithmBase: this._options.logarithmBase,\n        type: this._options.type,\n        showTransition: !this._options.marker.visible,\n        point: point\n      }) || \"\",\n      min: range.minVisible,\n      max: range.maxVisible\n    };\n\n    if (point) {\n      formatObject.point = point;\n    }\n\n    return formatObject;\n  },\n  formatLabel: function formatLabel(value, labelOptions, range, point, tickInterval, ticks) {\n    var formatObject = this._getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks);\n\n    return (0, _type.isFunction)(labelOptions.customizeText) ? labelOptions.customizeText.call(formatObject, formatObject) : formatObject.valueText;\n  },\n  formatHint: function formatHint(value, labelOptions, range) {\n    var formatObject = this._getLabelFormatObject(value, labelOptions, range);\n\n    return (0, _type.isFunction)(labelOptions.customizeHint) ? labelOptions.customizeHint.call(formatObject, formatObject) : void 0;\n  },\n  formatRange: function formatRange(startValue, endValue, interval) {\n    return (0, _smart_formatter.formatRange)(startValue, endValue, interval, this.getOptions());\n  },\n  _setTickOffset: function _setTickOffset() {\n    var options = this._options;\n    var discreteAxisDivisionMode = options.discreteAxisDivisionMode;\n    this._tickOffset = +(\"crossLabels\" !== discreteAxisDivisionMode || !discreteAxisDivisionMode);\n  },\n  resetApplyingAnimation: function resetApplyingAnimation(isFirstDrawing) {\n    this._resetApplyingAnimation = true;\n\n    if (isFirstDrawing) {\n      this._firstDrawing = true;\n    }\n  },\n  getMargins: function getMargins() {\n    var that = this;\n\n    if (that.hasCustomPosition()) {\n      return {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n    }\n\n    var options = that._options;\n    var position = options.position;\n    var placeholderSize = options.placeholderSize;\n    var canvas = that.getCanvas();\n    var cLeft = canvas.left;\n    var cTop = canvas.top;\n    var cRight = canvas.width - canvas.right;\n    var cBottom = canvas.height - canvas.bottom;\n\n    var edgeMarginCorrection = _max(options.grid.visible && options.grid.width || 0, options.tick.visible && options.tick.width || 0);\n\n    var constantLineAboveSeries = that._axisConstantLineGroups.above;\n    var constantLineUnderSeries = that._axisConstantLineGroups.under;\n    var boxes = [that._axisElementsGroup, constantLineAboveSeries.outside1, constantLineAboveSeries.outside2, constantLineUnderSeries.outside1, constantLineUnderSeries.outside2, that._axisLineGroup].map(function (group) {\n      return group && group.getBBox();\n    }).concat(function (group) {\n      var box = group && group.getBBox();\n\n      if (!box || box.isEmpty) {\n        return box;\n      }\n\n      if (that._isHorizontal) {\n        box.x = cLeft;\n        box.width = cRight - cLeft;\n      } else {\n        box.y = cTop;\n        box.height = cBottom - cTop;\n      }\n\n      return box;\n    }(that._axisTitleGroup));\n    var margins = calculateCanvasMargins(boxes, canvas);\n    margins[position] += options.crosshairMargin;\n\n    if (placeholderSize) {\n      margins[position] = placeholderSize;\n    }\n\n    if (edgeMarginCorrection) {\n      if (that._isHorizontal && canvas.right < edgeMarginCorrection && margins.right < edgeMarginCorrection) {\n        margins.right = edgeMarginCorrection;\n      }\n\n      if (!that._isHorizontal && canvas.bottom < edgeMarginCorrection && margins.bottom < edgeMarginCorrection) {\n        margins.bottom = edgeMarginCorrection;\n      }\n    }\n\n    return margins;\n  },\n  validateUnit: function validateUnit(unit, idError, parameters) {\n    var that = this;\n    unit = that.parser(unit);\n\n    if (void 0 === unit && idError) {\n      that._incidentOccurred(idError, [parameters]);\n    }\n\n    return unit;\n  },\n  _setType: function _setType(axisType, drawingType) {\n    var that = this;\n    var axisTypeMethods;\n\n    switch (axisType) {\n      case \"xyAxes\":\n        axisTypeMethods = _xy_axes.default;\n        break;\n\n      case \"polarAxes\":\n        axisTypeMethods = polarMethods;\n    }\n\n    (0, _extend.extend)(that, axisTypeMethods[drawingType]);\n  },\n  _getSharpParam: function _getSharpParam() {\n    return true;\n  },\n  _disposeBreaksGroup: _common.noop,\n  dispose: function dispose() {\n    var that = this;\n    [that._axisElementsGroup, that._axisStripGroup, that._axisGroup].forEach(function (g) {\n      g.dispose();\n    });\n    that._strips = that._title = null;\n    that._axisStripGroup = that._axisConstantLineGroups = that._axisStripLabelGroup = that._axisBreaksGroup = null;\n    that._axisLineGroup = that._axisElementsGroup = that._axisGridGroup = null;\n    that._axisGroup = that._axisTitleGroup = null;\n    that._axesContainerGroup = that._stripsGroup = that._constantLinesGroup = null;\n    that._renderer = that._options = that._textOptions = that._textFontStyles = null;\n    that._translator = null;\n    that._majorTicks = that._minorTicks = null;\n\n    that._disposeBreaksGroup();\n\n    that._templatesRendered && that._templatesRendered.reject();\n  },\n  getOptions: function getOptions() {\n    return this._options;\n  },\n  setPane: function setPane(pane) {\n    this.pane = pane;\n    this._options.pane = pane;\n  },\n  setTypes: function setTypes(type, axisType, typeSelector) {\n    this._options.type = type || this._options.type;\n    this._options[typeSelector] = axisType || this._options[typeSelector];\n\n    this._updateTranslator();\n  },\n  resetTypes: function resetTypes(typeSelector) {\n    this._options.type = this._initTypes.type;\n    this._options[typeSelector] = this._initTypes[typeSelector];\n  },\n  getTranslator: function getTranslator() {\n    return this._translator;\n  },\n  updateOptions: function updateOptions(options) {\n    var that = this;\n    var labelOpt = options.label;\n    validateAxisOptions(options);\n    that._options = options;\n    options.tick = options.tick || {};\n    options.minorTick = options.minorTick || {};\n    options.grid = options.grid || {};\n    options.minorGrid = options.minorGrid || {};\n    options.title = options.title || {};\n    options.marker = options.marker || {};\n    that._initTypes = {\n      type: options.type,\n      argumentType: options.argumentType,\n      valueType: options.valueType\n    };\n\n    that._setTickOffset();\n\n    that._isHorizontal = options.isHorizontal;\n    that.pane = options.pane;\n    that.name = options.name;\n    that.priority = options.priority;\n    that._hasLabelFormat = \"\" !== labelOpt.format && (0, _type.isDefined)(labelOpt.format);\n    that._textOptions = {\n      opacity: labelOpt.opacity,\n      align: \"center\",\n      \"class\": labelOpt.cssClass\n    };\n    that._textFontStyles = (0, _utils.patchFontOptions)(labelOpt.font);\n\n    if (options.type === _axes_constants.default.logarithmic) {\n      if (options.logarithmBaseError) {\n        that._incidentOccurred(\"E2104\");\n\n        delete options.logarithmBaseError;\n      }\n    }\n\n    that._updateTranslator();\n\n    that._createConstantLines();\n\n    that._strips = (options.strips || []).map(function (o) {\n      return (0, _strip.default)(that, o);\n    });\n    that._majorTicks = that._minorTicks = null;\n    that._firstDrawing = true;\n  },\n  calculateInterval: function calculateInterval(value, prevValue) {\n    var options = this._options;\n\n    if (!options || options.type !== _axes_constants.default.logarithmic) {\n      return _abs(value - prevValue);\n    }\n\n    var _Range = new _range.Range(this.getTranslator().getBusinessRange()),\n        allowNegatives = _Range.allowNegatives,\n        linearThreshold = _Range.linearThreshold;\n\n    return _abs((0, _utils.getLogExt)(value, options.logarithmBase, allowNegatives, linearThreshold) - (0, _utils.getLogExt)(prevValue, options.logarithmBase, allowNegatives, linearThreshold));\n  },\n  getCanvasRange: function getCanvasRange() {\n    var translator = this._translator;\n    return {\n      startValue: translator.from(translator.translate(\"canvas_position_start\")),\n      endValue: translator.from(translator.translate(\"canvas_position_end\"))\n    };\n  },\n  _processCanvas: function _processCanvas(canvas) {\n    return canvas;\n  },\n  updateCanvas: function updateCanvas(canvas, canvasRedesign) {\n    if (!canvasRedesign) {\n      var positions = this._orthogonalPositions = {\n        start: !this._isHorizontal ? canvas.left : canvas.top,\n        end: !this._isHorizontal ? canvas.width - canvas.right : canvas.height - canvas.bottom\n      };\n      positions.center = positions.start + (positions.end - positions.start) / 2;\n    } else {\n      this._orthogonalPositions = null;\n    }\n\n    this._canvas = canvas;\n\n    this._translator.updateCanvas(this._processCanvas(canvas));\n\n    this._initAxisPositions();\n  },\n  getCanvas: function getCanvas() {\n    return this._canvas;\n  },\n  getAxisShift: function getAxisShift() {\n    return this._axisShift || 0;\n  },\n  hideTitle: function hideTitle() {\n    var that = this;\n\n    if (that._options.title.text) {\n      that._incidentOccurred(\"W2105\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\n\n      that._axisTitleGroup.clear();\n    }\n  },\n  getTitle: function getTitle() {\n    return this._title;\n  },\n  hideOuterElements: function hideOuterElements() {\n    var that = this;\n    var options = that._options;\n\n    if ((options.label.visible || that._outsideConstantLines.length) && !that._translator.getBusinessRange().isEmpty()) {\n      that._incidentOccurred(\"W2106\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\n\n      that._axisElementsGroup.clear();\n\n      callAction(that._outsideConstantLines, \"removeLabel\");\n    }\n  },\n  adjustViewport: function adjustViewport(businessRange) {\n    var that = this;\n    var options = that._options;\n    var isDiscrete = options.type === _axes_constants.default.discrete;\n    var categories = that._seriesData && that._seriesData.categories || [];\n    var wholeRange = that.adjustRange((0, _utils.getVizRangeObject)(options.wholeRange));\n    var visualRange = that.getViewport() || {};\n    var result = new _range.Range(businessRange);\n\n    that._addConstantLinesToRange(result, \"minVisible\", \"maxVisible\");\n\n    var minDefined = (0, _type.isDefined)(visualRange.startValue);\n    var maxDefined = (0, _type.isDefined)(visualRange.endValue);\n\n    if (!isDiscrete) {\n      minDefined = minDefined && (!(0, _type.isDefined)(wholeRange.endValue) || visualRange.startValue < wholeRange.endValue);\n      maxDefined = maxDefined && (!(0, _type.isDefined)(wholeRange.startValue) || visualRange.endValue > wholeRange.startValue);\n    }\n\n    var minVisible = minDefined ? visualRange.startValue : result.minVisible;\n    var maxVisible = maxDefined ? visualRange.endValue : result.maxVisible;\n\n    if (!isDiscrete) {\n      var _wholeRange$startValu, _wholeRange$endValue;\n\n      result.min = null !== (_wholeRange$startValu = wholeRange.startValue) && void 0 !== _wholeRange$startValu ? _wholeRange$startValu : result.min;\n      result.max = null !== (_wholeRange$endValue = wholeRange.endValue) && void 0 !== _wholeRange$endValue ? _wholeRange$endValue : result.max;\n    } else {\n      var categoriesInfo = (0, _utils.getCategoriesInfo)(categories, wholeRange.startValue, wholeRange.endValue);\n      categories = categoriesInfo.categories;\n      result.categories = categories;\n    }\n\n    var adjustedVisualRange = (0, _utils.adjustVisualRange)({\n      axisType: options.type,\n      dataType: options.dataType,\n      base: options.logarithmBase\n    }, {\n      startValue: minDefined ? visualRange.startValue : void 0,\n      endValue: maxDefined ? visualRange.endValue : void 0,\n      length: visualRange.length\n    }, {\n      categories: categories,\n      min: wholeRange.startValue,\n      max: wholeRange.endValue\n    }, {\n      categories: categories,\n      min: minVisible,\n      max: maxVisible\n    });\n    result.minVisible = adjustedVisualRange.startValue;\n    result.maxVisible = adjustedVisualRange.endValue;\n    !(0, _type.isDefined)(result.min) && (result.min = result.minVisible);\n    !(0, _type.isDefined)(result.max) && (result.max = result.maxVisible);\n    result.addRange({});\n    return result;\n  },\n  adjustRange: function adjustRange(range) {\n    range = range || {};\n    var isDiscrete = this._options.type === _axes_constants.default.discrete;\n    var isLogarithmic = this._options.type === _axes_constants.default.logarithmic;\n    var disabledNegatives = false === this._options.allowNegatives;\n\n    if (isLogarithmic) {\n      range.startValue = disabledNegatives && range.startValue <= 0 ? null : range.startValue;\n      range.endValue = disabledNegatives && range.endValue <= 0 ? null : range.endValue;\n    }\n\n    if (!isDiscrete && (0, _type.isDefined)(range.startValue) && (0, _type.isDefined)(range.endValue) && range.startValue > range.endValue) {\n      var tmp = range.endValue;\n      range.endValue = range.startValue;\n      range.startValue = tmp;\n    }\n\n    return range;\n  },\n  _getVisualRangeUpdateMode: function _getVisualRangeUpdateMode(viewport, newRange, oppositeValue) {\n    var value = this._options.visualRangeUpdateMode;\n    var translator = this._translator;\n    var range = this._seriesData;\n\n    if (this.isArgumentAxis) {\n      if ([SHIFT, KEEP, RESET].indexOf(value) === -1) {\n        if (range.axisType === _axes_constants.default.discrete) {\n          var categories = range.categories;\n          var newCategories = newRange.categories;\n          var visualRange = this.visualRange();\n\n          if (categories && newCategories && categories.length && newCategories.map(function (c) {\n            return c.valueOf();\n          }).join(\",\").indexOf(categories.map(function (c) {\n            return c.valueOf();\n          }).join(\",\")) !== -1 && (visualRange.startValue.valueOf() !== categories[0].valueOf() || visualRange.endValue.valueOf() !== categories[categories.length - 1].valueOf())) {\n            value = KEEP;\n          } else {\n            value = RESET;\n          }\n        } else {\n          var minPoint = translator.translate(range.min);\n          var minVisiblePoint = translator.translate(viewport.startValue);\n          var maxPoint = translator.translate(range.max);\n          var maxVisiblePoint = translator.translate(viewport.endValue);\n\n          if (minPoint === minVisiblePoint && maxPoint === maxVisiblePoint) {\n            value = RESET;\n          } else {\n            if (minPoint !== minVisiblePoint && maxPoint === maxVisiblePoint) {\n              value = SHIFT;\n            } else {\n              value = KEEP;\n            }\n          }\n        }\n      }\n    } else {\n      if ([KEEP, RESET].indexOf(value) === -1) {\n        if (oppositeValue === KEEP) {\n          value = KEEP;\n        } else {\n          value = RESET;\n        }\n      }\n    }\n\n    return value;\n  },\n  _handleBusinessRangeChanged: function _handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, newRange) {\n    var that = this;\n    var visualRange = this.visualRange();\n\n    if (axisReinitialized || that._translator.getBusinessRange().isEmpty()) {\n      return;\n    }\n\n    var visualRangeUpdateMode = that._lastVisualRangeUpdateMode = that._getVisualRangeUpdateMode(visualRange, newRange, oppositeVisualRangeUpdateMode);\n\n    if (!that.isArgumentAxis) {\n      var viewport = that.getViewport();\n\n      if (!(0, _type.isDefined)(viewport.startValue) && !(0, _type.isDefined)(viewport.endValue) && !(0, _type.isDefined)(viewport.length)) {\n        visualRangeUpdateMode = RESET;\n      }\n    }\n\n    that._prevDataWasEmpty && (visualRangeUpdateMode = KEEP);\n\n    if (visualRangeUpdateMode === KEEP) {\n      that._setVisualRange([visualRange.startValue, visualRange.endValue]);\n    }\n\n    if (visualRangeUpdateMode === RESET) {\n      that._setVisualRange([null, null]);\n    }\n\n    if (visualRangeUpdateMode === SHIFT) {\n      that._setVisualRange({\n        length: that.getVisualRangeLength()\n      });\n    }\n  },\n  getVisualRangeLength: function getVisualRangeLength(range) {\n    var currentBusinessRange = range || this._translator.getBusinessRange();\n\n    var type = this._options.type;\n    var length;\n\n    if (type === _axes_constants.default.logarithmic) {\n      length = (0, _math2.adjust)(this.calculateInterval(currentBusinessRange.maxVisible, currentBusinessRange.minVisible));\n    } else {\n      if (type === _axes_constants.default.discrete) {\n        var categoriesInfo = (0, _utils.getCategoriesInfo)(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\n        length = categoriesInfo.categories.length;\n      } else {\n        length = currentBusinessRange.maxVisible - currentBusinessRange.minVisible;\n      }\n    }\n\n    return length;\n  },\n  getVisualRangeCenter: function getVisualRangeCenter(range) {\n    var businessRange = this._translator.getBusinessRange();\n\n    var currentBusinessRange = range || businessRange;\n    var _this$_options = this._options,\n        type = _this$_options.type,\n        logarithmBase = _this$_options.logarithmBase;\n    var center;\n\n    if (!(0, _type.isDefined)(currentBusinessRange.minVisible) || !(0, _type.isDefined)(currentBusinessRange.maxVisible)) {\n      return;\n    }\n\n    if (type === _axes_constants.default.logarithmic) {\n      var allowNegatives = currentBusinessRange.allowNegatives,\n          linearThreshold = currentBusinessRange.linearThreshold,\n          minVisible = currentBusinessRange.minVisible,\n          maxVisible = currentBusinessRange.maxVisible;\n      center = (0, _utils.raiseToExt)((0, _math2.adjust)((0, _utils.getLogExt)(maxVisible, logarithmBase, allowNegatives, linearThreshold) + (0, _utils.getLogExt)(minVisible, logarithmBase, allowNegatives, linearThreshold)) / 2, logarithmBase, allowNegatives, linearThreshold);\n    } else {\n      if (type === _axes_constants.default.discrete) {\n        var categoriesInfo = (0, _utils.getCategoriesInfo)(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\n        var index = Math.ceil(categoriesInfo.categories.length / 2) - 1;\n        center = businessRange.categories.indexOf(categoriesInfo.categories[index]);\n      } else {\n        center = (currentBusinessRange.maxVisible.valueOf() + currentBusinessRange.minVisible.valueOf()) / 2;\n      }\n    }\n\n    return center;\n  },\n  setBusinessRange: function setBusinessRange(range, axisReinitialized, oppositeVisualRangeUpdateMode, argCategories) {\n    var _that$_seriesData$min, _that$_seriesData$max;\n\n    var that = this;\n    var options = that._options;\n    var isDiscrete = options.type === _axes_constants.default.discrete;\n\n    that._handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, range);\n\n    that._seriesData = new _range.Range(range);\n\n    var dataIsEmpty = that._seriesData.isEmpty();\n\n    that._prevDataWasEmpty = dataIsEmpty;\n\n    that._seriesData.addRange({\n      categories: options.categories,\n      dataType: options.dataType,\n      axisType: options.type,\n      base: options.logarithmBase,\n      invert: options.inverted\n    });\n\n    if (options.type === _axes_constants.default.logarithmic) {\n      that._seriesData.addRange({\n        allowNegatives: void 0 !== options.allowNegatives ? options.allowNegatives : range.min <= 0\n      });\n\n      if (!isNaN(options.linearThreshold)) {\n        that._seriesData.linearThreshold = options.linearThreshold;\n      }\n    }\n\n    if (!isDiscrete) {\n      if (!(0, _type.isDefined)(that._seriesData.min) && !(0, _type.isDefined)(that._seriesData.max)) {\n        var visualRange = that.getViewport();\n        visualRange && that._seriesData.addRange({\n          min: visualRange.startValue,\n          max: visualRange.endValue\n        });\n      }\n\n      var synchronizedValue = options.synchronizedValue;\n\n      if ((0, _type.isDefined)(synchronizedValue)) {\n        that._seriesData.addRange({\n          min: synchronizedValue,\n          max: synchronizedValue\n        });\n      }\n    }\n\n    that._seriesData.minVisible = null !== (_that$_seriesData$min = that._seriesData.minVisible) && void 0 !== _that$_seriesData$min ? _that$_seriesData$min : that._seriesData.min;\n    that._seriesData.maxVisible = null !== (_that$_seriesData$max = that._seriesData.maxVisible) && void 0 !== _that$_seriesData$max ? _that$_seriesData$max : that._seriesData.max;\n\n    if (!that.isArgumentAxis && options.showZero) {\n      that._seriesData.correctValueZeroLevel();\n    }\n\n    that._seriesData.sortCategories(that.getCategoriesSorter(argCategories));\n\n    that._seriesData.userBreaks = that._getScaleBreaks(options, that._seriesData, that._series, that.isArgumentAxis);\n\n    that._translator.updateBusinessRange(that._getViewportRange());\n  },\n  _addConstantLinesToRange: function _addConstantLinesToRange(dataRange, minValueField, maxValueField) {\n    this._outsideConstantLines.concat(this._insideConstantLines || []).forEach(function (cl) {\n      if (cl.options.extendAxis) {\n        var _dataRange$addRange;\n\n        var value = cl.getParsedValue();\n        dataRange.addRange((_dataRange$addRange = {}, _defineProperty(_dataRange$addRange, minValueField, value), _defineProperty(_dataRange$addRange, maxValueField, value), _dataRange$addRange));\n      }\n    });\n  },\n  setGroupSeries: function setGroupSeries(series) {\n    this._series = series;\n  },\n  getLabelsPosition: function getLabelsPosition() {\n    var that = this;\n    var options = that._options;\n    var position = options.position;\n    var labelShift = options.label.indentFromAxis + (that._axisShift || 0) + that._constantLabelOffset;\n    var axisPosition = that._axisPosition;\n    return position === TOP || position === LEFT ? axisPosition - labelShift : axisPosition + labelShift;\n  },\n  getFormattedValue: function getFormattedValue(value, options, point) {\n    var labelOptions = this._options.label;\n    return (0, _type.isDefined)(value) ? this.formatLabel(value, (0, _extend.extend)(true, {}, labelOptions, options), void 0, point) : null;\n  },\n  _getBoundaryTicks: function _getBoundaryTicks(majors, viewPort) {\n    var that = this;\n    var length = majors.length;\n    var options = that._options;\n    var customBounds = options.customBoundTicks;\n    var min = viewPort.minVisible;\n    var max = viewPort.maxVisible;\n    var addMinMax = options.showCustomBoundaryTicks ? that._boundaryTicksVisibility : {};\n    var boundaryTicks = [];\n\n    if (options.type === _axes_constants.default.discrete) {\n      if (that._tickOffset && 0 !== majors.length) {\n        boundaryTicks = [majors[0], majors[majors.length - 1]];\n      }\n    } else {\n      if (customBounds) {\n        if (addMinMax.min && (0, _type.isDefined)(customBounds[0])) {\n          boundaryTicks.push(customBounds[0]);\n        }\n\n        if (addMinMax.max && (0, _type.isDefined)(customBounds[1])) {\n          boundaryTicks.push(customBounds[1]);\n        }\n      } else {\n        if (addMinMax.min && (0 === length || majors[0] > min)) {\n          boundaryTicks.push(min);\n        }\n\n        if (addMinMax.max && (0 === length || majors[length - 1] < max)) {\n          boundaryTicks.push(max);\n        }\n      }\n    }\n\n    return boundaryTicks;\n  },\n  setPercentLabelFormat: function setPercentLabelFormat() {\n    if (!this._hasLabelFormat) {\n      this._options.label.format = \"percent\";\n    }\n  },\n  resetAutoLabelFormat: function resetAutoLabelFormat() {\n    if (!this._hasLabelFormat) {\n      delete this._options.label.format;\n    }\n  },\n  getMultipleAxesSpacing: function getMultipleAxesSpacing() {\n    return this._options.multipleAxesSpacing || 0;\n  },\n  getTicksValues: function getTicksValues() {\n    return {\n      majorTicksValues: convertTicksToValues(this._majorTicks),\n      minorTicksValues: convertTicksToValues(this._minorTicks)\n    };\n  },\n  estimateTickInterval: function estimateTickInterval(canvas) {\n    var that = this;\n    that.updateCanvas(canvas);\n    return that._tickInterval !== that._getTicks(that._getViewportRange(), _common.noop, true).tickInterval;\n  },\n  setTicks: function setTicks(ticks) {\n    var majors = ticks.majorTicks || [];\n    this._majorTicks = majors.map(createMajorTick(this, this._renderer, this._getSkippedCategory(majors)));\n    this._minorTicks = (ticks.minorTicks || []).map(createMinorTick(this, this._renderer));\n    this._isSynchronized = true;\n  },\n  _adjustDivisionFactor: function _adjustDivisionFactor(val) {\n    return val;\n  },\n  _getTicks: function _getTicks(viewPort, incidentOccurred, skipTickGeneration) {\n    var that = this;\n    var options = that._options;\n    var customTicks = options.customTicks;\n    var customMinorTicks = options.customMinorTicks;\n    return getTickGenerator(options, incidentOccurred || that._incidentOccurred, skipTickGeneration, that._translator.getBusinessRange().isEmpty(), that._adjustDivisionFactor.bind(that), viewPort)({\n      min: viewPort.minVisible,\n      max: viewPort.maxVisible,\n      categories: viewPort.categories,\n      isSpacedMargin: viewPort.isSpacedMargin\n    }, that._getScreenDelta(), options.tickInterval, \"ignore\" === options.label.overlappingBehavior || options.forceUserTickInterval, {\n      majors: customTicks,\n      minors: customMinorTicks\n    }, options.minorTickInterval, options.minorTickCount, that._initialBreaks);\n  },\n  _createTicksAndLabelFormat: function _createTicksAndLabelFormat(range, incidentOccurred) {\n    var options = this._options;\n\n    var ticks = this._getTicks(range, incidentOccurred, false);\n\n    if (!range.isEmpty() && options.type === _axes_constants.default.discrete && \"datetime\" === options.dataType && !this._hasLabelFormat && ticks.ticks.length) {\n      options.label.format = _format_helper.default.getDateFormatByTicks(ticks.ticks);\n    }\n\n    return ticks;\n  },\n  getAggregationInfo: function getAggregationInfo(useAllAggregatedPoints, range) {\n    var _visualRange$startVal, _visualRange$endValue, _that$_seriesData;\n\n    var that = this;\n    var options = that._options;\n    var marginOptions = that._marginOptions;\n    var businessRange = new _range.Range(that.getTranslator().getBusinessRange()).addRange(range);\n    var visualRange = that.getViewport();\n    var minVisible = null !== (_visualRange$startVal = null === visualRange || void 0 === visualRange ? void 0 : visualRange.startValue) && void 0 !== _visualRange$startVal ? _visualRange$startVal : businessRange.minVisible;\n    var maxVisible = null !== (_visualRange$endValue = null === visualRange || void 0 === visualRange ? void 0 : visualRange.endValue) && void 0 !== _visualRange$endValue ? _visualRange$endValue : businessRange.maxVisible;\n    var ticks = [];\n\n    if (options.type === _axes_constants.default.discrete && options.aggregateByCategory) {\n      return {\n        aggregateByCategory: true\n      };\n    }\n\n    var aggregationInterval = options.aggregationInterval;\n    var aggregationGroupWidth = options.aggregationGroupWidth;\n\n    if (!aggregationGroupWidth && marginOptions) {\n      if (marginOptions.checkInterval) {\n        aggregationGroupWidth = options.axisDivisionFactor;\n      }\n\n      if (marginOptions.sizePointNormalState) {\n        aggregationGroupWidth = Math.min(marginOptions.sizePointNormalState, options.axisDivisionFactor);\n      }\n    }\n\n    var minInterval = !options.aggregationGroupWidth && !aggregationInterval && range.interval;\n    var generateTicks = configureGenerator(options, aggregationGroupWidth, businessRange, that._getScreenDelta(), minInterval);\n    var tickInterval = generateTicks(aggregationInterval, true, minVisible, maxVisible, null === (_that$_seriesData = that._seriesData) || void 0 === _that$_seriesData ? void 0 : _that$_seriesData.breaks).tickInterval;\n\n    if (options.type !== _axes_constants.default.discrete) {\n      var min = useAllAggregatedPoints ? businessRange.min : minVisible;\n      var max = useAllAggregatedPoints ? businessRange.max : maxVisible;\n\n      if ((0, _type.isDefined)(min) && (0, _type.isDefined)(max)) {\n        var add = (0, _utils.getAddFunction)({\n          base: options.logarithmBase,\n          axisType: options.type,\n          dataType: options.dataType\n        }, false);\n        var start = min;\n        var end = max;\n\n        if (!useAllAggregatedPoints) {\n          var maxMinDistance = Math.max(that.calculateInterval(max, min), \"datetime\" === options.dataType ? _date.default.dateToMilliseconds(tickInterval) : tickInterval);\n          start = add(min, maxMinDistance, -1);\n          end = add(max, maxMinDistance);\n        }\n\n        start = start < businessRange.min ? businessRange.min : start;\n        end = end > businessRange.max ? businessRange.max : end;\n\n        var breaks = that._getScaleBreaks(options, {\n          minVisible: start,\n          maxVisible: end\n        }, that._series, that.isArgumentAxis);\n\n        var filteredBreaks = that._filterBreaks(breaks, {\n          minVisible: start,\n          maxVisible: end\n        }, options.breakStyle);\n\n        ticks = generateTicks(tickInterval, false, start, end, filteredBreaks).ticks;\n      }\n    }\n\n    that._aggregationInterval = tickInterval;\n    return {\n      interval: tickInterval,\n      ticks: ticks\n    };\n  },\n  createTicks: function createTicks(canvas) {\n    var that = this;\n    var renderer = that._renderer;\n    var options = that._options;\n\n    if (!canvas) {\n      return;\n    }\n\n    that._isSynchronized = false;\n    that.updateCanvas(canvas);\n\n    var range = that._getViewportRange();\n\n    that._initialBreaks = range.breaks = this._seriesData.breaks = that._filterBreaks(this._seriesData.userBreaks, range, options.breakStyle);\n    that._estimatedTickInterval = that._getTicks(that.adjustViewport(this._seriesData), _common.noop, true).tickInterval;\n\n    var margins = this._calculateValueMargins();\n\n    range.addRange({\n      minVisible: margins.minValue,\n      maxVisible: margins.maxValue,\n      isSpacedMargin: margins.isSpacedMargin\n    });\n\n    var ticks = that._createTicksAndLabelFormat(range);\n\n    var boundaryTicks = that._getBoundaryTicks(ticks.ticks, that._getViewportRange());\n\n    if (options.showCustomBoundaryTicks && boundaryTicks.length) {\n      that._boundaryTicks = [boundaryTicks[0]].map(createBoundaryTick(that, renderer, true));\n\n      if (boundaryTicks.length > 1) {\n        that._boundaryTicks = that._boundaryTicks.concat([boundaryTicks[1]].map(createBoundaryTick(that, renderer, false)));\n      }\n    } else {\n      that._boundaryTicks = [];\n    }\n\n    var minors = (ticks.minorTicks || []).filter(function (minor) {\n      return !boundaryTicks.some(function (boundary) {\n        return (0, _utils.valueOf)(boundary) === (0, _utils.valueOf)(minor);\n      });\n    });\n    that._tickInterval = ticks.tickInterval;\n    that._minorTickInterval = ticks.minorTickInterval;\n    var oldMajorTicks = that._majorTicks || [];\n    var majorTicksByValues = oldMajorTicks.reduce(function (r, t) {\n      r[t.value.valueOf()] = t;\n      return r;\n    }, {});\n    var sameType = (0, _type.type)(ticks.ticks[0]) === (0, _type.type)(oldMajorTicks[0] && oldMajorTicks[0].value);\n\n    var skippedCategory = that._getSkippedCategory(ticks.ticks);\n\n    var majorTicks = ticks.ticks.map(function (v) {\n      var tick = majorTicksByValues[v.valueOf()];\n\n      if (tick && sameType) {\n        delete majorTicksByValues[v.valueOf()];\n        tick.setSkippedCategory(skippedCategory);\n        return tick;\n      } else {\n        return createMajorTick(that, renderer, skippedCategory)(v);\n      }\n    });\n    that._majorTicks = majorTicks;\n    var oldMinorTicks = that._minorTicks || [];\n    that._minorTicks = minors.map(function (v, i) {\n      var minorTick = oldMinorTicks[i];\n\n      if (minorTick) {\n        minorTick.updateValue(v);\n        return minorTick;\n      }\n\n      return createMinorTick(that, renderer)(v);\n    });\n    that._ticksToRemove = Object.keys(majorTicksByValues).map(function (k) {\n      return majorTicksByValues[k];\n    }).concat(oldMinorTicks.slice(that._minorTicks.length, oldMinorTicks.length));\n\n    that._ticksToRemove.forEach(function (t) {\n      var _t$label;\n\n      return null === (_t$label = t.label) || void 0 === _t$label ? void 0 : _t$label.removeTitle();\n    });\n\n    if (ticks.breaks) {\n      that._seriesData.breaks = ticks.breaks;\n    }\n\n    that._reinitTranslator(that._getViewportRange());\n  },\n  _reinitTranslator: function _reinitTranslator(range) {\n    var that = this;\n    var translator = that._translator;\n\n    if (that._isSynchronized) {\n      return;\n    }\n\n    translator.updateBusinessRange(range);\n  },\n  _getViewportRange: function _getViewportRange() {\n    return this.adjustViewport(this._seriesData);\n  },\n  setMarginOptions: function setMarginOptions(options) {\n    this._marginOptions = options;\n  },\n  getMarginOptions: function getMarginOptions() {\n    var _this$_marginOptions;\n\n    return null !== (_this$_marginOptions = this._marginOptions) && void 0 !== _this$_marginOptions ? _this$_marginOptions : {};\n  },\n  _calculateRangeInterval: function _calculateRangeInterval(interval) {\n    var isDateTime = \"datetime\" === this._options.dataType;\n    var minArgs = [];\n\n    var addToArgs = function addToArgs(value) {\n      (0, _type.isDefined)(value) && minArgs.push(isDateTime ? _date.default.dateToMilliseconds(value) : value);\n    };\n\n    addToArgs(this._tickInterval);\n    addToArgs(this._estimatedTickInterval);\n    (0, _type.isDefined)(interval) && minArgs.push(interval);\n    addToArgs(this._aggregationInterval);\n    return this._calculateWorkWeekInterval(_min.apply(this, minArgs));\n  },\n  _calculateWorkWeekInterval: function _calculateWorkWeekInterval(businessInterval) {\n    var options = this._options;\n\n    if (\"datetime\" === options.dataType && options.workdaysOnly && businessInterval) {\n      var workWeek = options.workWeek.length * dateIntervals.day;\n      var weekend = dateIntervals.week - workWeek;\n\n      if (workWeek !== businessInterval && weekend < businessInterval) {\n        var weekendsCount = Math.ceil(businessInterval / dateIntervals.week);\n        businessInterval = weekend >= businessInterval ? dateIntervals.day : businessInterval - weekend * weekendsCount;\n      } else {\n        if (weekend >= businessInterval && businessInterval > dateIntervals.day) {\n          businessInterval = dateIntervals.day;\n        }\n      }\n    }\n\n    return businessInterval;\n  },\n  _getConvertIntervalCoefficient: function _getConvertIntervalCoefficient(intervalInPx, screenDelta) {\n    var ratioOfCanvasRange = this._translator.ratioOfCanvasRange();\n\n    return ratioOfCanvasRange / (ratioOfCanvasRange * screenDelta / (intervalInPx + screenDelta));\n  },\n  _calculateValueMargins: function _calculateValueMargins(ticks) {\n    this._resetMargins();\n\n    var that = this;\n    var margins = that.getMarginOptions();\n    var marginSize = (margins.size || 0) / 2;\n    var options = that._options;\n\n    var dataRange = that._getViewportRange();\n\n    var viewPort = that.getViewport();\n\n    var screenDelta = that._getScreenDelta();\n\n    var isDiscrete = (options.type || \"\").indexOf(_axes_constants.default.discrete) !== -1;\n    var valueMarginsEnabled = options.valueMarginsEnabled && !isDiscrete && !that.customPositionIsBoundaryOrthogonalAxis();\n    var translator = that._translator;\n    var minValueMargin = options.minValueMargin;\n    var maxValueMargin = options.maxValueMargin;\n    var minPadding = 0;\n    var maxPadding = 0;\n    var interval = 0;\n    var rangeInterval;\n\n    if (dataRange.stubData || !screenDelta) {\n      return {\n        startPadding: 0,\n        endPadding: 0\n      };\n    }\n\n    if (that.isArgumentAxis && margins.checkInterval) {\n      rangeInterval = that._calculateRangeInterval(dataRange.interval);\n      var pxInterval = translator.getInterval(rangeInterval);\n\n      if (isFinite(pxInterval)) {\n        interval = Math.ceil(pxInterval / (2 * that._getConvertIntervalCoefficient(pxInterval, screenDelta)));\n      } else {\n        rangeInterval = 0;\n      }\n    }\n\n    var minPercentPadding;\n    var maxPercentPadding;\n    var maxPaddingValue = screenDelta * MAX_MARGIN_VALUE / 2;\n\n    if (valueMarginsEnabled) {\n      if ((0, _type.isDefined)(minValueMargin)) {\n        minPercentPadding = isFinite(minValueMargin) ? minValueMargin : 0;\n      } else {\n        if (!that.isArgumentAxis && margins.checkInterval && (0, _utils.valueOf)(dataRange.minVisible) > 0 && (0, _utils.valueOf)(dataRange.minVisible) === (0, _utils.valueOf)(dataRange.min)) {\n          minPadding = MIN_BAR_MARGIN;\n        } else {\n          minPadding = Math.max(marginSize, interval);\n          minPadding = Math.min(maxPaddingValue, minPadding);\n        }\n      }\n\n      if ((0, _type.isDefined)(maxValueMargin)) {\n        maxPercentPadding = isFinite(maxValueMargin) ? maxValueMargin : 0;\n      } else {\n        if (!that.isArgumentAxis && margins.checkInterval && (0, _utils.valueOf)(dataRange.maxVisible) < 0 && (0, _utils.valueOf)(dataRange.maxVisible) === (0, _utils.valueOf)(dataRange.max)) {\n          maxPadding = MIN_BAR_MARGIN;\n        } else {\n          maxPadding = Math.max(marginSize, interval);\n          maxPadding = Math.min(maxPaddingValue, maxPadding);\n        }\n      }\n    }\n\n    var percentStick = margins.percentStick && !this.isArgumentAxis;\n\n    if (percentStick) {\n      if (1 === _abs(dataRange.max)) {\n        maxPadding = 0;\n      }\n\n      if (1 === _abs(dataRange.min)) {\n        minPadding = 0;\n      }\n    }\n\n    var canvasStartEnd = that._getCanvasStartEnd();\n\n    var commonMargin = 1 + (minPercentPadding || 0) + (maxPercentPadding || 0);\n    var screenDeltaWithMargins = (screenDelta - minPadding - maxPadding) / commonMargin || screenDelta;\n\n    if (void 0 !== minPercentPadding || void 0 !== maxPercentPadding) {\n      if (void 0 !== minPercentPadding) {\n        minPadding = screenDeltaWithMargins * minPercentPadding;\n      }\n\n      if (void 0 !== maxPercentPadding) {\n        maxPadding = screenDeltaWithMargins * maxPercentPadding;\n      }\n    }\n\n    var minValue;\n    var maxValue;\n\n    if (options.type !== _axes_constants.default.discrete && ticks && ticks.length > 1 && !options.skipViewportExtending && !viewPort.action && false !== options.endOnTick) {\n      var length = ticks.length;\n      var firstTickPosition = translator.translate(ticks[0].value);\n      var lastTickPosition = translator.translate(ticks[length - 1].value);\n      var invertMultiplier = firstTickPosition > lastTickPosition ? -1 : 1;\n\n      var minTickPadding = _max(invertMultiplier * (canvasStartEnd.start - firstTickPosition), 0);\n\n      var maxTickPadding = _max(invertMultiplier * (lastTickPosition - canvasStartEnd.end), 0);\n\n      if (minTickPadding > minPadding || maxTickPadding > maxPadding) {\n        var commonPadding = maxTickPadding + minTickPadding;\n\n        var coeff = that._getConvertIntervalCoefficient(commonPadding, screenDelta);\n\n        if (minTickPadding >= minPadding) {\n          minValue = ticks[0].value;\n        }\n\n        if (maxTickPadding >= maxPadding) {\n          maxValue = ticks[length - 1].value;\n        }\n\n        minPadding = _max(minTickPadding, minPadding) / coeff;\n        maxPadding = _max(maxTickPadding, maxPadding) / coeff;\n      }\n    }\n\n    minPercentPadding = void 0 === minPercentPadding ? minPadding / screenDeltaWithMargins : minPercentPadding;\n    maxPercentPadding = void 0 === maxPercentPadding ? maxPadding / screenDeltaWithMargins : maxPercentPadding;\n\n    if (!isDiscrete) {\n      if (this._translator.isInverted()) {\n        var _minValue, _maxValue;\n\n        minValue = null !== (_minValue = minValue) && void 0 !== _minValue ? _minValue : translator.from(canvasStartEnd.start + screenDelta * minPercentPadding, -1);\n        maxValue = null !== (_maxValue = maxValue) && void 0 !== _maxValue ? _maxValue : translator.from(canvasStartEnd.end - screenDelta * maxPercentPadding, 1);\n      } else {\n        var _minValue2, _maxValue2;\n\n        minValue = null !== (_minValue2 = minValue) && void 0 !== _minValue2 ? _minValue2 : translator.from(canvasStartEnd.start - screenDelta * minPercentPadding, -1);\n        maxValue = null !== (_maxValue2 = maxValue) && void 0 !== _maxValue2 ? _maxValue2 : translator.from(canvasStartEnd.end + screenDelta * maxPercentPadding, 1);\n      }\n    }\n\n    var _that$getCorrectedVal = that.getCorrectedValuesToZero(minValue, maxValue),\n        correctedMin = _that$getCorrectedVal.correctedMin,\n        correctedMax = _that$getCorrectedVal.correctedMax,\n        start = _that$getCorrectedVal.start,\n        end = _that$getCorrectedVal.end;\n\n    minPadding = null !== start && void 0 !== start ? start : minPadding;\n    maxPadding = null !== end && void 0 !== end ? end : maxPadding;\n    return {\n      startPadding: translator.isInverted() ? maxPadding : minPadding,\n      endPadding: translator.isInverted() ? minPadding : maxPadding,\n      minValue: null !== correctedMin && void 0 !== correctedMin ? correctedMin : minValue,\n      maxValue: null !== correctedMax && void 0 !== correctedMax ? correctedMax : maxValue,\n      interval: rangeInterval,\n      isSpacedMargin: minPadding === maxPadding && 0 !== minPadding\n    };\n  },\n  getCorrectedValuesToZero: function getCorrectedValuesToZero(minValue, maxValue) {\n    var that = this;\n    var translator = that._translator;\n\n    var canvasStartEnd = that._getCanvasStartEnd();\n\n    var dataRange = that._getViewportRange();\n\n    var screenDelta = that._getScreenDelta();\n\n    var options = that._options;\n    var start;\n    var end;\n    var correctedMin;\n    var correctedMax;\n\n    function correctZeroLevel(minPoint, maxPoint) {\n      var minExpectedPadding = _abs(canvasStartEnd.start - minPoint);\n\n      var maxExpectedPadding = _abs(canvasStartEnd.end - maxPoint);\n\n      var coeff = that._getConvertIntervalCoefficient(minExpectedPadding + maxExpectedPadding, screenDelta);\n\n      start = minExpectedPadding / coeff;\n      end = maxExpectedPadding / coeff;\n    }\n\n    if (!that.isArgumentAxis && \"datetime\" !== options.dataType) {\n      if (minValue * dataRange.min <= 0 && minValue * dataRange.minVisible <= 0) {\n        correctZeroLevel(translator.translate(0), translator.translate(maxValue));\n        correctedMin = 0;\n      }\n\n      if (maxValue * dataRange.max <= 0 && maxValue * dataRange.maxVisible <= 0) {\n        correctZeroLevel(translator.translate(minValue), translator.translate(0));\n        correctedMax = 0;\n      }\n    }\n\n    return {\n      start: start,\n      end: end,\n      correctedMin: correctedMin,\n      correctedMax: correctedMax\n    };\n  },\n  applyMargins: function applyMargins() {\n    if (this._isSynchronized) {\n      return;\n    }\n\n    var margins = this._calculateValueMargins(this._majorTicks);\n\n    var canvas = (0, _extend.extend)({}, this._canvas, {\n      startPadding: margins.startPadding,\n      endPadding: margins.endPadding\n    });\n\n    this._translator.updateCanvas(this._processCanvas(canvas));\n\n    if (isFinite(margins.interval)) {\n      var br = this._translator.getBusinessRange();\n\n      br.addRange({\n        interval: margins.interval\n      });\n\n      this._translator.updateBusinessRange(br);\n    }\n  },\n  _resetMargins: function _resetMargins() {\n    this._reinitTranslator(this._getViewportRange());\n\n    if (this._canvas) {\n      this._translator.updateCanvas(this._processCanvas(this._canvas));\n    }\n  },\n  _createConstantLines: function _createConstantLines() {\n    var _this2 = this;\n\n    var constantLines = (this._options.constantLines || []).map(function (o) {\n      return (0, _constant_line.default)(_this2, o);\n    });\n    this._outsideConstantLines = constantLines.filter(function (l) {\n      return \"outside\" === l.labelPosition;\n    });\n    this._insideConstantLines = constantLines.filter(function (l) {\n      return \"inside\" === l.labelPosition;\n    });\n  },\n  draw: function draw(canvas, borderOptions) {\n    var that = this;\n    var options = this._options;\n    that.borderOptions = borderOptions || {\n      visible: false\n    };\n\n    that._resetMargins();\n\n    that.createTicks(canvas);\n    that.applyMargins();\n\n    that._clearAxisGroups();\n\n    initTickCoords(that._majorTicks);\n    initTickCoords(that._minorTicks);\n    initTickCoords(that._boundaryTicks);\n\n    that._axisGroup.append(that._axesContainerGroup);\n\n    that._drawAxis();\n\n    that._drawTitle();\n\n    drawTickMarks(that._majorTicks, options.tick);\n    drawTickMarks(that._minorTicks, options.minorTick);\n    drawTickMarks(that._boundaryTicks, options.tick);\n\n    var drawGridLine = that._getGridLineDrawer();\n\n    drawGrids(that._majorTicks, drawGridLine);\n    drawGrids(that._minorTicks, drawGridLine);\n    callAction(that._majorTicks, \"drawLabel\", that._getViewportRange(), that._getTemplate());\n    that._templatesRendered && that._templatesRendered.reject();\n    that._templatesRendered = new _deferred.Deferred();\n\n    _deferred.when.apply(this, that._majorTicks.map(function (tick) {\n      return tick.getTemplateDeferred();\n    })).done(function () {\n      that._templatesRendered.resolve();\n    });\n\n    that._majorTicks.forEach(function (tick) {\n      tick.labelRotationAngle = 0;\n      tick.labelAlignment = void 0;\n      tick.labelOffset = 0;\n    });\n\n    callAction(that._outsideConstantLines.concat(that._insideConstantLines), \"draw\");\n    callAction(that._strips, \"draw\");\n    that._dateMarkers = that._drawDateMarkers() || [];\n    that._labelAxesGroup && that._axisStripLabelGroup.append(that._labelAxesGroup);\n    that._gridContainerGroup && that._axisGridGroup.append(that._gridContainerGroup);\n    that._stripsGroup && that._axisStripGroup.append(that._stripsGroup);\n\n    if (that._constantLinesGroup) {\n      that._axisConstantLineGroups.above.inside.append(that._constantLinesGroup.above);\n\n      that._axisConstantLineGroups.above.outside1.append(that._constantLinesGroup.above);\n\n      that._axisConstantLineGroups.above.outside2.append(that._constantLinesGroup.above);\n\n      that._axisConstantLineGroups.under.inside.append(that._constantLinesGroup.under);\n\n      that._axisConstantLineGroups.under.outside1.append(that._constantLinesGroup.under);\n\n      that._axisConstantLineGroups.under.outside2.append(that._constantLinesGroup.under);\n    }\n\n    that._measureTitle();\n\n    measureLabels(that._majorTicks);\n    !options.label.template && that._applyWordWrap();\n    measureLabels(that._outsideConstantLines);\n    measureLabels(that._insideConstantLines);\n    measureLabels(that._strips);\n    measureLabels(that._dateMarkers);\n\n    that._adjustConstantLineLabels(that._insideConstantLines);\n\n    that._adjustStripLabels();\n\n    var offset = that._constantLabelOffset = that._adjustConstantLineLabels(that._outsideConstantLines);\n\n    if (!that._translator.getBusinessRange().isEmpty()) {\n      that._setLabelsPlacement();\n\n      offset = that._adjustLabels(offset);\n    }\n\n    offset = that._adjustDateMarkers(offset);\n\n    that._adjustTitle(offset);\n  },\n  getTemplatesDef: function getTemplatesDef() {\n    return this._templatesRendered;\n  },\n  setRenderedState: function setRenderedState(state) {\n    this._drawn = state;\n  },\n  isRendered: function isRendered() {\n    return this._drawn;\n  },\n  _applyWordWrap: function _applyWordWrap() {\n    var that = this;\n    var convertedTickInterval;\n    var textWidth;\n    var textHeight;\n    var options = this._options;\n    var tickInterval = that._tickInterval;\n\n    if ((0, _type.isDefined)(tickInterval)) {\n      convertedTickInterval = that.getTranslator().getInterval(\"datetime\" === options.dataType ? _date.default.dateToMilliseconds(tickInterval) : tickInterval);\n    }\n\n    var displayMode = that._validateDisplayMode(options.label.displayMode);\n\n    var overlappingMode = that._validateOverlappingMode(options.label.overlappingBehavior, displayMode);\n\n    var wordWrapMode = options.label.wordWrap || \"none\";\n    var overflowMode = options.label.textOverflow || \"none\";\n\n    if ((\"none\" !== wordWrapMode || \"none\" !== overflowMode) && displayMode !== ROTATE && overlappingMode !== ROTATE && \"auto\" !== overlappingMode) {\n      var usefulSpace = (0, _type.isDefined)(options.placeholderSize) ? options.placeholderSize - options.label.indentFromAxis : void 0;\n\n      if (that._isHorizontal) {\n        textWidth = convertedTickInterval;\n        textHeight = usefulSpace;\n      } else {\n        textWidth = usefulSpace;\n        textHeight = convertedTickInterval;\n      }\n\n      var correctByWidth = false;\n      var correctByHeight = false;\n\n      if (textWidth) {\n        if (that._majorTicks.some(function (tick) {\n          return tick.labelBBox.width > textWidth;\n        })) {\n          correctByWidth = true;\n        }\n      }\n\n      if (textHeight) {\n        if (that._majorTicks.some(function (tick) {\n          return tick.labelBBox.height > textHeight;\n        })) {\n          correctByHeight = true;\n        }\n      }\n\n      if (correctByWidth || correctByHeight) {\n        that._majorTicks.forEach(function (tick) {\n          tick.label && tick.label.setMaxSize(textWidth, textHeight, options.label);\n        });\n\n        measureLabels(that._majorTicks);\n      }\n    }\n  },\n  _measureTitle: _common.noop,\n  animate: function animate() {\n    callAction(this._majorTicks, \"animateLabels\");\n  },\n  updateSize: function updateSize(canvas, animate) {\n    var updateTitle = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;\n    var that = this;\n    that.updateCanvas(canvas);\n\n    if (updateTitle) {\n      that._checkTitleOverflow();\n\n      that._measureTitle();\n\n      that._updateTitleCoords();\n    }\n\n    that._reinitTranslator(that._getViewportRange());\n\n    that.applyMargins();\n    var animationEnabled = !that._firstDrawing && animate;\n    var options = this._options;\n    initTickCoords(that._majorTicks);\n    initTickCoords(that._minorTicks);\n    initTickCoords(that._boundaryTicks);\n\n    if (this._resetApplyingAnimation && !this._firstDrawing) {\n      that._resetStartCoordinates();\n    }\n\n    cleanUpInvalidTicks(that._majorTicks);\n    cleanUpInvalidTicks(that._minorTicks);\n    cleanUpInvalidTicks(that._boundaryTicks);\n\n    if (this._axisElement) {\n      that._updateAxisElementPosition();\n    }\n\n    updateTicksPosition(that._majorTicks, options.tick, animationEnabled);\n    updateTicksPosition(that._minorTicks, options.minorTick, animationEnabled);\n    updateTicksPosition(that._boundaryTicks, options.tick);\n    callAction(that._majorTicks, \"updateLabelPosition\", animationEnabled);\n\n    that._outsideConstantLines.concat(that._insideConstantLines || []).forEach(function (l) {\n      return l.updatePosition(animationEnabled);\n    });\n\n    callAction(that._strips, \"updatePosition\", animationEnabled);\n    updateGridsPosition(that._majorTicks, animationEnabled);\n    updateGridsPosition(that._minorTicks, animationEnabled);\n\n    if (animationEnabled) {\n      callAction(that._ticksToRemove || [], \"fadeOutElements\");\n    }\n\n    that.prepareAnimation();\n    that._ticksToRemove = null;\n\n    if (!that._translator.getBusinessRange().isEmpty()) {\n      that._firstDrawing = false;\n    }\n\n    this._resetApplyingAnimation = false;\n  },\n  prepareAnimation: function prepareAnimation() {\n    var that = this;\n    var action = \"saveCoords\";\n    callAction(that._majorTicks, action);\n    callAction(that._minorTicks, action);\n    callAction(that._insideConstantLines, action);\n    callAction(that._outsideConstantLines, action);\n    callAction(that._strips, action);\n  },\n  _resetStartCoordinates: function _resetStartCoordinates() {\n    var that = this;\n    var action = \"resetCoordinates\";\n    callAction(that._majorTicks, action);\n    callAction(that._minorTicks, action);\n    callAction(that._insideConstantLines, action);\n    callAction(that._outsideConstantLines, action);\n    callAction(that._strips, action);\n  },\n  applyClipRects: function applyClipRects(elementsClipID, canvasClipID) {\n    this._axisGroup.attr({\n      \"clip-path\": canvasClipID\n    });\n\n    this._axisStripGroup.attr({\n      \"clip-path\": elementsClipID\n    });\n  },\n  _validateVisualRange: function _validateVisualRange(optionValue) {\n    var range = (0, _utils.getVizRangeObject)(optionValue);\n\n    if (void 0 !== range.startValue) {\n      range.startValue = this.validateUnit(range.startValue);\n    }\n\n    if (void 0 !== range.endValue) {\n      range.endValue = this.validateUnit(range.endValue);\n    }\n\n    return (0, _utils.convertVisualRangeObject)(range, !_isArray(optionValue));\n  },\n  _validateOptions: function _validateOptions(options) {\n    var that = this;\n    options.wholeRange = that._validateVisualRange(options.wholeRange);\n    options.visualRange = options._customVisualRange = that._validateVisualRange(options._customVisualRange);\n\n    that._setVisualRange(options._customVisualRange);\n  },\n  beforeCleanGroups: function beforeCleanGroups() {\n    this._options.label.template && this._axisElementsGroup && this._axisElementsGroup.linkRemove();\n  },\n  afterCleanGroups: function afterCleanGroups() {\n    this._options.label.template && this._axisElementsGroup && this._axisElementsGroup.linkAppend();\n  },\n  validate: function validate() {\n    var that = this;\n    var options = that._options;\n    var dataType = that.isArgumentAxis ? options.argumentType : options.valueType;\n    var parser = dataType ? (0, _parse_utils.getParser)(dataType) : function (unit) {\n      return unit;\n    };\n    that.parser = parser;\n    options.dataType = dataType;\n\n    that._validateOptions(options);\n  },\n  resetVisualRange: function resetVisualRange(isSilent) {\n    this._seriesData.minVisible = this._seriesData.min;\n    this._seriesData.maxVisible = this._seriesData.max;\n    this.handleZooming([null, null], {\n      start: !!isSilent,\n      end: !!isSilent\n    });\n  },\n  _setVisualRange: function _setVisualRange(visualRange, allowPartialUpdate) {\n    var range = this.adjustRange((0, _utils.getVizRangeObject)(visualRange));\n\n    if (allowPartialUpdate) {\n      (0, _type.isDefined)(range.startValue) && (this._viewport.startValue = range.startValue);\n      (0, _type.isDefined)(range.endValue) && (this._viewport.endValue = range.endValue);\n    } else {\n      this._viewport = range;\n    }\n  },\n  _applyZooming: function _applyZooming(visualRange, allowPartialUpdate) {\n    var that = this;\n\n    that._resetVisualRangeOption();\n\n    that._setVisualRange(visualRange, allowPartialUpdate);\n\n    var viewPort = that.getViewport();\n    that._seriesData.userBreaks = that._getScaleBreaks(that._options, {\n      minVisible: viewPort.startValue,\n      maxVisible: viewPort.endValue\n    }, that._series, that.isArgumentAxis);\n\n    that._translator.updateBusinessRange(that._getViewportRange());\n  },\n  getZoomStartEventArg: function getZoomStartEventArg(event, actionType) {\n    return {\n      axis: this,\n      range: this.visualRange(),\n      cancel: false,\n      event: event,\n      actionType: actionType\n    };\n  },\n  getZoomEndEventArg: function getZoomEndEventArg(previousRange, event, actionType, zoomFactor, shift) {\n    var newRange = this.visualRange();\n    return {\n      axis: this,\n      previousRange: previousRange,\n      range: newRange,\n      cancel: false,\n      event: event,\n      actionType: actionType,\n      zoomFactor: zoomFactor,\n      shift: shift,\n      rangeStart: newRange.startValue,\n      rangeEnd: newRange.endValue\n    };\n  },\n  getZoomBounds: function getZoomBounds() {\n    var wholeRange = (0, _utils.getVizRangeObject)(this._options.wholeRange);\n    var range = this.getTranslator().getBusinessRange();\n    var secondPriorityRange = {\n      startValue: getZoomBoundValue(this._initRange.startValue, range.min),\n      endValue: getZoomBoundValue(this._initRange.endValue, range.max)\n    };\n    return {\n      startValue: getZoomBoundValue(wholeRange.startValue, secondPriorityRange.startValue),\n      endValue: getZoomBoundValue(wholeRange.endValue, secondPriorityRange.endValue)\n    };\n  },\n  setInitRange: function setInitRange() {\n    this._initRange = {};\n\n    if (0 === Object.keys(this._options.wholeRange || {}).length) {\n      this._initRange = this.getZoomBounds();\n    }\n  },\n  _resetVisualRangeOption: function _resetVisualRangeOption() {\n    this._options._customVisualRange = {};\n  },\n  getTemplatesGroups: function getTemplatesGroups() {\n    var ticks = this._majorTicks;\n\n    if (ticks) {\n      return this._majorTicks.map(function (tick) {\n        return tick.templateContainer;\n      }).filter(function (item) {\n        return (0, _type.isDefined)(item);\n      });\n    } else {\n      return [];\n    }\n  },\n  setCustomVisualRange: function setCustomVisualRange(range) {\n    this._options._customVisualRange = range;\n  },\n  visualRange: function visualRange() {\n    var that = this;\n    var args = arguments;\n    var visualRange;\n\n    if (0 === args.length) {\n      var adjustedRange = that._getAdjustedBusinessRange();\n\n      var startValue = adjustedRange.minVisible;\n      var endValue = adjustedRange.maxVisible;\n\n      if (that._options.type === _axes_constants.default.discrete) {\n        var _startValue, _endValue;\n\n        startValue = null !== (_startValue = startValue) && void 0 !== _startValue ? _startValue : adjustedRange.categories[0];\n        endValue = null !== (_endValue = endValue) && void 0 !== _endValue ? _endValue : adjustedRange.categories[adjustedRange.categories.length - 1];\n        return {\n          startValue: startValue,\n          endValue: endValue,\n          categories: (0, _utils.getCategoriesInfo)(adjustedRange.categories, startValue, endValue).categories\n        };\n      }\n\n      return {\n        startValue: startValue,\n        endValue: endValue\n      };\n    } else {\n      if (_isArray(args[0])) {\n        visualRange = args[0];\n      } else {\n        if ((0, _type.isPlainObject)(args[0])) {\n          visualRange = (0, _extend.extend)({}, args[0]);\n        } else {\n          visualRange = [args[0], args[1]];\n        }\n      }\n    }\n\n    var zoomResults = that.handleZooming(visualRange, args[1]);\n\n    if (!zoomResults.isPrevented) {\n      that._visualRange(that, zoomResults);\n    }\n  },\n  handleZooming: function handleZooming(visualRange, preventEvents, domEvent, action) {\n    var that = this;\n    preventEvents = preventEvents || {};\n\n    if ((0, _type.isDefined)(visualRange)) {\n      visualRange = that._validateVisualRange(visualRange);\n      visualRange.action = action;\n    }\n\n    var zoomStartEvent = that.getZoomStartEventArg(domEvent, action);\n    var previousRange = zoomStartEvent.range;\n    !preventEvents.start && that._eventTrigger(\"zoomStart\", zoomStartEvent);\n    var zoomResults = {\n      isPrevented: zoomStartEvent.cancel,\n      skipEventRising: preventEvents.skipEventRising,\n      range: visualRange || zoomStartEvent.range\n    };\n\n    if (!zoomStartEvent.cancel) {\n      (0, _type.isDefined)(visualRange) && that._applyZooming(visualRange, preventEvents.allowPartialUpdate);\n\n      if (!(0, _type.isDefined)(that._storedZoomEndParams)) {\n        that._storedZoomEndParams = {\n          startRange: previousRange,\n          type: this.getOptions().type\n        };\n      }\n\n      that._storedZoomEndParams.event = domEvent;\n      that._storedZoomEndParams.action = action;\n      that._storedZoomEndParams.prevent = !!preventEvents.end;\n    }\n\n    return zoomResults;\n  },\n  handleZoomEnd: function handleZoomEnd() {\n    var that = this;\n\n    if ((0, _type.isDefined)(that._storedZoomEndParams) && !that._storedZoomEndParams.prevent) {\n      var previousRange = that._storedZoomEndParams.startRange;\n      var domEvent = that._storedZoomEndParams.event;\n      var action = that._storedZoomEndParams.action;\n      var previousBusinessRange = {\n        minVisible: previousRange.startValue,\n        maxVisible: previousRange.endValue,\n        categories: previousRange.categories\n      };\n\n      var typeIsNotChanged = that.getOptions().type === that._storedZoomEndParams.type;\n\n      var shift = typeIsNotChanged ? (0, _math2.adjust)(that.getVisualRangeCenter() - that.getVisualRangeCenter(previousBusinessRange)) : NaN;\n      var zoomFactor = typeIsNotChanged ? +(Math.round(that.getVisualRangeLength(previousBusinessRange) / that.getVisualRangeLength() + \"e+2\") + \"e-2\") : NaN;\n      var zoomEndEvent = that.getZoomEndEventArg(previousRange, domEvent, action, zoomFactor, shift);\n      zoomEndEvent.cancel = that.isZoomingLowerLimitOvercome(1 === zoomFactor ? \"pan\" : \"zoom\", zoomFactor);\n\n      that._eventTrigger(\"zoomEnd\", zoomEndEvent);\n\n      if (zoomEndEvent.cancel) {\n        that.restorePreviousVisualRange(previousRange);\n      }\n\n      that._storedZoomEndParams = null;\n    }\n  },\n  restorePreviousVisualRange: function restorePreviousVisualRange(previousRange) {\n    var that = this;\n    that._storedZoomEndParams = null;\n\n    that._applyZooming(previousRange);\n\n    that._visualRange(that, previousRange);\n  },\n  isZoomingLowerLimitOvercome: function isZoomingLowerLimitOvercome(actionType, zoomFactor, range) {\n    var that = this;\n    var options = that._options;\n    var minZoom = options.minVisualRangeLength;\n    var isOvercoming = \"zoom\" === actionType && zoomFactor >= 1;\n\n    var businessRange = that._translator.getBusinessRange();\n\n    var visualRange;\n\n    if ((0, _type.isDefined)(range)) {\n      visualRange = that.adjustRange((0, _utils.getVizRangeObject)(range));\n      visualRange = {\n        minVisible: visualRange.startValue,\n        maxVisible: visualRange.endValue,\n        categories: businessRange.categories\n      };\n    }\n\n    var visualRangeLength = that.getVisualRangeLength(visualRange);\n\n    if (\"discrete\" !== options.type) {\n      if ((0, _type.isDefined)(minZoom)) {\n        if (\"datetime\" === options.dataType && !(0, _type.isNumeric)(minZoom)) {\n          minZoom = _date.default.dateToMilliseconds(minZoom);\n        }\n\n        isOvercoming &= minZoom >= visualRangeLength;\n      } else {\n        var canvasLength = that._translator.canvasLength;\n        var fullRange = {\n          minVisible: businessRange.min,\n          maxVisible: businessRange.max,\n          categories: businessRange.categories\n        };\n        isOvercoming &= that.getVisualRangeLength(fullRange) / canvasLength >= visualRangeLength;\n      }\n    } else {\n      !(0, _type.isDefined)(minZoom) && (minZoom = 1);\n      isOvercoming &= (0, _type.isDefined)(range) && that.getVisualRangeLength() === minZoom && visualRangeLength <= minZoom;\n    }\n\n    return !!isOvercoming;\n  },\n  dataVisualRangeIsReduced: function dataVisualRangeIsReduced() {\n    var minDataValue;\n    var maxDataValue;\n    var translator = this.getTranslator();\n\n    if (\"discrete\" === this._options.type) {\n      var categories = translator.getBusinessRange().categories;\n      minDataValue = categories[0];\n      maxDataValue = categories[categories.length - 1];\n    } else {\n      var seriesData = this._seriesData;\n      minDataValue = seriesData.min;\n      maxDataValue = seriesData.max;\n    }\n\n    if (!(0, _type.isDefined)(minDataValue) || !(0, _type.isDefined)(maxDataValue)) {\n      return false;\n    }\n\n    var startPoint = translator.translate(minDataValue);\n    var endPoint = translator.translate(maxDataValue);\n    var edges = [Math.min(startPoint, endPoint), Math.max(startPoint, endPoint)];\n    var visualRange = this.visualRange();\n    var visualRangeStartPoint = translator.translate(visualRange.startValue);\n    var visualRangeEndPoint = translator.translate(visualRange.endValue);\n    return visualRangeStartPoint > edges[0] && visualRangeStartPoint < edges[1] || visualRangeEndPoint > edges[0] && visualRangeEndPoint < edges[1] || visualRangeStartPoint === visualRangeEndPoint && edges[0] !== edges[1];\n  },\n  isExtremePosition: function isExtremePosition(isMax) {\n    var extremeDataValue;\n    var seriesData;\n\n    if (\"discrete\" === this._options.type) {\n      seriesData = this._translator.getBusinessRange();\n      extremeDataValue = isMax ? seriesData.categories[seriesData.categories.length - 1] : seriesData.categories[0];\n    } else {\n      seriesData = this.getZoomBounds();\n      extremeDataValue = isMax ? seriesData.endValue : seriesData.startValue;\n    }\n\n    var translator = this.getTranslator();\n    var extremePoint = translator.translate(extremeDataValue);\n    var visualRange = this.visualRange();\n    var visualRangePoint = isMax ? translator.translate(visualRange.endValue) : translator.translate(visualRange.startValue);\n    return _abs(visualRangePoint - extremePoint) < SCROLL_THRESHOLD;\n  },\n  getViewport: function getViewport() {\n    return this._viewport;\n  },\n  getFullTicks: function getFullTicks() {\n    var majors = this._majorTicks || [];\n\n    if (this._options.type === _axes_constants.default.discrete) {\n      return convertTicksToValues(majors);\n    } else {\n      return convertTicksToValues(majors.concat(this._minorTicks, this._boundaryTicks)).sort(function (a, b) {\n        return (0, _utils.valueOf)(a) - (0, _utils.valueOf)(b);\n      });\n    }\n  },\n  measureLabels: function measureLabels(canvas, withIndents) {\n    var that = this;\n    var options = that._options;\n    var widthAxis = options.visible ? options.width : 0;\n    var ticks;\n    var indent = withIndents ? options.label.indentFromAxis + .5 * options.tick.length : 0;\n    var tickInterval;\n\n    var viewportRange = that._getViewportRange();\n\n    if (viewportRange.isEmpty() || !options.label.visible || !that._axisElementsGroup) {\n      return {\n        height: widthAxis,\n        width: widthAxis,\n        x: 0,\n        y: 0\n      };\n    }\n\n    if (that._majorTicks) {\n      ticks = convertTicksToValues(that._majorTicks);\n    } else {\n      that.updateCanvas(canvas);\n      ticks = that._createTicksAndLabelFormat(viewportRange, _common.noop);\n      tickInterval = ticks.tickInterval;\n      ticks = ticks.ticks;\n    }\n\n    var maxText = ticks.reduce(function (prevLabel, tick, index) {\n      var label = that.formatLabel(tick, options.label, viewportRange, void 0, tickInterval, ticks);\n\n      if (prevLabel.length < label.length) {\n        return label;\n      } else {\n        return prevLabel;\n      }\n    }, that.formatLabel(ticks[0], options.label, viewportRange, void 0, tickInterval, ticks));\n\n    var text = that._renderer.text(maxText, 0, 0).css(that._textFontStyles).attr(that._textOptions).append(that._renderer.root);\n\n    var box = text.getBBox();\n    text.remove();\n    return {\n      x: box.x,\n      y: box.y,\n      width: box.width + indent,\n      height: box.height + indent\n    };\n  },\n  _setLabelsPlacement: function _setLabelsPlacement() {\n    if (!this._options.label.visible) {\n      return;\n    }\n\n    var that = this;\n    var labelOpt = that._options.label;\n\n    var displayMode = that._validateDisplayMode(labelOpt.displayMode);\n\n    var overlappingMode = that._validateOverlappingMode(labelOpt.overlappingBehavior, displayMode);\n\n    var ignoreOverlapping = \"none\" === overlappingMode || \"ignore\" === overlappingMode;\n    var behavior = {\n      rotationAngle: labelOpt.rotationAngle,\n      staggeringSpacing: labelOpt.staggeringSpacing\n    };\n    var notRecastStep;\n\n    var boxes = that._majorTicks.map(function (tick) {\n      return tick.labelBBox;\n    });\n\n    var step = that._getStep(boxes);\n\n    switch (displayMode) {\n      case ROTATE:\n        if (ignoreOverlapping) {\n          notRecastStep = true;\n          step = 1;\n        }\n\n        that._applyLabelMode(displayMode, step, boxes, labelOpt, notRecastStep);\n\n        break;\n\n      case \"stagger\":\n        if (ignoreOverlapping) {\n          step = 2;\n        }\n\n        that._applyLabelMode(displayMode, _max(step, 2), boxes, labelOpt);\n\n        break;\n\n      default:\n        that._applyLabelOverlapping(boxes, overlappingMode, step, behavior);\n\n    }\n  },\n  _applyLabelOverlapping: function _applyLabelOverlapping(boxes, mode, step, behavior) {\n    var that = this;\n    var labelOpt = that._options.label;\n    var majorTicks = that._majorTicks;\n\n    if (\"none\" === mode || \"ignore\" === mode) {\n      return;\n    }\n\n    var checkLabels = function checkLabels(box, index, array) {\n      if (0 === index) {\n        return false;\n      }\n\n      return _axes_constants.default.areLabelsOverlap(box, array[index - 1], labelOpt.minSpacing, labelOpt.alignment);\n    };\n\n    if (step > 1 && boxes.some(checkLabels)) {\n      that._applyLabelMode(mode, step, boxes, behavior);\n    }\n\n    that._checkBoundedLabelsOverlapping(majorTicks, boxes, mode);\n  },\n  _applyLabelMode: function _applyLabelMode(mode, step, boxes, behavior, notRecastStep) {\n    var that = this;\n    var majorTicks = that._majorTicks;\n    var labelOpt = that._options.label;\n    var angle = behavior.rotationAngle;\n    var labelHeight;\n    var alignment;\n    var func;\n\n    switch (mode) {\n      case ROTATE:\n        if (!labelOpt.userAlignment) {\n          alignment = angle < 0 ? RIGHT : LEFT;\n\n          if (angle % 90 === 0) {\n            alignment = CENTER;\n          }\n        }\n\n        step = notRecastStep ? step : that._getStep(boxes, angle);\n\n        func = function func(tick) {\n          var contentContainer = tick.getContentContainer();\n\n          if (!contentContainer) {\n            return;\n          }\n\n          contentContainer.rotate(angle);\n          tick.labelRotationAngle = angle;\n          alignment && (tick.labelAlignment = alignment);\n        };\n\n        updateLabels(majorTicks, step, func);\n        break;\n\n      case \"stagger\":\n        labelHeight = that._getMaxLabelHeight(boxes, behavior.staggeringSpacing);\n\n        func = function func(tick, index) {\n          if (index / (step - 1) % 2 !== 0) {\n            tick.labelOffset = labelHeight;\n          }\n        };\n\n        updateLabels(majorTicks, step - 1, func);\n        break;\n\n      case \"auto\":\n      case \"_auto\":\n        if (2 === step) {\n          that._applyLabelMode(\"stagger\", step, boxes, behavior);\n        } else {\n          that._applyLabelMode(ROTATE, step, boxes, {\n            rotationAngle: getOptimalAngle(boxes, labelOpt)\n          });\n        }\n\n        break;\n\n      default:\n        updateLabels(majorTicks, step);\n    }\n  },\n  getMarkerTrackers: _common.noop,\n  _drawDateMarkers: _common.noop,\n  _adjustDateMarkers: _common.noop,\n  coordsIn: _common.noop,\n  areCoordsOutsideAxis: _common.noop,\n  _getSkippedCategory: _common.noop,\n  _initAxisPositions: _common.noop,\n  _drawTitle: _common.noop,\n  _updateTitleCoords: _common.noop,\n  _adjustConstantLineLabels: _common.noop,\n  _createTranslator: function _createTranslator() {\n    return new _translator2d.Translator2D({}, {}, {});\n  },\n  _updateTranslator: function _updateTranslator() {\n    var translator = this._translator;\n    translator.update(translator.getBusinessRange(), this._canvas || {}, this._getTranslatorOptions());\n  },\n  _getTranslatorOptions: function _getTranslatorOptions() {\n    var _options$workWeek2, _options$breakStyle$w, _options$breakStyle;\n\n    var options = this._options;\n    return {\n      isHorizontal: this._isHorizontal,\n      shiftZeroValue: !this.isArgumentAxis,\n      interval: options.semiDiscreteInterval,\n      firstDayOfWeek: null === (_options$workWeek2 = options.workWeek) || void 0 === _options$workWeek2 ? void 0 : _options$workWeek2[0],\n      stick: this._getStick(),\n      breaksSize: null !== (_options$breakStyle$w = null === (_options$breakStyle = options.breakStyle) || void 0 === _options$breakStyle ? void 0 : _options$breakStyle.width) && void 0 !== _options$breakStyle$w ? _options$breakStyle$w : 0\n    };\n  },\n  getVisibleArea: function getVisibleArea() {\n    var canvas = this._getCanvasStartEnd();\n\n    return [canvas.start, canvas.end].sort(function (a, b) {\n      return a - b;\n    });\n  },\n  _getCanvasStartEnd: function _getCanvasStartEnd() {\n    var isHorizontal = this._isHorizontal;\n    var canvas = this._canvas || {};\n\n    var invert = this._translator.getBusinessRange().invert;\n\n    var coords = isHorizontal ? [canvas.left, canvas.width - canvas.right] : [canvas.height - canvas.bottom, canvas.top];\n    invert && coords.reverse();\n    return {\n      start: coords[0],\n      end: coords[1]\n    };\n  },\n  _getScreenDelta: function _getScreenDelta() {\n    var that = this;\n\n    var canvas = that._getCanvasStartEnd();\n\n    var breaks = that._seriesData ? that._seriesData.breaks || [] : [];\n    var breaksLength = breaks.length;\n\n    var screenDelta = _abs(canvas.start - canvas.end);\n\n    return screenDelta - (breaksLength ? breaks[breaksLength - 1].cumulativeWidth : 0);\n  },\n  _getScaleBreaks: function _getScaleBreaks() {\n    return [];\n  },\n  _filterBreaks: function _filterBreaks() {\n    return [];\n  },\n  _adjustTitle: _common.noop,\n  _checkTitleOverflow: _common.noop,\n  getSpiderTicks: _common.noop,\n  setSpiderTicks: _common.noop,\n  _checkBoundedLabelsOverlapping: _common.noop,\n  drawScaleBreaks: _common.noop,\n  _visualRange: _common.noop,\n  _rotateConstantLine: _common.noop,\n  applyVisualRangeSetter: function applyVisualRangeSetter(visualRangeSetter) {\n    this._visualRange = visualRangeSetter;\n  },\n  getCategoriesSorter: function getCategoriesSorter(argCategories) {\n    var sort;\n\n    if (this.isArgumentAxis) {\n      sort = argCategories;\n    } else {\n      var categoriesSortingMethod = this._options.categoriesSortingMethod;\n      sort = null !== categoriesSortingMethod && void 0 !== categoriesSortingMethod ? categoriesSortingMethod : this._options.categories;\n    }\n\n    return sort;\n  },\n  _getAdjustedBusinessRange: function _getAdjustedBusinessRange() {\n    return this.adjustViewport(this._translator.getBusinessRange());\n  }\n};","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/axes/base_axis.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","Axis","calculateCanvasMargins","measureLabels","_smart_formatter","require","_utils","_type","_axes_constants","_interopRequireDefault","_extend","_array","_format_helper","_parse_utils","_tick_generator","_translator2d","_range","_tick","_math2","_date","_common","_xy_axes","polarMethods","_interopRequireWildcard","_constant_line","_strip","_deferred","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","default","_defineProperty","value","enumerable","configurable","writable","convertTicksToValues","_math","Math","_abs","abs","_max","max","_min","min","_isArray","Array","isArray","DEFAULT_AXIS_LABEL_SPACING","MAX_GRID_BORDER_ADHENSION","TOP","top","BOTTOM","bottom","LEFT","left","RIGHT","right","CENTER","center","KEEP","SHIFT","RESET","ROTATE","DEFAULT_AXIS_DIVISION_FACTOR","DEFAULT_MINOR_AXIS_DIVISION_FACTOR","SCROLL_THRESHOLD","MIN_BAR_MARGIN","MAX_MARGIN_VALUE","dateIntervals","day","week","getTickGenerator","options","incidentOccurred","skipTickGeneration","rangeIsEmpty","adjustDivisionFactor","_ref","_options$workWeek","allowNegatives","linearThreshold","tickGenerator","axisType","type","dataType","logBase","logarithmBase","axisDivisionFactor","minorAxisDivisionFactor","numberMultipliers","calculateMinors","minorTick","visible","minorGrid","allowDecimals","endOnTick","firstDayOfWeek","workWeek","skipCalculationLimits","generateExtraTick","minTickInterval","createMajorTick","axis","renderer","skippedCategory","getOptions","tick","grid","createMinorTick","createBoundaryTick","isFirst","extend","showCustomBoundaryTicks","callAction","elements","action","actionArgument1","actionArgument2","forEach","e","initTickCoords","ticks","drawTickMarks","drawGrids","drawLine","updateTicksPosition","animate","updateGridsPosition","items","item","label","getContentContainer","labelBBox","getBBox","x","y","width","height","cleanUpInvalidTicks","i","length","removeInvalidTick","coords","splice","validateAxisOptions","_labelOptions$minSpac","labelOptions","position","defaultPosition","isHorizontal","secondaryPosition","labelPosition","_TOP$BOTTOM$LEFT$RIGH","alignment","userAlignment","_TOP$BOTTOM$LEFT$RIGH2","hoverMode","toLowerCase","minSpacing","argumentType","valueType","getOptimalAngle","boxes","labelOpt","angle","asin","PI","updateLabels","step","func","index","removeLabel","getZoomBoundValue","optionValue","dataValue","configureGenerator","viewPort","screenDelta","tickGeneratorOptions","tickInterval","breaks","noop","isEmpty","v","categories","isSpacedMargin","isDefined","getConstantLineSharpDirection","coord","axisCanvas","start","end","bBoxes","canvas","cLeft","cTop","cRight","cBottom","reduce","margins","bBox","renderSettings","that","_renderer","_incidentOccurred","_eventTrigger","eventTrigger","_stripsGroup","stripsGroup","_labelAxesGroup","labelAxesGroup","_constantLinesGroup","constantLinesGroup","_scaleBreaksGroup","scaleBreaksGroup","_axesContainerGroup","axesContainerGroup","_gridContainerGroup","gridGroup","_axisCssPrefix","widgetClass","axisClass","_setType","drawingType","_createAxisGroups","_translator","_createTranslator","isArgumentAxis","_viewport","_firstDrawing","_initRange","_getTemplate","getTemplate","_drawAxis","_options","_axisElement","_createAxisElement","_updateAxisElementPosition","attr","stroke","color","opacity","sharp","_getSharpParam","getAxisSharpDirection","append","_axisLineGroup","_createPathElement","points","sharpDirection","path","svgElement","arguments","customPositionIsAvailable","getOrthogonalAxis","getCustomPosition","getCustomBoundaryPosition","resolveOverlappingForCustomPositioning","hasCustomPosition","customPositionIsBoundaryOrthogonalAxis","getResolvedBoundaryPosition","getSharpDirectionByCoords","_getCanvasStartEnd","maxCoord","getRadius","_isHorizontal","_getGridLineDrawer","gridStyle","_getGridPoints","tickPositionField","orthogonalPositions","_orthogonalPositions","positionFrom","positionTo","borderOptions","canvasStart","canvasEnd","getCanvas","firstBorderLinePosition","lastBorderLinePosition","minDelta","maxDelta","areCoordsOutsideAxis","_getConstantLinePos","parsedValue","_getTranslatedCoord","_getConstantLineGraphicAttributes","_createConstantLine","_drawConstantLineLabelText","text","_ref2","group","font","cssClass","css","patchFontOptions","align","_drawConstantLineLabels","lineLabelOptions","_text","_checkAlignmentConstantLineLabels","formatLabel","_getConstantLineLabelsCoords","_getStripPos","startValue","endValue","range","isContinuous","minVisible","maxVisible","result","cat","push","valueOf","swap","startCategoryIndex","endCategoryIndex","parsedStartValue","parser","parsedEndValue","inArray","from","to","outOfCanvas","validateUnit","stripPosition","visibleArea","getVisibleArea","_getStripGraphicAttributes","fromPoint","toPoint","_createStrip","attrs","rect","_adjustStripLabels","_strips","strip","_getAdjustedStripLabelCoords","_adjustLabelsCoord","offset","maxWidth","checkCanvas","_this","getContainerAttrs","_getLabelAdjustedCoord","labelOffset","_majorTicks","updateMultilineTextAlignment","templateContainer","_adjustLabels","positionsAreConsistent","maxSize","size","labelRotationAngle","rotateBBox","labelCoords","additionalOffset","indentFromAxis","templateBox","box","textAlign","labelAlignment","isDiscrete","isFlatLabel","axisPosition","_axisPosition","labelX","translateX","translateY","_createAxisConstantLineGroups","classSelector","constantLinesClass","insideGroup","g","outsideGroup1","outsideGroup2","inside","outside1","outside2","remove","clear","_axisGroup","enableLinks","_axisStripGroup","_axisGridGroup","_axisElementsGroup","linkOn","linkAppend","_axisTitleGroup","_axisConstantLineGroups","above","under","_axisStripLabelGroup","_clearAxisGroups","template","isRendered","_getLabelFormatObject","point","_getViewportRange","formatObject","valueText","smartFormatter","_tickInterval","showTransition","marker","isFunction","customizeText","formatHint","customizeHint","formatRange","interval","_setTickOffset","discreteAxisDivisionMode","_tickOffset","resetApplyingAnimation","isFirstDrawing","_resetApplyingAnimation","getMargins","placeholderSize","edgeMarginCorrection","constantLineAboveSeries","constantLineUnderSeries","map","concat","crosshairMargin","unit","idError","parameters","axisTypeMethods","_disposeBreaksGroup","dispose","_title","_axisBreaksGroup","_textOptions","_textFontStyles","_minorTicks","_templatesRendered","reject","setPane","pane","setTypes","typeSelector","_updateTranslator","resetTypes","_initTypes","getTranslator","updateOptions","title","name","priority","_hasLabelFormat","format","logarithmic","logarithmBaseError","_createConstantLines","strips","o","calculateInterval","prevValue","_Range","Range","getBusinessRange","getLogExt","getCanvasRange","translator","translate","_processCanvas","updateCanvas","canvasRedesign","positions","_canvas","_initAxisPositions","getAxisShift","_axisShift","hideTitle","getTitle","hideOuterElements","_outsideConstantLines","adjustViewport","businessRange","discrete","_seriesData","wholeRange","adjustRange","getVizRangeObject","visualRange","getViewport","_addConstantLinesToRange","minDefined","maxDefined","_wholeRange$startValu","_wholeRange$endValue","categoriesInfo","getCategoriesInfo","adjustedVisualRange","adjustVisualRange","base","addRange","isLogarithmic","disabledNegatives","tmp","_getVisualRangeUpdateMode","viewport","newRange","oppositeValue","visualRangeUpdateMode","indexOf","newCategories","c","join","minPoint","minVisiblePoint","maxPoint","maxVisiblePoint","_handleBusinessRangeChanged","oppositeVisualRangeUpdateMode","axisReinitialized","_lastVisualRangeUpdateMode","_prevDataWasEmpty","_setVisualRange","getVisualRangeLength","currentBusinessRange","adjust","getVisualRangeCenter","_this$_options","raiseToExt","ceil","setBusinessRange","argCategories","_that$_seriesData$min","_that$_seriesData$max","dataIsEmpty","invert","inverted","isNaN","synchronizedValue","showZero","correctValueZeroLevel","sortCategories","getCategoriesSorter","userBreaks","_getScaleBreaks","_series","updateBusinessRange","dataRange","minValueField","maxValueField","_insideConstantLines","cl","extendAxis","_dataRange$addRange","getParsedValue","setGroupSeries","series","getLabelsPosition","labelShift","_constantLabelOffset","getFormattedValue","_getBoundaryTicks","majors","customBounds","customBoundTicks","addMinMax","_boundaryTicksVisibility","boundaryTicks","setPercentLabelFormat","resetAutoLabelFormat","getMultipleAxesSpacing","multipleAxesSpacing","getTicksValues","majorTicksValues","minorTicksValues","estimateTickInterval","_getTicks","setTicks","majorTicks","_getSkippedCategory","minorTicks","_isSynchronized","_adjustDivisionFactor","val","customTicks","customMinorTicks","bind","_getScreenDelta","overlappingBehavior","forceUserTickInterval","minors","minorTickInterval","minorTickCount","_initialBreaks","_createTicksAndLabelFormat","getDateFormatByTicks","getAggregationInfo","useAllAggregatedPoints","_visualRange$startVal","_visualRange$endValue","_that$_seriesData","marginOptions","_marginOptions","aggregateByCategory","aggregationInterval","aggregationGroupWidth","checkInterval","sizePointNormalState","minInterval","generateTicks","add","getAddFunction","maxMinDistance","dateToMilliseconds","filteredBreaks","_filterBreaks","breakStyle","_aggregationInterval","createTicks","_estimatedTickInterval","_calculateValueMargins","minValue","maxValue","_boundaryTicks","filter","minor","some","boundary","_minorTickInterval","oldMajorTicks","majorTicksByValues","r","t","sameType","setSkippedCategory","oldMinorTicks","updateValue","_ticksToRemove","keys","k","slice","_t$label","removeTitle","_reinitTranslator","setMarginOptions","getMarginOptions","_this$_marginOptions","_calculateRangeInterval","isDateTime","minArgs","addToArgs","_calculateWorkWeekInterval","apply","businessInterval","workdaysOnly","weekend","weekendsCount","_getConvertIntervalCoefficient","intervalInPx","ratioOfCanvasRange","_resetMargins","marginSize","valueMarginsEnabled","minValueMargin","maxValueMargin","minPadding","maxPadding","rangeInterval","stubData","startPadding","endPadding","pxInterval","getInterval","isFinite","minPercentPadding","maxPercentPadding","maxPaddingValue","percentStick","canvasStartEnd","commonMargin","screenDeltaWithMargins","skipViewportExtending","firstTickPosition","lastTickPosition","invertMultiplier","minTickPadding","maxTickPadding","commonPadding","coeff","isInverted","_minValue","_maxValue","_minValue2","_maxValue2","_that$getCorrectedVal","getCorrectedValuesToZero","correctedMin","correctedMax","correctZeroLevel","minExpectedPadding","maxExpectedPadding","applyMargins","br","_this2","constantLines","l","draw","_drawTitle","drawGridLine","Deferred","when","getTemplateDeferred","done","resolve","_dateMarkers","_drawDateMarkers","_measureTitle","_applyWordWrap","_adjustConstantLineLabels","_setLabelsPlacement","_adjustDateMarkers","_adjustTitle","getTemplatesDef","setRenderedState","state","_drawn","convertedTickInterval","textWidth","textHeight","displayMode","_validateDisplayMode","overlappingMode","_validateOverlappingMode","wordWrapMode","wordWrap","overflowMode","textOverflow","usefulSpace","correctByWidth","correctByHeight","setMaxSize","updateSize","updateTitle","_checkTitleOverflow","_updateTitleCoords","animationEnabled","_resetStartCoordinates","updatePosition","prepareAnimation","applyClipRects","elementsClipID","canvasClipID","_validateVisualRange","convertVisualRangeObject","_validateOptions","_customVisualRange","beforeCleanGroups","linkRemove","afterCleanGroups","validate","getParser","resetVisualRange","isSilent","handleZooming","allowPartialUpdate","_applyZooming","_resetVisualRangeOption","getZoomStartEventArg","event","actionType","cancel","getZoomEndEventArg","previousRange","zoomFactor","shift","rangeStart","rangeEnd","getZoomBounds","secondPriorityRange","setInitRange","getTemplatesGroups","setCustomVisualRange","args","adjustedRange","_getAdjustedBusinessRange","_startValue","_endValue","isPlainObject","zoomResults","isPrevented","_visualRange","preventEvents","domEvent","zoomStartEvent","skipEventRising","_storedZoomEndParams","startRange","prevent","handleZoomEnd","previousBusinessRange","typeIsNotChanged","NaN","round","zoomEndEvent","isZoomingLowerLimitOvercome","restorePreviousVisualRange","minZoom","minVisualRangeLength","isOvercoming","visualRangeLength","isNumeric","canvasLength","fullRange","dataVisualRangeIsReduced","minDataValue","maxDataValue","seriesData","startPoint","endPoint","edges","visualRangeStartPoint","visualRangeEndPoint","isExtremePosition","isMax","extremeDataValue","extremePoint","visualRangePoint","getFullTicks","sort","a","b","withIndents","widthAxis","indent","viewportRange","maxText","prevLabel","root","ignoreOverlapping","behavior","rotationAngle","staggeringSpacing","notRecastStep","_getStep","_applyLabelMode","_applyLabelOverlapping","mode","checkLabels","array","areLabelsOverlap","_checkBoundedLabelsOverlapping","labelHeight","contentContainer","rotate","_getMaxLabelHeight","getMarkerTrackers","coordsIn","Translator2D","update","_getTranslatorOptions","_options$workWeek2","_options$breakStyle$w","_options$breakStyle","shiftZeroValue","semiDiscreteInterval","stick","_getStick","breaksSize","reverse","breaksLength","cumulativeWidth","getSpiderTicks","setSpiderTicks","drawScaleBreaks","_rotateConstantLine","applyVisualRangeSetter","visualRangeSetter","categoriesSortingMethod"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/base_axis.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.Axis = exports.calculateCanvasMargins = exports.measureLabels = void 0;\r\nvar _smart_formatter = require(\"./smart_formatter\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _axes_constants = _interopRequireDefault(require(\"./axes_constants\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _format_helper = _interopRequireDefault(require(\"../../format_helper\"));\r\nvar _parse_utils = require(\"../components/parse_utils\");\r\nvar _tick_generator = require(\"./tick_generator\");\r\nvar _translator2d = require(\"../translators/translator2d\");\r\nvar _range = require(\"../translators/range\");\r\nvar _tick = require(\"./tick\");\r\nvar _math2 = require(\"../../core/utils/math\");\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _xy_axes = _interopRequireDefault(require(\"./xy_axes\"));\r\nvar polarMethods = _interopRequireWildcard(require(\"./polar_axes\"));\r\nvar _constant_line = _interopRequireDefault(require(\"./constant_line\"));\r\nvar _strip = _interopRequireDefault(require(\"./strip\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _getRequireWildcardCache() {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cache = new WeakMap;\r\n    _getRequireWildcardCache = function() {\r\n        return cache\r\n    };\r\n    return cache\r\n}\r\n\r\nfunction _interopRequireWildcard(obj) {\r\n    if (obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache();\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar convertTicksToValues = _axes_constants.default.convertTicksToValues;\r\nvar _math = Math;\r\nvar _abs = _math.abs;\r\nvar _max = _math.max;\r\nvar _min = _math.min;\r\nvar _isArray = Array.isArray;\r\nvar DEFAULT_AXIS_LABEL_SPACING = 5;\r\nvar MAX_GRID_BORDER_ADHENSION = 4;\r\nvar TOP = _axes_constants.default.top;\r\nvar BOTTOM = _axes_constants.default.bottom;\r\nvar LEFT = _axes_constants.default.left;\r\nvar RIGHT = _axes_constants.default.right;\r\nvar CENTER = _axes_constants.default.center;\r\nvar KEEP = \"keep\";\r\nvar SHIFT = \"shift\";\r\nvar RESET = \"reset\";\r\nvar ROTATE = \"rotate\";\r\nvar DEFAULT_AXIS_DIVISION_FACTOR = 50;\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\r\nvar SCROLL_THRESHOLD = 5;\r\nvar MIN_BAR_MARGIN = 5;\r\nvar MAX_MARGIN_VALUE = .8;\r\nvar dateIntervals = {\r\n    day: 864e5,\r\n    week: 6048e5\r\n};\r\n\r\nfunction getTickGenerator(options, incidentOccurred, skipTickGeneration, rangeIsEmpty, adjustDivisionFactor, _ref) {\r\n    var _options$workWeek;\r\n    var allowNegatives = _ref.allowNegatives,\r\n        linearThreshold = _ref.linearThreshold;\r\n    return (0, _tick_generator.tickGenerator)({\r\n        axisType: options.type,\r\n        dataType: options.dataType,\r\n        logBase: options.logarithmBase,\r\n        allowNegatives: allowNegatives,\r\n        linearThreshold: linearThreshold,\r\n        axisDivisionFactor: adjustDivisionFactor(options.axisDivisionFactor || DEFAULT_AXIS_DIVISION_FACTOR),\r\n        minorAxisDivisionFactor: adjustDivisionFactor(options.minorAxisDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR),\r\n        numberMultipliers: options.numberMultipliers,\r\n        calculateMinors: options.minorTick.visible || options.minorGrid.visible || options.calculateMinors,\r\n        allowDecimals: options.allowDecimals,\r\n        endOnTick: options.endOnTick,\r\n        incidentOccurred: incidentOccurred,\r\n        firstDayOfWeek: null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0],\r\n        skipTickGeneration: skipTickGeneration,\r\n        skipCalculationLimits: options.skipCalculationLimits,\r\n        generateExtraTick: options.generateExtraTick,\r\n        minTickInterval: options.minTickInterval,\r\n        rangeIsEmpty: rangeIsEmpty\r\n    })\r\n}\r\n\r\nfunction createMajorTick(axis, renderer, skippedCategory) {\r\n    var options = axis.getOptions();\r\n    return (0, _tick.tick)(axis, renderer, options.tick, options.grid, skippedCategory, false)\r\n}\r\n\r\nfunction createMinorTick(axis, renderer) {\r\n    var options = axis.getOptions();\r\n    return (0, _tick.tick)(axis, renderer, options.minorTick, options.minorGrid)\r\n}\r\n\r\nfunction createBoundaryTick(axis, renderer, isFirst) {\r\n    var options = axis.getOptions();\r\n    return (0, _tick.tick)(axis, renderer, (0, _extend.extend)({}, options.tick, {\r\n        visible: options.showCustomBoundaryTicks\r\n    }), options.grid, void 0, false, isFirst ? -1 : 1)\r\n}\r\n\r\nfunction callAction(elements, action, actionArgument1, actionArgument2) {\r\n    (elements || []).forEach(function(e) {\r\n        return e[action](actionArgument1, actionArgument2)\r\n    })\r\n}\r\n\r\nfunction initTickCoords(ticks) {\r\n    callAction(ticks, \"initCoords\")\r\n}\r\n\r\nfunction drawTickMarks(ticks, options) {\r\n    callAction(ticks, \"drawMark\", options)\r\n}\r\n\r\nfunction drawGrids(ticks, drawLine) {\r\n    callAction(ticks, \"drawGrid\", drawLine)\r\n}\r\n\r\nfunction updateTicksPosition(ticks, options, animate) {\r\n    callAction(ticks, \"updateTickPosition\", options, animate)\r\n}\r\n\r\nfunction updateGridsPosition(ticks, animate) {\r\n    callAction(ticks, \"updateGridPosition\", animate)\r\n}\r\nvar measureLabels = function(items) {\r\n    items.forEach(function(item) {\r\n        var label = item.getContentContainer();\r\n        item.labelBBox = label ? label.getBBox() : {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    })\r\n};\r\nexports.measureLabels = measureLabels;\r\n\r\nfunction cleanUpInvalidTicks(ticks) {\r\n    var i = ticks.length - 1;\r\n    for (i; i >= 0; i--) {\r\n        if (!removeInvalidTick(ticks, i)) {\r\n            break\r\n        }\r\n    }\r\n    for (i = 0; i < ticks.length; i++) {\r\n        if (removeInvalidTick(ticks, i)) {\r\n            i--\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeInvalidTick(ticks, i) {\r\n    if (null === ticks[i].coords.x || null === ticks[i].coords.y) {\r\n        ticks.splice(i, 1);\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction validateAxisOptions(options) {\r\n    var _labelOptions$minSpac;\r\n    var labelOptions = options.label;\r\n    var position = options.position;\r\n    var defaultPosition = options.isHorizontal ? BOTTOM : LEFT;\r\n    var secondaryPosition = options.isHorizontal ? TOP : RIGHT;\r\n    var labelPosition = labelOptions.position;\r\n    if (position !== defaultPosition && position !== secondaryPosition) {\r\n        position = defaultPosition\r\n    }\r\n    if (!labelPosition || \"outside\" === labelPosition) {\r\n        labelPosition = position\r\n    } else {\r\n        if (\"inside\" === labelPosition) {\r\n            var _TOP$BOTTOM$LEFT$RIGH;\r\n            labelPosition = (_TOP$BOTTOM$LEFT$RIGH = {}, _defineProperty(_TOP$BOTTOM$LEFT$RIGH, TOP, BOTTOM), _defineProperty(_TOP$BOTTOM$LEFT$RIGH, BOTTOM, TOP), _defineProperty(_TOP$BOTTOM$LEFT$RIGH, LEFT, RIGHT), _defineProperty(_TOP$BOTTOM$LEFT$RIGH, RIGHT, LEFT), _TOP$BOTTOM$LEFT$RIGH)[position]\r\n        }\r\n    }\r\n    if (labelPosition !== defaultPosition && labelPosition !== secondaryPosition) {\r\n        labelPosition = position\r\n    }\r\n    if (labelOptions.alignment !== CENTER && !labelOptions.userAlignment) {\r\n        var _TOP$BOTTOM$LEFT$RIGH2;\r\n        labelOptions.alignment = (_TOP$BOTTOM$LEFT$RIGH2 = {}, _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, TOP, CENTER), _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, BOTTOM, CENTER), _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, LEFT, RIGHT), _defineProperty(_TOP$BOTTOM$LEFT$RIGH2, RIGHT, LEFT), _TOP$BOTTOM$LEFT$RIGH2)[labelPosition]\r\n    }\r\n    options.position = position;\r\n    labelOptions.position = labelPosition;\r\n    options.hoverMode = options.hoverMode ? options.hoverMode.toLowerCase() : \"none\";\r\n    labelOptions.minSpacing = null !== (_labelOptions$minSpac = labelOptions.minSpacing) && void 0 !== _labelOptions$minSpac ? _labelOptions$minSpac : DEFAULT_AXIS_LABEL_SPACING;\r\n    options.type && (options.type = options.type.toLowerCase());\r\n    options.argumentType && (options.argumentType = options.argumentType.toLowerCase());\r\n    options.valueType && (options.valueType = options.valueType.toLowerCase())\r\n}\r\n\r\nfunction getOptimalAngle(boxes, labelOpt) {\r\n    var angle = 180 * _math.asin((boxes[0].height + labelOpt.minSpacing) / (boxes[1].x - boxes[0].x)) / _math.PI;\r\n    return angle < 45 ? -45 : -90\r\n}\r\n\r\nfunction updateLabels(ticks, step, func) {\r\n    ticks.forEach(function(tick, index) {\r\n        if (tick.getContentContainer()) {\r\n            if (index % step !== 0) {\r\n                tick.removeLabel()\r\n            } else {\r\n                if (func) {\r\n                    func(tick, index)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction getZoomBoundValue(optionValue, dataValue) {\r\n    if (void 0 === optionValue) {\r\n        return dataValue\r\n    } else {\r\n        if (null === optionValue) {\r\n            return\r\n        } else {\r\n            return optionValue\r\n        }\r\n    }\r\n}\r\n\r\nfunction configureGenerator(options, axisDivisionFactor, viewPort, screenDelta, minTickInterval) {\r\n    var tickGeneratorOptions = (0, _extend.extend)({}, options, {\r\n        endOnTick: true,\r\n        axisDivisionFactor: axisDivisionFactor,\r\n        skipCalculationLimits: true,\r\n        generateExtraTick: true,\r\n        minTickInterval: minTickInterval\r\n    });\r\n    return function(tickInterval, skipTickGeneration, min, max, breaks) {\r\n        return getTickGenerator(tickGeneratorOptions, _common.noop, skipTickGeneration, viewPort.isEmpty(), function(v) {\r\n            return v\r\n        }, viewPort)({\r\n            min: min,\r\n            max: max,\r\n            categories: viewPort.categories,\r\n            isSpacedMargin: viewPort.isSpacedMargin\r\n        }, screenDelta, tickInterval, (0, _type.isDefined)(tickInterval), void 0, void 0, void 0, breaks)\r\n    }\r\n}\r\n\r\nfunction getConstantLineSharpDirection(coord, axisCanvas) {\r\n    return Math.max(axisCanvas.start, axisCanvas.end) !== coord ? 1 : -1\r\n}\r\nvar calculateCanvasMargins = function(bBoxes, canvas) {\r\n    var cLeft = canvas.left;\r\n    var cTop = canvas.top;\r\n    var cRight = canvas.width - canvas.right;\r\n    var cBottom = canvas.height - canvas.bottom;\r\n    return bBoxes.reduce(function(margins, bBox) {\r\n        if (!bBox || bBox.isEmpty) {\r\n            return margins\r\n        }\r\n        return {\r\n            left: _max(margins.left, cLeft - bBox.x),\r\n            top: _max(margins.top, cTop - bBox.y),\r\n            right: _max(margins.right, bBox.x + bBox.width - cRight),\r\n            bottom: _max(margins.bottom, bBox.y + bBox.height - cBottom)\r\n        }\r\n    }, {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n    })\r\n};\r\nexports.calculateCanvasMargins = calculateCanvasMargins;\r\nvar Axis = function(renderSettings) {\r\n    var that = this;\r\n    that._renderer = renderSettings.renderer;\r\n    that._incidentOccurred = renderSettings.incidentOccurred;\r\n    that._eventTrigger = renderSettings.eventTrigger;\r\n    that._stripsGroup = renderSettings.stripsGroup;\r\n    that._labelAxesGroup = renderSettings.labelAxesGroup;\r\n    that._constantLinesGroup = renderSettings.constantLinesGroup;\r\n    that._scaleBreaksGroup = renderSettings.scaleBreaksGroup;\r\n    that._axesContainerGroup = renderSettings.axesContainerGroup;\r\n    that._gridContainerGroup = renderSettings.gridGroup;\r\n    that._axisCssPrefix = renderSettings.widgetClass + \"-\" + (renderSettings.axisClass ? renderSettings.axisClass + \"-\" : \"\");\r\n    that._setType(renderSettings.axisType, renderSettings.drawingType);\r\n    that._createAxisGroups();\r\n    that._translator = that._createTranslator();\r\n    that.isArgumentAxis = renderSettings.isArgumentAxis;\r\n    that._viewport = {};\r\n    that._firstDrawing = true;\r\n    that._initRange = {};\r\n    that._getTemplate = renderSettings.getTemplate\r\n};\r\nexports.Axis = Axis;\r\nAxis.prototype = {\r\n    constructor: Axis,\r\n    _drawAxis: function() {\r\n        var options = this._options;\r\n        if (!options.visible) {\r\n            return\r\n        }\r\n        this._axisElement = this._createAxisElement();\r\n        this._updateAxisElementPosition();\r\n        this._axisElement.attr({\r\n            \"stroke-width\": options.width,\r\n            stroke: options.color,\r\n            \"stroke-opacity\": options.opacity\r\n        }).sharp(this._getSharpParam(true), this.getAxisSharpDirection()).append(this._axisLineGroup)\r\n    },\r\n    _createPathElement: function(points, attr, sharpDirection) {\r\n        return this.sharp(this._renderer.path(points, \"line\").attr(attr), sharpDirection)\r\n    },\r\n    sharp: function(svgElement) {\r\n        var sharpDirection = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\r\n        return svgElement.sharp(this._getSharpParam(), sharpDirection)\r\n    },\r\n    customPositionIsAvailable: function() {\r\n        return false\r\n    },\r\n    getOrthogonalAxis: _common.noop,\r\n    getCustomPosition: _common.noop,\r\n    getCustomBoundaryPosition: _common.noop,\r\n    resolveOverlappingForCustomPositioning: _common.noop,\r\n    hasCustomPosition: function() {\r\n        return false\r\n    },\r\n    customPositionIsBoundaryOrthogonalAxis: function() {\r\n        return false\r\n    },\r\n    getResolvedBoundaryPosition: function() {\r\n        return this.getOptions().position\r\n    },\r\n    getAxisSharpDirection: function() {\r\n        var position = this.getResolvedBoundaryPosition();\r\n        return this.hasCustomPosition() || position !== BOTTOM && position !== RIGHT ? 1 : -1\r\n    },\r\n    getSharpDirectionByCoords: function(coords) {\r\n        var canvas = this._getCanvasStartEnd();\r\n        var maxCoord = Math.max(canvas.start, canvas.end);\r\n        return this.getRadius ? 0 : maxCoord !== coords[this._isHorizontal ? \"x\" : \"y\"] ? 1 : -1\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            if (grid.points) {\r\n                return that._createPathElement(grid.points, gridStyle, that.getSharpDirectionByCoords(tick.coords))\r\n            }\r\n            return null\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var that = this;\r\n        var isHorizontal = this._isHorizontal;\r\n        var tickPositionField = isHorizontal ? \"x\" : \"y\";\r\n        var orthogonalPositions = this._orthogonalPositions;\r\n        var positionFrom = orthogonalPositions.start;\r\n        var positionTo = orthogonalPositions.end;\r\n        var borderOptions = that.borderOptions;\r\n        var canvasStart = isHorizontal ? LEFT : TOP;\r\n        var canvasEnd = isHorizontal ? RIGHT : BOTTOM;\r\n        var axisCanvas = that.getCanvas();\r\n        var canvas = {\r\n            left: axisCanvas.left,\r\n            right: axisCanvas.width - axisCanvas.right,\r\n            top: axisCanvas.top,\r\n            bottom: axisCanvas.height - axisCanvas.bottom\r\n        };\r\n        var firstBorderLinePosition = borderOptions.visible && borderOptions[canvasStart] ? canvas[canvasStart] : void 0;\r\n        var lastBorderLinePosition = borderOptions.visible && borderOptions[canvasEnd] ? canvas[canvasEnd] : void 0;\r\n        var minDelta = MAX_GRID_BORDER_ADHENSION + firstBorderLinePosition;\r\n        var maxDelta = lastBorderLinePosition - MAX_GRID_BORDER_ADHENSION;\r\n        if (that.areCoordsOutsideAxis(coords) || void 0 === coords[tickPositionField] || coords[tickPositionField] < minDelta || coords[tickPositionField] > maxDelta) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: isHorizontal ? null !== coords[tickPositionField] ? [coords[tickPositionField], positionFrom, coords[tickPositionField], positionTo] : null : null !== coords[tickPositionField] ? [positionFrom, coords[tickPositionField], positionTo, coords[tickPositionField]] : null\r\n        }\r\n    },\r\n    _getConstantLinePos: function(parsedValue, canvasStart, canvasEnd) {\r\n        var value = this._getTranslatedCoord(parsedValue);\r\n        if (!(0, _type.isDefined)(value) || value < _min(canvasStart, canvasEnd) || value > _max(canvasStart, canvasEnd)) {\r\n            return\r\n        }\r\n        return value\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var positionFrom = this._orthogonalPositions.start;\r\n        var positionTo = this._orthogonalPositions.end;\r\n        return {\r\n            points: this._isHorizontal ? [value, positionFrom, value, positionTo] : [positionFrom, value, positionTo, value]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr, getConstantLineSharpDirection(value, this._getCanvasStartEnd()))\r\n    },\r\n    _drawConstantLineLabelText: function(text, x, y, _ref2, group) {\r\n        var font = _ref2.font,\r\n            cssClass = _ref2.cssClass;\r\n        return this._renderer.text(text, x, y).css((0, _utils.patchFontOptions)((0, _extend.extend)({}, this._options.label.font, font))).attr({\r\n            align: \"center\",\r\n            \"class\": cssClass\r\n        }).append(group)\r\n    },\r\n    _drawConstantLineLabels: function(parsedValue, lineLabelOptions, value, group) {\r\n        var _text;\r\n        var that = this;\r\n        var text = lineLabelOptions.text;\r\n        var options = that._options;\r\n        var labelOptions = options.label;\r\n        that._checkAlignmentConstantLineLabels(lineLabelOptions);\r\n        text = null !== (_text = text) && void 0 !== _text ? _text : that.formatLabel(parsedValue, labelOptions);\r\n        var coords = that._getConstantLineLabelsCoords(value, lineLabelOptions);\r\n        return that._drawConstantLineLabelText(text, coords.x, coords.y, lineLabelOptions, group)\r\n    },\r\n    _getStripPos: function(startValue, endValue, canvasStart, canvasEnd, range) {\r\n        var isContinuous = !!(range.minVisible || range.maxVisible);\r\n        var categories = (range.categories || []).reduce(function(result, cat) {\r\n            result.push(cat.valueOf());\r\n            return result\r\n        }, []);\r\n        var start;\r\n        var end;\r\n        var swap;\r\n        var startCategoryIndex;\r\n        var endCategoryIndex;\r\n        if (!isContinuous) {\r\n            if ((0, _type.isDefined)(startValue) && (0, _type.isDefined)(endValue)) {\r\n                var parsedStartValue = this.parser(startValue);\r\n                var parsedEndValue = this.parser(endValue);\r\n                startCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedStartValue) ? parsedStartValue.valueOf() : void 0, categories);\r\n                endCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedEndValue) ? parsedEndValue.valueOf() : void 0, categories);\r\n                if (startCategoryIndex === -1 || endCategoryIndex === -1) {\r\n                    return {\r\n                        from: 0,\r\n                        to: 0,\r\n                        outOfCanvas: true\r\n                    }\r\n                }\r\n                if (startCategoryIndex > endCategoryIndex) {\r\n                    swap = endValue;\r\n                    endValue = startValue;\r\n                    startValue = swap\r\n                }\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(startValue)) {\r\n            startValue = this.validateUnit(startValue, \"E2105\", \"strip\");\r\n            start = this._getTranslatedCoord(startValue, -1)\r\n        } else {\r\n            start = canvasStart\r\n        }\r\n        if ((0, _type.isDefined)(endValue)) {\r\n            endValue = this.validateUnit(endValue, \"E2105\", \"strip\");\r\n            end = this._getTranslatedCoord(endValue, 1)\r\n        } else {\r\n            end = canvasEnd\r\n        }\r\n        var stripPosition = start < end ? {\r\n            from: start,\r\n            to: end\r\n        } : {\r\n            from: end,\r\n            to: start\r\n        };\r\n        var visibleArea = this.getVisibleArea();\r\n        if (stripPosition.from <= visibleArea[0] && stripPosition.to <= visibleArea[0] || stripPosition.from >= visibleArea[1] && stripPosition.to >= visibleArea[1]) {\r\n            stripPosition.outOfCanvas = true\r\n        }\r\n        return stripPosition\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var x;\r\n        var y;\r\n        var width;\r\n        var height;\r\n        var orthogonalPositions = this._orthogonalPositions;\r\n        var positionFrom = orthogonalPositions.start;\r\n        var positionTo = orthogonalPositions.end;\r\n        if (this._isHorizontal) {\r\n            x = fromPoint;\r\n            y = _min(positionFrom, positionTo);\r\n            width = toPoint - fromPoint;\r\n            height = _abs(positionFrom - positionTo)\r\n        } else {\r\n            x = _min(positionFrom, positionTo);\r\n            y = fromPoint;\r\n            width = _abs(positionFrom - positionTo);\r\n            height = _abs(fromPoint - toPoint)\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.rect(attrs.x, attrs.y, attrs.width, attrs.height)\r\n    },\r\n    _adjustStripLabels: function() {\r\n        var that = this;\r\n        this._strips.forEach(function(strip) {\r\n            if (strip.label) {\r\n                strip.label.attr(that._getAdjustedStripLabelCoords(strip))\r\n            }\r\n        })\r\n    },\r\n    _adjustLabelsCoord: function(offset, maxWidth, checkCanvas) {\r\n        var _this = this;\r\n        var that = this;\r\n        var getContainerAttrs = function(tick) {\r\n            return _this._getLabelAdjustedCoord(tick, offset + (tick.labelOffset || 0), maxWidth, checkCanvas)\r\n        };\r\n        that._majorTicks.forEach(function(tick) {\r\n            if (tick.label) {\r\n                tick.updateMultilineTextAlignment();\r\n                tick.label.attr(getContainerAttrs(tick))\r\n            } else {\r\n                tick.templateContainer && tick.templateContainer.attr(getContainerAttrs(tick))\r\n            }\r\n        })\r\n    },\r\n    _adjustLabels: function(offset) {\r\n        var that = this;\r\n        var options = that.getOptions();\r\n        var positionsAreConsistent = options.position === options.label.position;\r\n        var maxSize = that._majorTicks.reduce(function(size, tick) {\r\n            if (!tick.getContentContainer()) {\r\n                return size\r\n            }\r\n            var bBox = tick.labelRotationAngle ? (0, _utils.rotateBBox)(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle) : tick.labelBBox;\r\n            return {\r\n                width: _max(size.width || 0, bBox.width),\r\n                height: _max(size.height || 0, bBox.height),\r\n                offset: _max(size.offset || 0, tick.labelOffset || 0)\r\n            }\r\n        }, {});\r\n        var additionalOffset = positionsAreConsistent ? that._isHorizontal ? maxSize.height : maxSize.width : 0;\r\n        that._adjustLabelsCoord(offset, maxSize.width);\r\n        return offset + additionalOffset + (additionalOffset && that._options.label.indentFromAxis) + (positionsAreConsistent ? maxSize.offset : 0)\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, offset, maxWidth) {\r\n        offset = offset || 0;\r\n        var that = this;\r\n        var options = that._options;\r\n        var templateBox = tick.templateContainer && tick.templateContainer.getBBox();\r\n        var box = templateBox || (0, _utils.rotateBBox)(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle || 0);\r\n        var textAlign = tick.labelAlignment || options.label.alignment;\r\n        var isDiscrete = \"discrete\" === that._options.type;\r\n        var isFlatLabel = tick.labelRotationAngle % 90 === 0;\r\n        var indentFromAxis = options.label.indentFromAxis;\r\n        var labelPosition = options.label.position;\r\n        var axisPosition = that._axisPosition;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelX = labelCoords.x;\r\n        var translateX;\r\n        var translateY;\r\n        if (that._isHorizontal) {\r\n            if (labelPosition === BOTTOM) {\r\n                translateY = axisPosition + indentFromAxis - box.y + offset\r\n            } else {\r\n                translateY = axisPosition - indentFromAxis - (box.y + box.height) - offset\r\n            }\r\n            if (textAlign === RIGHT) {\r\n                translateX = isDiscrete && isFlatLabel ? tick.coords.x - (box.x + box.width) : labelX - box.x - box.width\r\n            } else {\r\n                if (textAlign === LEFT) {\r\n                    translateX = isDiscrete && isFlatLabel ? labelX - box.x - (tick.coords.x - labelX) : labelX - box.x\r\n                } else {\r\n                    translateX = labelX - box.x - box.width / 2\r\n                }\r\n            }\r\n        } else {\r\n            translateY = labelCoords.y - box.y - box.height / 2;\r\n            if (labelPosition === LEFT) {\r\n                if (textAlign === LEFT) {\r\n                    translateX = axisPosition - indentFromAxis - maxWidth - box.x\r\n                } else {\r\n                    if (textAlign === CENTER) {\r\n                        translateX = axisPosition - indentFromAxis - maxWidth / 2 - box.x - box.width / 2\r\n                    } else {\r\n                        translateX = axisPosition - indentFromAxis - box.x - box.width\r\n                    }\r\n                }\r\n                translateX -= offset\r\n            } else {\r\n                if (textAlign === RIGHT) {\r\n                    translateX = axisPosition + indentFromAxis + maxWidth - box.x - box.width\r\n                } else {\r\n                    if (textAlign === CENTER) {\r\n                        translateX = axisPosition + indentFromAxis + maxWidth / 2 - box.x - box.width / 2\r\n                    } else {\r\n                        translateX = axisPosition + indentFromAxis - box.x\r\n                    }\r\n                }\r\n                translateX += offset\r\n            }\r\n        }\r\n        return {\r\n            translateX: translateX,\r\n            translateY: translateY\r\n        }\r\n    },\r\n    _createAxisConstantLineGroups: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var classSelector = that._axisCssPrefix;\r\n        var constantLinesClass = classSelector + \"constant-lines\";\r\n        var insideGroup = renderer.g().attr({\r\n            \"class\": constantLinesClass\r\n        });\r\n        var outsideGroup1 = renderer.g().attr({\r\n            \"class\": constantLinesClass\r\n        });\r\n        var outsideGroup2 = renderer.g().attr({\r\n            \"class\": constantLinesClass\r\n        });\r\n        return {\r\n            inside: insideGroup,\r\n            outside1: outsideGroup1,\r\n            left: outsideGroup1,\r\n            top: outsideGroup1,\r\n            outside2: outsideGroup2,\r\n            right: outsideGroup2,\r\n            bottom: outsideGroup2,\r\n            remove: function() {\r\n                this.inside.remove();\r\n                this.outside1.remove();\r\n                this.outside2.remove()\r\n            },\r\n            clear: function() {\r\n                this.inside.clear();\r\n                this.outside1.clear();\r\n                this.outside2.clear()\r\n            }\r\n        }\r\n    },\r\n    _createAxisGroups: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var classSelector = that._axisCssPrefix;\r\n        that._axisGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"axis\"\r\n        }).enableLinks();\r\n        that._axisStripGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"strips\"\r\n        });\r\n        that._axisGridGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"grid\"\r\n        });\r\n        that._axisElementsGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"elements\"\r\n        }).linkOn(that._axisGroup, \"axisElements\").linkAppend();\r\n        that._axisLineGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"line\"\r\n        }).linkOn(that._axisGroup, \"axisLine\").linkAppend();\r\n        that._axisTitleGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"title\"\r\n        }).append(that._axisGroup);\r\n        that._axisConstantLineGroups = {\r\n            above: that._createAxisConstantLineGroups(),\r\n            under: that._createAxisConstantLineGroups()\r\n        };\r\n        that._axisStripLabelGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"axis-labels\"\r\n        })\r\n    },\r\n    _clearAxisGroups: function() {\r\n        var that = this;\r\n        that._axisGroup.remove();\r\n        that._axisStripGroup.remove();\r\n        that._axisStripLabelGroup.remove();\r\n        that._axisConstantLineGroups.above.remove();\r\n        that._axisConstantLineGroups.under.remove();\r\n        that._axisGridGroup.remove();\r\n        that._axisTitleGroup.clear();\r\n        (!that._options.label.template || !that.isRendered()) && that._axisElementsGroup.clear();\r\n        that._axisLineGroup && that._axisLineGroup.clear();\r\n        that._axisStripGroup && that._axisStripGroup.clear();\r\n        that._axisGridGroup && that._axisGridGroup.clear();\r\n        that._axisConstantLineGroups.above.clear();\r\n        that._axisConstantLineGroups.under.clear();\r\n        that._axisStripLabelGroup && that._axisStripLabelGroup.clear()\r\n    },\r\n    _getLabelFormatObject: function(value, labelOptions, range, point, tickInterval, ticks) {\r\n        range = range || this._getViewportRange();\r\n        var formatObject = {\r\n            value: value,\r\n            valueText: (0, _smart_formatter.smartFormatter)(value, {\r\n                labelOptions: labelOptions,\r\n                ticks: ticks || convertTicksToValues(this._majorTicks),\r\n                tickInterval: null !== tickInterval && void 0 !== tickInterval ? tickInterval : this._tickInterval,\r\n                dataType: this._options.dataType,\r\n                logarithmBase: this._options.logarithmBase,\r\n                type: this._options.type,\r\n                showTransition: !this._options.marker.visible,\r\n                point: point\r\n            }) || \"\",\r\n            min: range.minVisible,\r\n            max: range.maxVisible\r\n        };\r\n        if (point) {\r\n            formatObject.point = point\r\n        }\r\n        return formatObject\r\n    },\r\n    formatLabel: function(value, labelOptions, range, point, tickInterval, ticks) {\r\n        var formatObject = this._getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks);\r\n        return (0, _type.isFunction)(labelOptions.customizeText) ? labelOptions.customizeText.call(formatObject, formatObject) : formatObject.valueText\r\n    },\r\n    formatHint: function(value, labelOptions, range) {\r\n        var formatObject = this._getLabelFormatObject(value, labelOptions, range);\r\n        return (0, _type.isFunction)(labelOptions.customizeHint) ? labelOptions.customizeHint.call(formatObject, formatObject) : void 0\r\n    },\r\n    formatRange: function(startValue, endValue, interval) {\r\n        return (0, _smart_formatter.formatRange)(startValue, endValue, interval, this.getOptions())\r\n    },\r\n    _setTickOffset: function() {\r\n        var options = this._options;\r\n        var discreteAxisDivisionMode = options.discreteAxisDivisionMode;\r\n        this._tickOffset = +(\"crossLabels\" !== discreteAxisDivisionMode || !discreteAxisDivisionMode)\r\n    },\r\n    resetApplyingAnimation: function(isFirstDrawing) {\r\n        this._resetApplyingAnimation = true;\r\n        if (isFirstDrawing) {\r\n            this._firstDrawing = true\r\n        }\r\n    },\r\n    getMargins: function() {\r\n        var that = this;\r\n        if (that.hasCustomPosition()) {\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }\r\n        }\r\n        var options = that._options;\r\n        var position = options.position;\r\n        var placeholderSize = options.placeholderSize;\r\n        var canvas = that.getCanvas();\r\n        var cLeft = canvas.left;\r\n        var cTop = canvas.top;\r\n        var cRight = canvas.width - canvas.right;\r\n        var cBottom = canvas.height - canvas.bottom;\r\n        var edgeMarginCorrection = _max(options.grid.visible && options.grid.width || 0, options.tick.visible && options.tick.width || 0);\r\n        var constantLineAboveSeries = that._axisConstantLineGroups.above;\r\n        var constantLineUnderSeries = that._axisConstantLineGroups.under;\r\n        var boxes = [that._axisElementsGroup, constantLineAboveSeries.outside1, constantLineAboveSeries.outside2, constantLineUnderSeries.outside1, constantLineUnderSeries.outside2, that._axisLineGroup].map(function(group) {\r\n            return group && group.getBBox()\r\n        }).concat(function(group) {\r\n            var box = group && group.getBBox();\r\n            if (!box || box.isEmpty) {\r\n                return box\r\n            }\r\n            if (that._isHorizontal) {\r\n                box.x = cLeft;\r\n                box.width = cRight - cLeft\r\n            } else {\r\n                box.y = cTop;\r\n                box.height = cBottom - cTop\r\n            }\r\n            return box\r\n        }(that._axisTitleGroup));\r\n        var margins = calculateCanvasMargins(boxes, canvas);\r\n        margins[position] += options.crosshairMargin;\r\n        if (placeholderSize) {\r\n            margins[position] = placeholderSize\r\n        }\r\n        if (edgeMarginCorrection) {\r\n            if (that._isHorizontal && canvas.right < edgeMarginCorrection && margins.right < edgeMarginCorrection) {\r\n                margins.right = edgeMarginCorrection\r\n            }\r\n            if (!that._isHorizontal && canvas.bottom < edgeMarginCorrection && margins.bottom < edgeMarginCorrection) {\r\n                margins.bottom = edgeMarginCorrection\r\n            }\r\n        }\r\n        return margins\r\n    },\r\n    validateUnit: function(unit, idError, parameters) {\r\n        var that = this;\r\n        unit = that.parser(unit);\r\n        if (void 0 === unit && idError) {\r\n            that._incidentOccurred(idError, [parameters])\r\n        }\r\n        return unit\r\n    },\r\n    _setType: function(axisType, drawingType) {\r\n        var that = this;\r\n        var axisTypeMethods;\r\n        switch (axisType) {\r\n            case \"xyAxes\":\r\n                axisTypeMethods = _xy_axes.default;\r\n                break;\r\n            case \"polarAxes\":\r\n                axisTypeMethods = polarMethods\r\n        }(0, _extend.extend)(that, axisTypeMethods[drawingType])\r\n    },\r\n    _getSharpParam: function() {\r\n        return true\r\n    },\r\n    _disposeBreaksGroup: _common.noop,\r\n    dispose: function() {\r\n        var that = this;\r\n        [that._axisElementsGroup, that._axisStripGroup, that._axisGroup].forEach(function(g) {\r\n            g.dispose()\r\n        });\r\n        that._strips = that._title = null;\r\n        that._axisStripGroup = that._axisConstantLineGroups = that._axisStripLabelGroup = that._axisBreaksGroup = null;\r\n        that._axisLineGroup = that._axisElementsGroup = that._axisGridGroup = null;\r\n        that._axisGroup = that._axisTitleGroup = null;\r\n        that._axesContainerGroup = that._stripsGroup = that._constantLinesGroup = null;\r\n        that._renderer = that._options = that._textOptions = that._textFontStyles = null;\r\n        that._translator = null;\r\n        that._majorTicks = that._minorTicks = null;\r\n        that._disposeBreaksGroup();\r\n        that._templatesRendered && that._templatesRendered.reject()\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    setPane: function(pane) {\r\n        this.pane = pane;\r\n        this._options.pane = pane\r\n    },\r\n    setTypes: function(type, axisType, typeSelector) {\r\n        this._options.type = type || this._options.type;\r\n        this._options[typeSelector] = axisType || this._options[typeSelector];\r\n        this._updateTranslator()\r\n    },\r\n    resetTypes: function(typeSelector) {\r\n        this._options.type = this._initTypes.type;\r\n        this._options[typeSelector] = this._initTypes[typeSelector]\r\n    },\r\n    getTranslator: function() {\r\n        return this._translator\r\n    },\r\n    updateOptions: function(options) {\r\n        var that = this;\r\n        var labelOpt = options.label;\r\n        validateAxisOptions(options);\r\n        that._options = options;\r\n        options.tick = options.tick || {};\r\n        options.minorTick = options.minorTick || {};\r\n        options.grid = options.grid || {};\r\n        options.minorGrid = options.minorGrid || {};\r\n        options.title = options.title || {};\r\n        options.marker = options.marker || {};\r\n        that._initTypes = {\r\n            type: options.type,\r\n            argumentType: options.argumentType,\r\n            valueType: options.valueType\r\n        };\r\n        that._setTickOffset();\r\n        that._isHorizontal = options.isHorizontal;\r\n        that.pane = options.pane;\r\n        that.name = options.name;\r\n        that.priority = options.priority;\r\n        that._hasLabelFormat = \"\" !== labelOpt.format && (0, _type.isDefined)(labelOpt.format);\r\n        that._textOptions = {\r\n            opacity: labelOpt.opacity,\r\n            align: \"center\",\r\n            \"class\": labelOpt.cssClass\r\n        };\r\n        that._textFontStyles = (0, _utils.patchFontOptions)(labelOpt.font);\r\n        if (options.type === _axes_constants.default.logarithmic) {\r\n            if (options.logarithmBaseError) {\r\n                that._incidentOccurred(\"E2104\");\r\n                delete options.logarithmBaseError\r\n            }\r\n        }\r\n        that._updateTranslator();\r\n        that._createConstantLines();\r\n        that._strips = (options.strips || []).map(function(o) {\r\n            return (0, _strip.default)(that, o)\r\n        });\r\n        that._majorTicks = that._minorTicks = null;\r\n        that._firstDrawing = true\r\n    },\r\n    calculateInterval: function(value, prevValue) {\r\n        var options = this._options;\r\n        if (!options || options.type !== _axes_constants.default.logarithmic) {\r\n            return _abs(value - prevValue)\r\n        }\r\n        var _Range = new _range.Range(this.getTranslator().getBusinessRange()),\r\n            allowNegatives = _Range.allowNegatives,\r\n            linearThreshold = _Range.linearThreshold;\r\n        return _abs((0, _utils.getLogExt)(value, options.logarithmBase, allowNegatives, linearThreshold) - (0, _utils.getLogExt)(prevValue, options.logarithmBase, allowNegatives, linearThreshold))\r\n    },\r\n    getCanvasRange: function() {\r\n        var translator = this._translator;\r\n        return {\r\n            startValue: translator.from(translator.translate(\"canvas_position_start\")),\r\n            endValue: translator.from(translator.translate(\"canvas_position_end\"))\r\n        }\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        return canvas\r\n    },\r\n    updateCanvas: function(canvas, canvasRedesign) {\r\n        if (!canvasRedesign) {\r\n            var positions = this._orthogonalPositions = {\r\n                start: !this._isHorizontal ? canvas.left : canvas.top,\r\n                end: !this._isHorizontal ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n            };\r\n            positions.center = positions.start + (positions.end - positions.start) / 2\r\n        } else {\r\n            this._orthogonalPositions = null\r\n        }\r\n        this._canvas = canvas;\r\n        this._translator.updateCanvas(this._processCanvas(canvas));\r\n        this._initAxisPositions()\r\n    },\r\n    getCanvas: function() {\r\n        return this._canvas\r\n    },\r\n    getAxisShift: function() {\r\n        return this._axisShift || 0\r\n    },\r\n    hideTitle: function() {\r\n        var that = this;\r\n        if (that._options.title.text) {\r\n            that._incidentOccurred(\"W2105\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\r\n            that._axisTitleGroup.clear()\r\n        }\r\n    },\r\n    getTitle: function() {\r\n        return this._title\r\n    },\r\n    hideOuterElements: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        if ((options.label.visible || that._outsideConstantLines.length) && !that._translator.getBusinessRange().isEmpty()) {\r\n            that._incidentOccurred(\"W2106\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\r\n            that._axisElementsGroup.clear();\r\n            callAction(that._outsideConstantLines, \"removeLabel\")\r\n        }\r\n    },\r\n    adjustViewport: function(businessRange) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var isDiscrete = options.type === _axes_constants.default.discrete;\r\n        var categories = that._seriesData && that._seriesData.categories || [];\r\n        var wholeRange = that.adjustRange((0, _utils.getVizRangeObject)(options.wholeRange));\r\n        var visualRange = that.getViewport() || {};\r\n        var result = new _range.Range(businessRange);\r\n        that._addConstantLinesToRange(result, \"minVisible\", \"maxVisible\");\r\n        var minDefined = (0, _type.isDefined)(visualRange.startValue);\r\n        var maxDefined = (0, _type.isDefined)(visualRange.endValue);\r\n        if (!isDiscrete) {\r\n            minDefined = minDefined && (!(0, _type.isDefined)(wholeRange.endValue) || visualRange.startValue < wholeRange.endValue);\r\n            maxDefined = maxDefined && (!(0, _type.isDefined)(wholeRange.startValue) || visualRange.endValue > wholeRange.startValue)\r\n        }\r\n        var minVisible = minDefined ? visualRange.startValue : result.minVisible;\r\n        var maxVisible = maxDefined ? visualRange.endValue : result.maxVisible;\r\n        if (!isDiscrete) {\r\n            var _wholeRange$startValu, _wholeRange$endValue;\r\n            result.min = null !== (_wholeRange$startValu = wholeRange.startValue) && void 0 !== _wholeRange$startValu ? _wholeRange$startValu : result.min;\r\n            result.max = null !== (_wholeRange$endValue = wholeRange.endValue) && void 0 !== _wholeRange$endValue ? _wholeRange$endValue : result.max\r\n        } else {\r\n            var categoriesInfo = (0, _utils.getCategoriesInfo)(categories, wholeRange.startValue, wholeRange.endValue);\r\n            categories = categoriesInfo.categories;\r\n            result.categories = categories\r\n        }\r\n        var adjustedVisualRange = (0, _utils.adjustVisualRange)({\r\n            axisType: options.type,\r\n            dataType: options.dataType,\r\n            base: options.logarithmBase\r\n        }, {\r\n            startValue: minDefined ? visualRange.startValue : void 0,\r\n            endValue: maxDefined ? visualRange.endValue : void 0,\r\n            length: visualRange.length\r\n        }, {\r\n            categories: categories,\r\n            min: wholeRange.startValue,\r\n            max: wholeRange.endValue\r\n        }, {\r\n            categories: categories,\r\n            min: minVisible,\r\n            max: maxVisible\r\n        });\r\n        result.minVisible = adjustedVisualRange.startValue;\r\n        result.maxVisible = adjustedVisualRange.endValue;\r\n        !(0, _type.isDefined)(result.min) && (result.min = result.minVisible);\r\n        !(0, _type.isDefined)(result.max) && (result.max = result.maxVisible);\r\n        result.addRange({});\r\n        return result\r\n    },\r\n    adjustRange: function(range) {\r\n        range = range || {};\r\n        var isDiscrete = this._options.type === _axes_constants.default.discrete;\r\n        var isLogarithmic = this._options.type === _axes_constants.default.logarithmic;\r\n        var disabledNegatives = false === this._options.allowNegatives;\r\n        if (isLogarithmic) {\r\n            range.startValue = disabledNegatives && range.startValue <= 0 ? null : range.startValue;\r\n            range.endValue = disabledNegatives && range.endValue <= 0 ? null : range.endValue\r\n        }\r\n        if (!isDiscrete && (0, _type.isDefined)(range.startValue) && (0, _type.isDefined)(range.endValue) && range.startValue > range.endValue) {\r\n            var tmp = range.endValue;\r\n            range.endValue = range.startValue;\r\n            range.startValue = tmp\r\n        }\r\n        return range\r\n    },\r\n    _getVisualRangeUpdateMode: function(viewport, newRange, oppositeValue) {\r\n        var value = this._options.visualRangeUpdateMode;\r\n        var translator = this._translator;\r\n        var range = this._seriesData;\r\n        if (this.isArgumentAxis) {\r\n            if ([SHIFT, KEEP, RESET].indexOf(value) === -1) {\r\n                if (range.axisType === _axes_constants.default.discrete) {\r\n                    var categories = range.categories;\r\n                    var newCategories = newRange.categories;\r\n                    var visualRange = this.visualRange();\r\n                    if (categories && newCategories && categories.length && newCategories.map(function(c) {\r\n                            return c.valueOf()\r\n                        }).join(\",\").indexOf(categories.map(function(c) {\r\n                            return c.valueOf()\r\n                        }).join(\",\")) !== -1 && (visualRange.startValue.valueOf() !== categories[0].valueOf() || visualRange.endValue.valueOf() !== categories[categories.length - 1].valueOf())) {\r\n                        value = KEEP\r\n                    } else {\r\n                        value = RESET\r\n                    }\r\n                } else {\r\n                    var minPoint = translator.translate(range.min);\r\n                    var minVisiblePoint = translator.translate(viewport.startValue);\r\n                    var maxPoint = translator.translate(range.max);\r\n                    var maxVisiblePoint = translator.translate(viewport.endValue);\r\n                    if (minPoint === minVisiblePoint && maxPoint === maxVisiblePoint) {\r\n                        value = RESET\r\n                    } else {\r\n                        if (minPoint !== minVisiblePoint && maxPoint === maxVisiblePoint) {\r\n                            value = SHIFT\r\n                        } else {\r\n                            value = KEEP\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if ([KEEP, RESET].indexOf(value) === -1) {\r\n                if (oppositeValue === KEEP) {\r\n                    value = KEEP\r\n                } else {\r\n                    value = RESET\r\n                }\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _handleBusinessRangeChanged: function(oppositeVisualRangeUpdateMode, axisReinitialized, newRange) {\r\n        var that = this;\r\n        var visualRange = this.visualRange();\r\n        if (axisReinitialized || that._translator.getBusinessRange().isEmpty()) {\r\n            return\r\n        }\r\n        var visualRangeUpdateMode = that._lastVisualRangeUpdateMode = that._getVisualRangeUpdateMode(visualRange, newRange, oppositeVisualRangeUpdateMode);\r\n        if (!that.isArgumentAxis) {\r\n            var viewport = that.getViewport();\r\n            if (!(0, _type.isDefined)(viewport.startValue) && !(0, _type.isDefined)(viewport.endValue) && !(0, _type.isDefined)(viewport.length)) {\r\n                visualRangeUpdateMode = RESET\r\n            }\r\n        }\r\n        that._prevDataWasEmpty && (visualRangeUpdateMode = KEEP);\r\n        if (visualRangeUpdateMode === KEEP) {\r\n            that._setVisualRange([visualRange.startValue, visualRange.endValue])\r\n        }\r\n        if (visualRangeUpdateMode === RESET) {\r\n            that._setVisualRange([null, null])\r\n        }\r\n        if (visualRangeUpdateMode === SHIFT) {\r\n            that._setVisualRange({\r\n                length: that.getVisualRangeLength()\r\n            })\r\n        }\r\n    },\r\n    getVisualRangeLength: function(range) {\r\n        var currentBusinessRange = range || this._translator.getBusinessRange();\r\n        var type = this._options.type;\r\n        var length;\r\n        if (type === _axes_constants.default.logarithmic) {\r\n            length = (0, _math2.adjust)(this.calculateInterval(currentBusinessRange.maxVisible, currentBusinessRange.minVisible))\r\n        } else {\r\n            if (type === _axes_constants.default.discrete) {\r\n                var categoriesInfo = (0, _utils.getCategoriesInfo)(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\r\n                length = categoriesInfo.categories.length\r\n            } else {\r\n                length = currentBusinessRange.maxVisible - currentBusinessRange.minVisible\r\n            }\r\n        }\r\n        return length\r\n    },\r\n    getVisualRangeCenter: function(range) {\r\n        var businessRange = this._translator.getBusinessRange();\r\n        var currentBusinessRange = range || businessRange;\r\n        var _this$_options = this._options,\r\n            type = _this$_options.type,\r\n            logarithmBase = _this$_options.logarithmBase;\r\n        var center;\r\n        if (!(0, _type.isDefined)(currentBusinessRange.minVisible) || !(0, _type.isDefined)(currentBusinessRange.maxVisible)) {\r\n            return\r\n        }\r\n        if (type === _axes_constants.default.logarithmic) {\r\n            var allowNegatives = currentBusinessRange.allowNegatives,\r\n                linearThreshold = currentBusinessRange.linearThreshold,\r\n                minVisible = currentBusinessRange.minVisible,\r\n                maxVisible = currentBusinessRange.maxVisible;\r\n            center = (0, _utils.raiseToExt)((0, _math2.adjust)((0, _utils.getLogExt)(maxVisible, logarithmBase, allowNegatives, linearThreshold) + (0, _utils.getLogExt)(minVisible, logarithmBase, allowNegatives, linearThreshold)) / 2, logarithmBase, allowNegatives, linearThreshold)\r\n        } else {\r\n            if (type === _axes_constants.default.discrete) {\r\n                var categoriesInfo = (0, _utils.getCategoriesInfo)(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\r\n                var index = Math.ceil(categoriesInfo.categories.length / 2) - 1;\r\n                center = businessRange.categories.indexOf(categoriesInfo.categories[index])\r\n            } else {\r\n                center = (currentBusinessRange.maxVisible.valueOf() + currentBusinessRange.minVisible.valueOf()) / 2\r\n            }\r\n        }\r\n        return center\r\n    },\r\n    setBusinessRange: function(range, axisReinitialized, oppositeVisualRangeUpdateMode, argCategories) {\r\n        var _that$_seriesData$min, _that$_seriesData$max;\r\n        var that = this;\r\n        var options = that._options;\r\n        var isDiscrete = options.type === _axes_constants.default.discrete;\r\n        that._handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, range);\r\n        that._seriesData = new _range.Range(range);\r\n        var dataIsEmpty = that._seriesData.isEmpty();\r\n        that._prevDataWasEmpty = dataIsEmpty;\r\n        that._seriesData.addRange({\r\n            categories: options.categories,\r\n            dataType: options.dataType,\r\n            axisType: options.type,\r\n            base: options.logarithmBase,\r\n            invert: options.inverted\r\n        });\r\n        if (options.type === _axes_constants.default.logarithmic) {\r\n            that._seriesData.addRange({\r\n                allowNegatives: void 0 !== options.allowNegatives ? options.allowNegatives : range.min <= 0\r\n            });\r\n            if (!isNaN(options.linearThreshold)) {\r\n                that._seriesData.linearThreshold = options.linearThreshold\r\n            }\r\n        }\r\n        if (!isDiscrete) {\r\n            if (!(0, _type.isDefined)(that._seriesData.min) && !(0, _type.isDefined)(that._seriesData.max)) {\r\n                var visualRange = that.getViewport();\r\n                visualRange && that._seriesData.addRange({\r\n                    min: visualRange.startValue,\r\n                    max: visualRange.endValue\r\n                })\r\n            }\r\n            var synchronizedValue = options.synchronizedValue;\r\n            if ((0, _type.isDefined)(synchronizedValue)) {\r\n                that._seriesData.addRange({\r\n                    min: synchronizedValue,\r\n                    max: synchronizedValue\r\n                })\r\n            }\r\n        }\r\n        that._seriesData.minVisible = null !== (_that$_seriesData$min = that._seriesData.minVisible) && void 0 !== _that$_seriesData$min ? _that$_seriesData$min : that._seriesData.min;\r\n        that._seriesData.maxVisible = null !== (_that$_seriesData$max = that._seriesData.maxVisible) && void 0 !== _that$_seriesData$max ? _that$_seriesData$max : that._seriesData.max;\r\n        if (!that.isArgumentAxis && options.showZero) {\r\n            that._seriesData.correctValueZeroLevel()\r\n        }\r\n        that._seriesData.sortCategories(that.getCategoriesSorter(argCategories));\r\n        that._seriesData.userBreaks = that._getScaleBreaks(options, that._seriesData, that._series, that.isArgumentAxis);\r\n        that._translator.updateBusinessRange(that._getViewportRange())\r\n    },\r\n    _addConstantLinesToRange: function(dataRange, minValueField, maxValueField) {\r\n        this._outsideConstantLines.concat(this._insideConstantLines || []).forEach(function(cl) {\r\n            if (cl.options.extendAxis) {\r\n                var _dataRange$addRange;\r\n                var value = cl.getParsedValue();\r\n                dataRange.addRange((_dataRange$addRange = {}, _defineProperty(_dataRange$addRange, minValueField, value), _defineProperty(_dataRange$addRange, maxValueField, value), _dataRange$addRange))\r\n            }\r\n        })\r\n    },\r\n    setGroupSeries: function(series) {\r\n        this._series = series\r\n    },\r\n    getLabelsPosition: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var position = options.position;\r\n        var labelShift = options.label.indentFromAxis + (that._axisShift || 0) + that._constantLabelOffset;\r\n        var axisPosition = that._axisPosition;\r\n        return position === TOP || position === LEFT ? axisPosition - labelShift : axisPosition + labelShift\r\n    },\r\n    getFormattedValue: function(value, options, point) {\r\n        var labelOptions = this._options.label;\r\n        return (0, _type.isDefined)(value) ? this.formatLabel(value, (0, _extend.extend)(true, {}, labelOptions, options), void 0, point) : null\r\n    },\r\n    _getBoundaryTicks: function(majors, viewPort) {\r\n        var that = this;\r\n        var length = majors.length;\r\n        var options = that._options;\r\n        var customBounds = options.customBoundTicks;\r\n        var min = viewPort.minVisible;\r\n        var max = viewPort.maxVisible;\r\n        var addMinMax = options.showCustomBoundaryTicks ? that._boundaryTicksVisibility : {};\r\n        var boundaryTicks = [];\r\n        if (options.type === _axes_constants.default.discrete) {\r\n            if (that._tickOffset && 0 !== majors.length) {\r\n                boundaryTicks = [majors[0], majors[majors.length - 1]]\r\n            }\r\n        } else {\r\n            if (customBounds) {\r\n                if (addMinMax.min && (0, _type.isDefined)(customBounds[0])) {\r\n                    boundaryTicks.push(customBounds[0])\r\n                }\r\n                if (addMinMax.max && (0, _type.isDefined)(customBounds[1])) {\r\n                    boundaryTicks.push(customBounds[1])\r\n                }\r\n            } else {\r\n                if (addMinMax.min && (0 === length || majors[0] > min)) {\r\n                    boundaryTicks.push(min)\r\n                }\r\n                if (addMinMax.max && (0 === length || majors[length - 1] < max)) {\r\n                    boundaryTicks.push(max)\r\n                }\r\n            }\r\n        }\r\n        return boundaryTicks\r\n    },\r\n    setPercentLabelFormat: function() {\r\n        if (!this._hasLabelFormat) {\r\n            this._options.label.format = \"percent\"\r\n        }\r\n    },\r\n    resetAutoLabelFormat: function() {\r\n        if (!this._hasLabelFormat) {\r\n            delete this._options.label.format\r\n        }\r\n    },\r\n    getMultipleAxesSpacing: function() {\r\n        return this._options.multipleAxesSpacing || 0\r\n    },\r\n    getTicksValues: function() {\r\n        return {\r\n            majorTicksValues: convertTicksToValues(this._majorTicks),\r\n            minorTicksValues: convertTicksToValues(this._minorTicks)\r\n        }\r\n    },\r\n    estimateTickInterval: function(canvas) {\r\n        var that = this;\r\n        that.updateCanvas(canvas);\r\n        return that._tickInterval !== that._getTicks(that._getViewportRange(), _common.noop, true).tickInterval\r\n    },\r\n    setTicks: function(ticks) {\r\n        var majors = ticks.majorTicks || [];\r\n        this._majorTicks = majors.map(createMajorTick(this, this._renderer, this._getSkippedCategory(majors)));\r\n        this._minorTicks = (ticks.minorTicks || []).map(createMinorTick(this, this._renderer));\r\n        this._isSynchronized = true\r\n    },\r\n    _adjustDivisionFactor: function(val) {\r\n        return val\r\n    },\r\n    _getTicks: function(viewPort, incidentOccurred, skipTickGeneration) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var customTicks = options.customTicks;\r\n        var customMinorTicks = options.customMinorTicks;\r\n        return getTickGenerator(options, incidentOccurred || that._incidentOccurred, skipTickGeneration, that._translator.getBusinessRange().isEmpty(), that._adjustDivisionFactor.bind(that), viewPort)({\r\n            min: viewPort.minVisible,\r\n            max: viewPort.maxVisible,\r\n            categories: viewPort.categories,\r\n            isSpacedMargin: viewPort.isSpacedMargin\r\n        }, that._getScreenDelta(), options.tickInterval, \"ignore\" === options.label.overlappingBehavior || options.forceUserTickInterval, {\r\n            majors: customTicks,\r\n            minors: customMinorTicks\r\n        }, options.minorTickInterval, options.minorTickCount, that._initialBreaks)\r\n    },\r\n    _createTicksAndLabelFormat: function(range, incidentOccurred) {\r\n        var options = this._options;\r\n        var ticks = this._getTicks(range, incidentOccurred, false);\r\n        if (!range.isEmpty() && options.type === _axes_constants.default.discrete && \"datetime\" === options.dataType && !this._hasLabelFormat && ticks.ticks.length) {\r\n            options.label.format = _format_helper.default.getDateFormatByTicks(ticks.ticks)\r\n        }\r\n        return ticks\r\n    },\r\n    getAggregationInfo: function(useAllAggregatedPoints, range) {\r\n        var _visualRange$startVal, _visualRange$endValue, _that$_seriesData;\r\n        var that = this;\r\n        var options = that._options;\r\n        var marginOptions = that._marginOptions;\r\n        var businessRange = new _range.Range(that.getTranslator().getBusinessRange()).addRange(range);\r\n        var visualRange = that.getViewport();\r\n        var minVisible = null !== (_visualRange$startVal = null === visualRange || void 0 === visualRange ? void 0 : visualRange.startValue) && void 0 !== _visualRange$startVal ? _visualRange$startVal : businessRange.minVisible;\r\n        var maxVisible = null !== (_visualRange$endValue = null === visualRange || void 0 === visualRange ? void 0 : visualRange.endValue) && void 0 !== _visualRange$endValue ? _visualRange$endValue : businessRange.maxVisible;\r\n        var ticks = [];\r\n        if (options.type === _axes_constants.default.discrete && options.aggregateByCategory) {\r\n            return {\r\n                aggregateByCategory: true\r\n            }\r\n        }\r\n        var aggregationInterval = options.aggregationInterval;\r\n        var aggregationGroupWidth = options.aggregationGroupWidth;\r\n        if (!aggregationGroupWidth && marginOptions) {\r\n            if (marginOptions.checkInterval) {\r\n                aggregationGroupWidth = options.axisDivisionFactor\r\n            }\r\n            if (marginOptions.sizePointNormalState) {\r\n                aggregationGroupWidth = Math.min(marginOptions.sizePointNormalState, options.axisDivisionFactor)\r\n            }\r\n        }\r\n        var minInterval = !options.aggregationGroupWidth && !aggregationInterval && range.interval;\r\n        var generateTicks = configureGenerator(options, aggregationGroupWidth, businessRange, that._getScreenDelta(), minInterval);\r\n        var tickInterval = generateTicks(aggregationInterval, true, minVisible, maxVisible, null === (_that$_seriesData = that._seriesData) || void 0 === _that$_seriesData ? void 0 : _that$_seriesData.breaks).tickInterval;\r\n        if (options.type !== _axes_constants.default.discrete) {\r\n            var min = useAllAggregatedPoints ? businessRange.min : minVisible;\r\n            var max = useAllAggregatedPoints ? businessRange.max : maxVisible;\r\n            if ((0, _type.isDefined)(min) && (0, _type.isDefined)(max)) {\r\n                var add = (0, _utils.getAddFunction)({\r\n                    base: options.logarithmBase,\r\n                    axisType: options.type,\r\n                    dataType: options.dataType\r\n                }, false);\r\n                var start = min;\r\n                var end = max;\r\n                if (!useAllAggregatedPoints) {\r\n                    var maxMinDistance = Math.max(that.calculateInterval(max, min), \"datetime\" === options.dataType ? _date.default.dateToMilliseconds(tickInterval) : tickInterval);\r\n                    start = add(min, maxMinDistance, -1);\r\n                    end = add(max, maxMinDistance)\r\n                }\r\n                start = start < businessRange.min ? businessRange.min : start;\r\n                end = end > businessRange.max ? businessRange.max : end;\r\n                var breaks = that._getScaleBreaks(options, {\r\n                    minVisible: start,\r\n                    maxVisible: end\r\n                }, that._series, that.isArgumentAxis);\r\n                var filteredBreaks = that._filterBreaks(breaks, {\r\n                    minVisible: start,\r\n                    maxVisible: end\r\n                }, options.breakStyle);\r\n                ticks = generateTicks(tickInterval, false, start, end, filteredBreaks).ticks\r\n            }\r\n        }\r\n        that._aggregationInterval = tickInterval;\r\n        return {\r\n            interval: tickInterval,\r\n            ticks: ticks\r\n        }\r\n    },\r\n    createTicks: function(canvas) {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var options = that._options;\r\n        if (!canvas) {\r\n            return\r\n        }\r\n        that._isSynchronized = false;\r\n        that.updateCanvas(canvas);\r\n        var range = that._getViewportRange();\r\n        that._initialBreaks = range.breaks = this._seriesData.breaks = that._filterBreaks(this._seriesData.userBreaks, range, options.breakStyle);\r\n        that._estimatedTickInterval = that._getTicks(that.adjustViewport(this._seriesData), _common.noop, true).tickInterval;\r\n        var margins = this._calculateValueMargins();\r\n        range.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            isSpacedMargin: margins.isSpacedMargin\r\n        });\r\n        var ticks = that._createTicksAndLabelFormat(range);\r\n        var boundaryTicks = that._getBoundaryTicks(ticks.ticks, that._getViewportRange());\r\n        if (options.showCustomBoundaryTicks && boundaryTicks.length) {\r\n            that._boundaryTicks = [boundaryTicks[0]].map(createBoundaryTick(that, renderer, true));\r\n            if (boundaryTicks.length > 1) {\r\n                that._boundaryTicks = that._boundaryTicks.concat([boundaryTicks[1]].map(createBoundaryTick(that, renderer, false)))\r\n            }\r\n        } else {\r\n            that._boundaryTicks = []\r\n        }\r\n        var minors = (ticks.minorTicks || []).filter(function(minor) {\r\n            return !boundaryTicks.some(function(boundary) {\r\n                return (0, _utils.valueOf)(boundary) === (0, _utils.valueOf)(minor)\r\n            })\r\n        });\r\n        that._tickInterval = ticks.tickInterval;\r\n        that._minorTickInterval = ticks.minorTickInterval;\r\n        var oldMajorTicks = that._majorTicks || [];\r\n        var majorTicksByValues = oldMajorTicks.reduce(function(r, t) {\r\n            r[t.value.valueOf()] = t;\r\n            return r\r\n        }, {});\r\n        var sameType = (0, _type.type)(ticks.ticks[0]) === (0, _type.type)(oldMajorTicks[0] && oldMajorTicks[0].value);\r\n        var skippedCategory = that._getSkippedCategory(ticks.ticks);\r\n        var majorTicks = ticks.ticks.map(function(v) {\r\n            var tick = majorTicksByValues[v.valueOf()];\r\n            if (tick && sameType) {\r\n                delete majorTicksByValues[v.valueOf()];\r\n                tick.setSkippedCategory(skippedCategory);\r\n                return tick\r\n            } else {\r\n                return createMajorTick(that, renderer, skippedCategory)(v)\r\n            }\r\n        });\r\n        that._majorTicks = majorTicks;\r\n        var oldMinorTicks = that._minorTicks || [];\r\n        that._minorTicks = minors.map(function(v, i) {\r\n            var minorTick = oldMinorTicks[i];\r\n            if (minorTick) {\r\n                minorTick.updateValue(v);\r\n                return minorTick\r\n            }\r\n            return createMinorTick(that, renderer)(v)\r\n        });\r\n        that._ticksToRemove = Object.keys(majorTicksByValues).map(function(k) {\r\n            return majorTicksByValues[k]\r\n        }).concat(oldMinorTicks.slice(that._minorTicks.length, oldMinorTicks.length));\r\n        that._ticksToRemove.forEach(function(t) {\r\n            var _t$label;\r\n            return null === (_t$label = t.label) || void 0 === _t$label ? void 0 : _t$label.removeTitle()\r\n        });\r\n        if (ticks.breaks) {\r\n            that._seriesData.breaks = ticks.breaks\r\n        }\r\n        that._reinitTranslator(that._getViewportRange())\r\n    },\r\n    _reinitTranslator: function(range) {\r\n        var that = this;\r\n        var translator = that._translator;\r\n        if (that._isSynchronized) {\r\n            return\r\n        }\r\n        translator.updateBusinessRange(range)\r\n    },\r\n    _getViewportRange: function() {\r\n        return this.adjustViewport(this._seriesData)\r\n    },\r\n    setMarginOptions: function(options) {\r\n        this._marginOptions = options\r\n    },\r\n    getMarginOptions: function() {\r\n        var _this$_marginOptions;\r\n        return null !== (_this$_marginOptions = this._marginOptions) && void 0 !== _this$_marginOptions ? _this$_marginOptions : {}\r\n    },\r\n    _calculateRangeInterval: function(interval) {\r\n        var isDateTime = \"datetime\" === this._options.dataType;\r\n        var minArgs = [];\r\n        var addToArgs = function(value) {\r\n            (0, _type.isDefined)(value) && minArgs.push(isDateTime ? _date.default.dateToMilliseconds(value) : value)\r\n        };\r\n        addToArgs(this._tickInterval);\r\n        addToArgs(this._estimatedTickInterval);\r\n        (0, _type.isDefined)(interval) && minArgs.push(interval);\r\n        addToArgs(this._aggregationInterval);\r\n        return this._calculateWorkWeekInterval(_min.apply(this, minArgs))\r\n    },\r\n    _calculateWorkWeekInterval: function(businessInterval) {\r\n        var options = this._options;\r\n        if (\"datetime\" === options.dataType && options.workdaysOnly && businessInterval) {\r\n            var workWeek = options.workWeek.length * dateIntervals.day;\r\n            var weekend = dateIntervals.week - workWeek;\r\n            if (workWeek !== businessInterval && weekend < businessInterval) {\r\n                var weekendsCount = Math.ceil(businessInterval / dateIntervals.week);\r\n                businessInterval = weekend >= businessInterval ? dateIntervals.day : businessInterval - weekend * weekendsCount\r\n            } else {\r\n                if (weekend >= businessInterval && businessInterval > dateIntervals.day) {\r\n                    businessInterval = dateIntervals.day\r\n                }\r\n            }\r\n        }\r\n        return businessInterval\r\n    },\r\n    _getConvertIntervalCoefficient: function(intervalInPx, screenDelta) {\r\n        var ratioOfCanvasRange = this._translator.ratioOfCanvasRange();\r\n        return ratioOfCanvasRange / (ratioOfCanvasRange * screenDelta / (intervalInPx + screenDelta))\r\n    },\r\n    _calculateValueMargins: function(ticks) {\r\n        this._resetMargins();\r\n        var that = this;\r\n        var margins = that.getMarginOptions();\r\n        var marginSize = (margins.size || 0) / 2;\r\n        var options = that._options;\r\n        var dataRange = that._getViewportRange();\r\n        var viewPort = that.getViewport();\r\n        var screenDelta = that._getScreenDelta();\r\n        var isDiscrete = (options.type || \"\").indexOf(_axes_constants.default.discrete) !== -1;\r\n        var valueMarginsEnabled = options.valueMarginsEnabled && !isDiscrete && !that.customPositionIsBoundaryOrthogonalAxis();\r\n        var translator = that._translator;\r\n        var minValueMargin = options.minValueMargin;\r\n        var maxValueMargin = options.maxValueMargin;\r\n        var minPadding = 0;\r\n        var maxPadding = 0;\r\n        var interval = 0;\r\n        var rangeInterval;\r\n        if (dataRange.stubData || !screenDelta) {\r\n            return {\r\n                startPadding: 0,\r\n                endPadding: 0\r\n            }\r\n        }\r\n        if (that.isArgumentAxis && margins.checkInterval) {\r\n            rangeInterval = that._calculateRangeInterval(dataRange.interval);\r\n            var pxInterval = translator.getInterval(rangeInterval);\r\n            if (isFinite(pxInterval)) {\r\n                interval = Math.ceil(pxInterval / (2 * that._getConvertIntervalCoefficient(pxInterval, screenDelta)))\r\n            } else {\r\n                rangeInterval = 0\r\n            }\r\n        }\r\n        var minPercentPadding;\r\n        var maxPercentPadding;\r\n        var maxPaddingValue = screenDelta * MAX_MARGIN_VALUE / 2;\r\n        if (valueMarginsEnabled) {\r\n            if ((0, _type.isDefined)(minValueMargin)) {\r\n                minPercentPadding = isFinite(minValueMargin) ? minValueMargin : 0\r\n            } else {\r\n                if (!that.isArgumentAxis && margins.checkInterval && (0, _utils.valueOf)(dataRange.minVisible) > 0 && (0, _utils.valueOf)(dataRange.minVisible) === (0, _utils.valueOf)(dataRange.min)) {\r\n                    minPadding = MIN_BAR_MARGIN\r\n                } else {\r\n                    minPadding = Math.max(marginSize, interval);\r\n                    minPadding = Math.min(maxPaddingValue, minPadding)\r\n                }\r\n            }\r\n            if ((0, _type.isDefined)(maxValueMargin)) {\r\n                maxPercentPadding = isFinite(maxValueMargin) ? maxValueMargin : 0\r\n            } else {\r\n                if (!that.isArgumentAxis && margins.checkInterval && (0, _utils.valueOf)(dataRange.maxVisible) < 0 && (0, _utils.valueOf)(dataRange.maxVisible) === (0, _utils.valueOf)(dataRange.max)) {\r\n                    maxPadding = MIN_BAR_MARGIN\r\n                } else {\r\n                    maxPadding = Math.max(marginSize, interval);\r\n                    maxPadding = Math.min(maxPaddingValue, maxPadding)\r\n                }\r\n            }\r\n        }\r\n        var percentStick = margins.percentStick && !this.isArgumentAxis;\r\n        if (percentStick) {\r\n            if (1 === _abs(dataRange.max)) {\r\n                maxPadding = 0\r\n            }\r\n            if (1 === _abs(dataRange.min)) {\r\n                minPadding = 0\r\n            }\r\n        }\r\n        var canvasStartEnd = that._getCanvasStartEnd();\r\n        var commonMargin = 1 + (minPercentPadding || 0) + (maxPercentPadding || 0);\r\n        var screenDeltaWithMargins = (screenDelta - minPadding - maxPadding) / commonMargin || screenDelta;\r\n        if (void 0 !== minPercentPadding || void 0 !== maxPercentPadding) {\r\n            if (void 0 !== minPercentPadding) {\r\n                minPadding = screenDeltaWithMargins * minPercentPadding\r\n            }\r\n            if (void 0 !== maxPercentPadding) {\r\n                maxPadding = screenDeltaWithMargins * maxPercentPadding\r\n            }\r\n        }\r\n        var minValue;\r\n        var maxValue;\r\n        if (options.type !== _axes_constants.default.discrete && ticks && ticks.length > 1 && !options.skipViewportExtending && !viewPort.action && false !== options.endOnTick) {\r\n            var length = ticks.length;\r\n            var firstTickPosition = translator.translate(ticks[0].value);\r\n            var lastTickPosition = translator.translate(ticks[length - 1].value);\r\n            var invertMultiplier = firstTickPosition > lastTickPosition ? -1 : 1;\r\n            var minTickPadding = _max(invertMultiplier * (canvasStartEnd.start - firstTickPosition), 0);\r\n            var maxTickPadding = _max(invertMultiplier * (lastTickPosition - canvasStartEnd.end), 0);\r\n            if (minTickPadding > minPadding || maxTickPadding > maxPadding) {\r\n                var commonPadding = maxTickPadding + minTickPadding;\r\n                var coeff = that._getConvertIntervalCoefficient(commonPadding, screenDelta);\r\n                if (minTickPadding >= minPadding) {\r\n                    minValue = ticks[0].value\r\n                }\r\n                if (maxTickPadding >= maxPadding) {\r\n                    maxValue = ticks[length - 1].value\r\n                }\r\n                minPadding = _max(minTickPadding, minPadding) / coeff;\r\n                maxPadding = _max(maxTickPadding, maxPadding) / coeff\r\n            }\r\n        }\r\n        minPercentPadding = void 0 === minPercentPadding ? minPadding / screenDeltaWithMargins : minPercentPadding;\r\n        maxPercentPadding = void 0 === maxPercentPadding ? maxPadding / screenDeltaWithMargins : maxPercentPadding;\r\n        if (!isDiscrete) {\r\n            if (this._translator.isInverted()) {\r\n                var _minValue, _maxValue;\r\n                minValue = null !== (_minValue = minValue) && void 0 !== _minValue ? _minValue : translator.from(canvasStartEnd.start + screenDelta * minPercentPadding, -1);\r\n                maxValue = null !== (_maxValue = maxValue) && void 0 !== _maxValue ? _maxValue : translator.from(canvasStartEnd.end - screenDelta * maxPercentPadding, 1)\r\n            } else {\r\n                var _minValue2, _maxValue2;\r\n                minValue = null !== (_minValue2 = minValue) && void 0 !== _minValue2 ? _minValue2 : translator.from(canvasStartEnd.start - screenDelta * minPercentPadding, -1);\r\n                maxValue = null !== (_maxValue2 = maxValue) && void 0 !== _maxValue2 ? _maxValue2 : translator.from(canvasStartEnd.end + screenDelta * maxPercentPadding, 1)\r\n            }\r\n        }\r\n        var _that$getCorrectedVal = that.getCorrectedValuesToZero(minValue, maxValue),\r\n            correctedMin = _that$getCorrectedVal.correctedMin,\r\n            correctedMax = _that$getCorrectedVal.correctedMax,\r\n            start = _that$getCorrectedVal.start,\r\n            end = _that$getCorrectedVal.end;\r\n        minPadding = null !== start && void 0 !== start ? start : minPadding;\r\n        maxPadding = null !== end && void 0 !== end ? end : maxPadding;\r\n        return {\r\n            startPadding: translator.isInverted() ? maxPadding : minPadding,\r\n            endPadding: translator.isInverted() ? minPadding : maxPadding,\r\n            minValue: null !== correctedMin && void 0 !== correctedMin ? correctedMin : minValue,\r\n            maxValue: null !== correctedMax && void 0 !== correctedMax ? correctedMax : maxValue,\r\n            interval: rangeInterval,\r\n            isSpacedMargin: minPadding === maxPadding && 0 !== minPadding\r\n        }\r\n    },\r\n    getCorrectedValuesToZero: function(minValue, maxValue) {\r\n        var that = this;\r\n        var translator = that._translator;\r\n        var canvasStartEnd = that._getCanvasStartEnd();\r\n        var dataRange = that._getViewportRange();\r\n        var screenDelta = that._getScreenDelta();\r\n        var options = that._options;\r\n        var start;\r\n        var end;\r\n        var correctedMin;\r\n        var correctedMax;\r\n\r\n        function correctZeroLevel(minPoint, maxPoint) {\r\n            var minExpectedPadding = _abs(canvasStartEnd.start - minPoint);\r\n            var maxExpectedPadding = _abs(canvasStartEnd.end - maxPoint);\r\n            var coeff = that._getConvertIntervalCoefficient(minExpectedPadding + maxExpectedPadding, screenDelta);\r\n            start = minExpectedPadding / coeff;\r\n            end = maxExpectedPadding / coeff\r\n        }\r\n        if (!that.isArgumentAxis && \"datetime\" !== options.dataType) {\r\n            if (minValue * dataRange.min <= 0 && minValue * dataRange.minVisible <= 0) {\r\n                correctZeroLevel(translator.translate(0), translator.translate(maxValue));\r\n                correctedMin = 0\r\n            }\r\n            if (maxValue * dataRange.max <= 0 && maxValue * dataRange.maxVisible <= 0) {\r\n                correctZeroLevel(translator.translate(minValue), translator.translate(0));\r\n                correctedMax = 0\r\n            }\r\n        }\r\n        return {\r\n            start: start,\r\n            end: end,\r\n            correctedMin: correctedMin,\r\n            correctedMax: correctedMax\r\n        }\r\n    },\r\n    applyMargins: function() {\r\n        if (this._isSynchronized) {\r\n            return\r\n        }\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var canvas = (0, _extend.extend)({}, this._canvas, {\r\n            startPadding: margins.startPadding,\r\n            endPadding: margins.endPadding\r\n        });\r\n        this._translator.updateCanvas(this._processCanvas(canvas));\r\n        if (isFinite(margins.interval)) {\r\n            var br = this._translator.getBusinessRange();\r\n            br.addRange({\r\n                interval: margins.interval\r\n            });\r\n            this._translator.updateBusinessRange(br)\r\n        }\r\n    },\r\n    _resetMargins: function() {\r\n        this._reinitTranslator(this._getViewportRange());\r\n        if (this._canvas) {\r\n            this._translator.updateCanvas(this._processCanvas(this._canvas))\r\n        }\r\n    },\r\n    _createConstantLines: function() {\r\n        var _this2 = this;\r\n        var constantLines = (this._options.constantLines || []).map(function(o) {\r\n            return (0, _constant_line.default)(_this2, o)\r\n        });\r\n        this._outsideConstantLines = constantLines.filter(function(l) {\r\n            return \"outside\" === l.labelPosition\r\n        });\r\n        this._insideConstantLines = constantLines.filter(function(l) {\r\n            return \"inside\" === l.labelPosition\r\n        })\r\n    },\r\n    draw: function(canvas, borderOptions) {\r\n        var that = this;\r\n        var options = this._options;\r\n        that.borderOptions = borderOptions || {\r\n            visible: false\r\n        };\r\n        that._resetMargins();\r\n        that.createTicks(canvas);\r\n        that.applyMargins();\r\n        that._clearAxisGroups();\r\n        initTickCoords(that._majorTicks);\r\n        initTickCoords(that._minorTicks);\r\n        initTickCoords(that._boundaryTicks);\r\n        that._axisGroup.append(that._axesContainerGroup);\r\n        that._drawAxis();\r\n        that._drawTitle();\r\n        drawTickMarks(that._majorTicks, options.tick);\r\n        drawTickMarks(that._minorTicks, options.minorTick);\r\n        drawTickMarks(that._boundaryTicks, options.tick);\r\n        var drawGridLine = that._getGridLineDrawer();\r\n        drawGrids(that._majorTicks, drawGridLine);\r\n        drawGrids(that._minorTicks, drawGridLine);\r\n        callAction(that._majorTicks, \"drawLabel\", that._getViewportRange(), that._getTemplate());\r\n        that._templatesRendered && that._templatesRendered.reject();\r\n        that._templatesRendered = new _deferred.Deferred;\r\n        _deferred.when.apply(this, that._majorTicks.map(function(tick) {\r\n            return tick.getTemplateDeferred()\r\n        })).done(function() {\r\n            that._templatesRendered.resolve()\r\n        });\r\n        that._majorTicks.forEach(function(tick) {\r\n            tick.labelRotationAngle = 0;\r\n            tick.labelAlignment = void 0;\r\n            tick.labelOffset = 0\r\n        });\r\n        callAction(that._outsideConstantLines.concat(that._insideConstantLines), \"draw\");\r\n        callAction(that._strips, \"draw\");\r\n        that._dateMarkers = that._drawDateMarkers() || [];\r\n        that._labelAxesGroup && that._axisStripLabelGroup.append(that._labelAxesGroup);\r\n        that._gridContainerGroup && that._axisGridGroup.append(that._gridContainerGroup);\r\n        that._stripsGroup && that._axisStripGroup.append(that._stripsGroup);\r\n        if (that._constantLinesGroup) {\r\n            that._axisConstantLineGroups.above.inside.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.above.outside1.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.above.outside2.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.under.inside.append(that._constantLinesGroup.under);\r\n            that._axisConstantLineGroups.under.outside1.append(that._constantLinesGroup.under);\r\n            that._axisConstantLineGroups.under.outside2.append(that._constantLinesGroup.under)\r\n        }\r\n        that._measureTitle();\r\n        measureLabels(that._majorTicks);\r\n        !options.label.template && that._applyWordWrap();\r\n        measureLabels(that._outsideConstantLines);\r\n        measureLabels(that._insideConstantLines);\r\n        measureLabels(that._strips);\r\n        measureLabels(that._dateMarkers);\r\n        that._adjustConstantLineLabels(that._insideConstantLines);\r\n        that._adjustStripLabels();\r\n        var offset = that._constantLabelOffset = that._adjustConstantLineLabels(that._outsideConstantLines);\r\n        if (!that._translator.getBusinessRange().isEmpty()) {\r\n            that._setLabelsPlacement();\r\n            offset = that._adjustLabels(offset)\r\n        }\r\n        offset = that._adjustDateMarkers(offset);\r\n        that._adjustTitle(offset)\r\n    },\r\n    getTemplatesDef: function() {\r\n        return this._templatesRendered\r\n    },\r\n    setRenderedState: function(state) {\r\n        this._drawn = state\r\n    },\r\n    isRendered: function() {\r\n        return this._drawn\r\n    },\r\n    _applyWordWrap: function() {\r\n        var that = this;\r\n        var convertedTickInterval;\r\n        var textWidth;\r\n        var textHeight;\r\n        var options = this._options;\r\n        var tickInterval = that._tickInterval;\r\n        if ((0, _type.isDefined)(tickInterval)) {\r\n            convertedTickInterval = that.getTranslator().getInterval(\"datetime\" === options.dataType ? _date.default.dateToMilliseconds(tickInterval) : tickInterval)\r\n        }\r\n        var displayMode = that._validateDisplayMode(options.label.displayMode);\r\n        var overlappingMode = that._validateOverlappingMode(options.label.overlappingBehavior, displayMode);\r\n        var wordWrapMode = options.label.wordWrap || \"none\";\r\n        var overflowMode = options.label.textOverflow || \"none\";\r\n        if ((\"none\" !== wordWrapMode || \"none\" !== overflowMode) && displayMode !== ROTATE && overlappingMode !== ROTATE && \"auto\" !== overlappingMode) {\r\n            var usefulSpace = (0, _type.isDefined)(options.placeholderSize) ? options.placeholderSize - options.label.indentFromAxis : void 0;\r\n            if (that._isHorizontal) {\r\n                textWidth = convertedTickInterval;\r\n                textHeight = usefulSpace\r\n            } else {\r\n                textWidth = usefulSpace;\r\n                textHeight = convertedTickInterval\r\n            }\r\n            var correctByWidth = false;\r\n            var correctByHeight = false;\r\n            if (textWidth) {\r\n                if (that._majorTicks.some(function(tick) {\r\n                        return tick.labelBBox.width > textWidth\r\n                    })) {\r\n                    correctByWidth = true\r\n                }\r\n            }\r\n            if (textHeight) {\r\n                if (that._majorTicks.some(function(tick) {\r\n                        return tick.labelBBox.height > textHeight\r\n                    })) {\r\n                    correctByHeight = true\r\n                }\r\n            }\r\n            if (correctByWidth || correctByHeight) {\r\n                that._majorTicks.forEach(function(tick) {\r\n                    tick.label && tick.label.setMaxSize(textWidth, textHeight, options.label)\r\n                });\r\n                measureLabels(that._majorTicks)\r\n            }\r\n        }\r\n    },\r\n    _measureTitle: _common.noop,\r\n    animate: function() {\r\n        callAction(this._majorTicks, \"animateLabels\")\r\n    },\r\n    updateSize: function(canvas, animate) {\r\n        var updateTitle = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;\r\n        var that = this;\r\n        that.updateCanvas(canvas);\r\n        if (updateTitle) {\r\n            that._checkTitleOverflow();\r\n            that._measureTitle();\r\n            that._updateTitleCoords()\r\n        }\r\n        that._reinitTranslator(that._getViewportRange());\r\n        that.applyMargins();\r\n        var animationEnabled = !that._firstDrawing && animate;\r\n        var options = this._options;\r\n        initTickCoords(that._majorTicks);\r\n        initTickCoords(that._minorTicks);\r\n        initTickCoords(that._boundaryTicks);\r\n        if (this._resetApplyingAnimation && !this._firstDrawing) {\r\n            that._resetStartCoordinates()\r\n        }\r\n        cleanUpInvalidTicks(that._majorTicks);\r\n        cleanUpInvalidTicks(that._minorTicks);\r\n        cleanUpInvalidTicks(that._boundaryTicks);\r\n        if (this._axisElement) {\r\n            that._updateAxisElementPosition()\r\n        }\r\n        updateTicksPosition(that._majorTicks, options.tick, animationEnabled);\r\n        updateTicksPosition(that._minorTicks, options.minorTick, animationEnabled);\r\n        updateTicksPosition(that._boundaryTicks, options.tick);\r\n        callAction(that._majorTicks, \"updateLabelPosition\", animationEnabled);\r\n        that._outsideConstantLines.concat(that._insideConstantLines || []).forEach(function(l) {\r\n            return l.updatePosition(animationEnabled)\r\n        });\r\n        callAction(that._strips, \"updatePosition\", animationEnabled);\r\n        updateGridsPosition(that._majorTicks, animationEnabled);\r\n        updateGridsPosition(that._minorTicks, animationEnabled);\r\n        if (animationEnabled) {\r\n            callAction(that._ticksToRemove || [], \"fadeOutElements\")\r\n        }\r\n        that.prepareAnimation();\r\n        that._ticksToRemove = null;\r\n        if (!that._translator.getBusinessRange().isEmpty()) {\r\n            that._firstDrawing = false\r\n        }\r\n        this._resetApplyingAnimation = false\r\n    },\r\n    prepareAnimation: function() {\r\n        var that = this;\r\n        var action = \"saveCoords\";\r\n        callAction(that._majorTicks, action);\r\n        callAction(that._minorTicks, action);\r\n        callAction(that._insideConstantLines, action);\r\n        callAction(that._outsideConstantLines, action);\r\n        callAction(that._strips, action)\r\n    },\r\n    _resetStartCoordinates: function() {\r\n        var that = this;\r\n        var action = \"resetCoordinates\";\r\n        callAction(that._majorTicks, action);\r\n        callAction(that._minorTicks, action);\r\n        callAction(that._insideConstantLines, action);\r\n        callAction(that._outsideConstantLines, action);\r\n        callAction(that._strips, action)\r\n    },\r\n    applyClipRects: function(elementsClipID, canvasClipID) {\r\n        this._axisGroup.attr({\r\n            \"clip-path\": canvasClipID\r\n        });\r\n        this._axisStripGroup.attr({\r\n            \"clip-path\": elementsClipID\r\n        })\r\n    },\r\n    _validateVisualRange: function(optionValue) {\r\n        var range = (0, _utils.getVizRangeObject)(optionValue);\r\n        if (void 0 !== range.startValue) {\r\n            range.startValue = this.validateUnit(range.startValue)\r\n        }\r\n        if (void 0 !== range.endValue) {\r\n            range.endValue = this.validateUnit(range.endValue)\r\n        }\r\n        return (0, _utils.convertVisualRangeObject)(range, !_isArray(optionValue))\r\n    },\r\n    _validateOptions: function(options) {\r\n        var that = this;\r\n        options.wholeRange = that._validateVisualRange(options.wholeRange);\r\n        options.visualRange = options._customVisualRange = that._validateVisualRange(options._customVisualRange);\r\n        that._setVisualRange(options._customVisualRange)\r\n    },\r\n    beforeCleanGroups: function() {\r\n        this._options.label.template && this._axisElementsGroup && this._axisElementsGroup.linkRemove()\r\n    },\r\n    afterCleanGroups: function() {\r\n        this._options.label.template && this._axisElementsGroup && this._axisElementsGroup.linkAppend();\r\n    },\r\n    validate: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var dataType = that.isArgumentAxis ? options.argumentType : options.valueType;\r\n        var parser = dataType ? (0, _parse_utils.getParser)(dataType) : function(unit) {\r\n            return unit\r\n        };\r\n        that.parser = parser;\r\n        options.dataType = dataType;\r\n        that._validateOptions(options)\r\n    },\r\n    resetVisualRange: function(isSilent) {\r\n        this._seriesData.minVisible = this._seriesData.min;\r\n        this._seriesData.maxVisible = this._seriesData.max;\r\n        this.handleZooming([null, null], {\r\n            start: !!isSilent,\r\n            end: !!isSilent\r\n        })\r\n    },\r\n    _setVisualRange: function(visualRange, allowPartialUpdate) {\r\n        var range = this.adjustRange((0, _utils.getVizRangeObject)(visualRange));\r\n        if (allowPartialUpdate) {\r\n            (0, _type.isDefined)(range.startValue) && (this._viewport.startValue = range.startValue);\r\n            (0, _type.isDefined)(range.endValue) && (this._viewport.endValue = range.endValue)\r\n        } else {\r\n            this._viewport = range\r\n        }\r\n    },\r\n    _applyZooming: function(visualRange, allowPartialUpdate) {\r\n        var that = this;\r\n        that._resetVisualRangeOption();\r\n        that._setVisualRange(visualRange, allowPartialUpdate);\r\n        var viewPort = that.getViewport();\r\n        that._seriesData.userBreaks = that._getScaleBreaks(that._options, {\r\n            minVisible: viewPort.startValue,\r\n            maxVisible: viewPort.endValue\r\n        }, that._series, that.isArgumentAxis);\r\n        that._translator.updateBusinessRange(that._getViewportRange())\r\n    },\r\n    getZoomStartEventArg: function(event, actionType) {\r\n        return {\r\n            axis: this,\r\n            range: this.visualRange(),\r\n            cancel: false,\r\n            event: event,\r\n            actionType: actionType\r\n        }\r\n    },\r\n    getZoomEndEventArg: function(previousRange, event, actionType, zoomFactor, shift) {\r\n        var newRange = this.visualRange();\r\n        return {\r\n            axis: this,\r\n            previousRange: previousRange,\r\n            range: newRange,\r\n            cancel: false,\r\n            event: event,\r\n            actionType: actionType,\r\n            zoomFactor: zoomFactor,\r\n            shift: shift,\r\n            rangeStart: newRange.startValue,\r\n            rangeEnd: newRange.endValue\r\n        }\r\n    },\r\n    getZoomBounds: function() {\r\n        var wholeRange = (0, _utils.getVizRangeObject)(this._options.wholeRange);\r\n        var range = this.getTranslator().getBusinessRange();\r\n        var secondPriorityRange = {\r\n            startValue: getZoomBoundValue(this._initRange.startValue, range.min),\r\n            endValue: getZoomBoundValue(this._initRange.endValue, range.max)\r\n        };\r\n        return {\r\n            startValue: getZoomBoundValue(wholeRange.startValue, secondPriorityRange.startValue),\r\n            endValue: getZoomBoundValue(wholeRange.endValue, secondPriorityRange.endValue)\r\n        }\r\n    },\r\n    setInitRange: function() {\r\n        this._initRange = {};\r\n        if (0 === Object.keys(this._options.wholeRange || {}).length) {\r\n            this._initRange = this.getZoomBounds()\r\n        }\r\n    },\r\n    _resetVisualRangeOption: function() {\r\n        this._options._customVisualRange = {}\r\n    },\r\n    getTemplatesGroups: function() {\r\n        var ticks = this._majorTicks;\r\n        if (ticks) {\r\n            return this._majorTicks.map(function(tick) {\r\n                return tick.templateContainer\r\n            }).filter(function(item) {\r\n                return (0, _type.isDefined)(item)\r\n            })\r\n        } else {\r\n            return []\r\n        }\r\n    },\r\n    setCustomVisualRange: function(range) {\r\n        this._options._customVisualRange = range\r\n    },\r\n    visualRange: function visualRange() {\r\n        var that = this;\r\n        var args = arguments;\r\n        var visualRange;\r\n        if (0 === args.length) {\r\n            var adjustedRange = that._getAdjustedBusinessRange();\r\n            var startValue = adjustedRange.minVisible;\r\n            var endValue = adjustedRange.maxVisible;\r\n            if (that._options.type === _axes_constants.default.discrete) {\r\n                var _startValue, _endValue;\r\n                startValue = null !== (_startValue = startValue) && void 0 !== _startValue ? _startValue : adjustedRange.categories[0];\r\n                endValue = null !== (_endValue = endValue) && void 0 !== _endValue ? _endValue : adjustedRange.categories[adjustedRange.categories.length - 1];\r\n                return {\r\n                    startValue: startValue,\r\n                    endValue: endValue,\r\n                    categories: (0, _utils.getCategoriesInfo)(adjustedRange.categories, startValue, endValue).categories\r\n                }\r\n            }\r\n            return {\r\n                startValue: startValue,\r\n                endValue: endValue\r\n            }\r\n        } else {\r\n            if (_isArray(args[0])) {\r\n                visualRange = args[0]\r\n            } else {\r\n                if ((0, _type.isPlainObject)(args[0])) {\r\n                    visualRange = (0, _extend.extend)({}, args[0])\r\n                } else {\r\n                    visualRange = [args[0], args[1]]\r\n                }\r\n            }\r\n        }\r\n        var zoomResults = that.handleZooming(visualRange, args[1]);\r\n        if (!zoomResults.isPrevented) {\r\n            that._visualRange(that, zoomResults)\r\n        }\r\n    },\r\n    handleZooming: function(visualRange, preventEvents, domEvent, action) {\r\n        var that = this;\r\n        preventEvents = preventEvents || {};\r\n        if ((0, _type.isDefined)(visualRange)) {\r\n            visualRange = that._validateVisualRange(visualRange);\r\n            visualRange.action = action\r\n        }\r\n        var zoomStartEvent = that.getZoomStartEventArg(domEvent, action);\r\n        var previousRange = zoomStartEvent.range;\r\n        !preventEvents.start && that._eventTrigger(\"zoomStart\", zoomStartEvent);\r\n        var zoomResults = {\r\n            isPrevented: zoomStartEvent.cancel,\r\n            skipEventRising: preventEvents.skipEventRising,\r\n            range: visualRange || zoomStartEvent.range\r\n        };\r\n        if (!zoomStartEvent.cancel) {\r\n            (0, _type.isDefined)(visualRange) && that._applyZooming(visualRange, preventEvents.allowPartialUpdate);\r\n            if (!(0, _type.isDefined)(that._storedZoomEndParams)) {\r\n                that._storedZoomEndParams = {\r\n                    startRange: previousRange,\r\n                    type: this.getOptions().type\r\n                }\r\n            }\r\n            that._storedZoomEndParams.event = domEvent;\r\n            that._storedZoomEndParams.action = action;\r\n            that._storedZoomEndParams.prevent = !!preventEvents.end\r\n        }\r\n        return zoomResults\r\n    },\r\n    handleZoomEnd: function() {\r\n        var that = this;\r\n        if ((0, _type.isDefined)(that._storedZoomEndParams) && !that._storedZoomEndParams.prevent) {\r\n            var previousRange = that._storedZoomEndParams.startRange;\r\n            var domEvent = that._storedZoomEndParams.event;\r\n            var action = that._storedZoomEndParams.action;\r\n            var previousBusinessRange = {\r\n                minVisible: previousRange.startValue,\r\n                maxVisible: previousRange.endValue,\r\n                categories: previousRange.categories\r\n            };\r\n            var typeIsNotChanged = that.getOptions().type === that._storedZoomEndParams.type;\r\n            var shift = typeIsNotChanged ? (0, _math2.adjust)(that.getVisualRangeCenter() - that.getVisualRangeCenter(previousBusinessRange)) : NaN;\r\n            var zoomFactor = typeIsNotChanged ? +(Math.round(that.getVisualRangeLength(previousBusinessRange) / that.getVisualRangeLength() + \"e+2\") + \"e-2\") : NaN;\r\n            var zoomEndEvent = that.getZoomEndEventArg(previousRange, domEvent, action, zoomFactor, shift);\r\n            zoomEndEvent.cancel = that.isZoomingLowerLimitOvercome(1 === zoomFactor ? \"pan\" : \"zoom\", zoomFactor);\r\n            that._eventTrigger(\"zoomEnd\", zoomEndEvent);\r\n            if (zoomEndEvent.cancel) {\r\n                that.restorePreviousVisualRange(previousRange)\r\n            }\r\n            that._storedZoomEndParams = null\r\n        }\r\n    },\r\n    restorePreviousVisualRange: function(previousRange) {\r\n        var that = this;\r\n        that._storedZoomEndParams = null;\r\n        that._applyZooming(previousRange);\r\n        that._visualRange(that, previousRange)\r\n    },\r\n    isZoomingLowerLimitOvercome: function(actionType, zoomFactor, range) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var minZoom = options.minVisualRangeLength;\r\n        var isOvercoming = \"zoom\" === actionType && zoomFactor >= 1;\r\n        var businessRange = that._translator.getBusinessRange();\r\n        var visualRange;\r\n        if ((0, _type.isDefined)(range)) {\r\n            visualRange = that.adjustRange((0, _utils.getVizRangeObject)(range));\r\n            visualRange = {\r\n                minVisible: visualRange.startValue,\r\n                maxVisible: visualRange.endValue,\r\n                categories: businessRange.categories\r\n            }\r\n        }\r\n        var visualRangeLength = that.getVisualRangeLength(visualRange);\r\n        if (\"discrete\" !== options.type) {\r\n            if ((0, _type.isDefined)(minZoom)) {\r\n                if (\"datetime\" === options.dataType && !(0, _type.isNumeric)(minZoom)) {\r\n                    minZoom = _date.default.dateToMilliseconds(minZoom)\r\n                }\r\n                isOvercoming &= minZoom >= visualRangeLength\r\n            } else {\r\n                var canvasLength = that._translator.canvasLength;\r\n                var fullRange = {\r\n                    minVisible: businessRange.min,\r\n                    maxVisible: businessRange.max,\r\n                    categories: businessRange.categories\r\n                };\r\n                isOvercoming &= that.getVisualRangeLength(fullRange) / canvasLength >= visualRangeLength\r\n            }\r\n        } else {\r\n            !(0, _type.isDefined)(minZoom) && (minZoom = 1);\r\n            isOvercoming &= (0, _type.isDefined)(range) && that.getVisualRangeLength() === minZoom && visualRangeLength <= minZoom\r\n        }\r\n        return !!isOvercoming\r\n    },\r\n    dataVisualRangeIsReduced: function() {\r\n        var minDataValue;\r\n        var maxDataValue;\r\n        var translator = this.getTranslator();\r\n        if (\"discrete\" === this._options.type) {\r\n            var categories = translator.getBusinessRange().categories;\r\n            minDataValue = categories[0];\r\n            maxDataValue = categories[categories.length - 1]\r\n        } else {\r\n            var seriesData = this._seriesData;\r\n            minDataValue = seriesData.min;\r\n            maxDataValue = seriesData.max\r\n        }\r\n        if (!(0, _type.isDefined)(minDataValue) || !(0, _type.isDefined)(maxDataValue)) {\r\n            return false\r\n        }\r\n        var startPoint = translator.translate(minDataValue);\r\n        var endPoint = translator.translate(maxDataValue);\r\n        var edges = [Math.min(startPoint, endPoint), Math.max(startPoint, endPoint)];\r\n        var visualRange = this.visualRange();\r\n        var visualRangeStartPoint = translator.translate(visualRange.startValue);\r\n        var visualRangeEndPoint = translator.translate(visualRange.endValue);\r\n        return visualRangeStartPoint > edges[0] && visualRangeStartPoint < edges[1] || visualRangeEndPoint > edges[0] && visualRangeEndPoint < edges[1] || visualRangeStartPoint === visualRangeEndPoint && edges[0] !== edges[1]\r\n    },\r\n    isExtremePosition: function(isMax) {\r\n        var extremeDataValue;\r\n        var seriesData;\r\n        if (\"discrete\" === this._options.type) {\r\n            seriesData = this._translator.getBusinessRange();\r\n            extremeDataValue = isMax ? seriesData.categories[seriesData.categories.length - 1] : seriesData.categories[0]\r\n        } else {\r\n            seriesData = this.getZoomBounds();\r\n            extremeDataValue = isMax ? seriesData.endValue : seriesData.startValue\r\n        }\r\n        var translator = this.getTranslator();\r\n        var extremePoint = translator.translate(extremeDataValue);\r\n        var visualRange = this.visualRange();\r\n        var visualRangePoint = isMax ? translator.translate(visualRange.endValue) : translator.translate(visualRange.startValue);\r\n        return _abs(visualRangePoint - extremePoint) < SCROLL_THRESHOLD\r\n    },\r\n    getViewport: function() {\r\n        return this._viewport\r\n    },\r\n    getFullTicks: function() {\r\n        var majors = this._majorTicks || [];\r\n        if (this._options.type === _axes_constants.default.discrete) {\r\n            return convertTicksToValues(majors)\r\n        } else {\r\n            return convertTicksToValues(majors.concat(this._minorTicks, this._boundaryTicks)).sort(function(a, b) {\r\n                return (0, _utils.valueOf)(a) - (0, _utils.valueOf)(b)\r\n            })\r\n        }\r\n    },\r\n    measureLabels: function(canvas, withIndents) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var widthAxis = options.visible ? options.width : 0;\r\n        var ticks;\r\n        var indent = withIndents ? options.label.indentFromAxis + .5 * options.tick.length : 0;\r\n        var tickInterval;\r\n        var viewportRange = that._getViewportRange();\r\n        if (viewportRange.isEmpty() || !options.label.visible || !that._axisElementsGroup) {\r\n            return {\r\n                height: widthAxis,\r\n                width: widthAxis,\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        }\r\n        if (that._majorTicks) {\r\n            ticks = convertTicksToValues(that._majorTicks)\r\n        } else {\r\n            that.updateCanvas(canvas);\r\n            ticks = that._createTicksAndLabelFormat(viewportRange, _common.noop);\r\n            tickInterval = ticks.tickInterval;\r\n            ticks = ticks.ticks\r\n        }\r\n        var maxText = ticks.reduce(function(prevLabel, tick, index) {\r\n            var label = that.formatLabel(tick, options.label, viewportRange, void 0, tickInterval, ticks);\r\n            if (prevLabel.length < label.length) {\r\n                return label\r\n            } else {\r\n                return prevLabel\r\n            }\r\n        }, that.formatLabel(ticks[0], options.label, viewportRange, void 0, tickInterval, ticks));\r\n        var text = that._renderer.text(maxText, 0, 0).css(that._textFontStyles).attr(that._textOptions).append(that._renderer.root);\r\n        var box = text.getBBox();\r\n        text.remove();\r\n        return {\r\n            x: box.x,\r\n            y: box.y,\r\n            width: box.width + indent,\r\n            height: box.height + indent\r\n        }\r\n    },\r\n    _setLabelsPlacement: function() {\r\n        if (!this._options.label.visible) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var labelOpt = that._options.label;\r\n        var displayMode = that._validateDisplayMode(labelOpt.displayMode);\r\n        var overlappingMode = that._validateOverlappingMode(labelOpt.overlappingBehavior, displayMode);\r\n        var ignoreOverlapping = \"none\" === overlappingMode || \"ignore\" === overlappingMode;\r\n        var behavior = {\r\n            rotationAngle: labelOpt.rotationAngle,\r\n            staggeringSpacing: labelOpt.staggeringSpacing\r\n        };\r\n        var notRecastStep;\r\n        var boxes = that._majorTicks.map(function(tick) {\r\n            return tick.labelBBox\r\n        });\r\n        var step = that._getStep(boxes);\r\n        switch (displayMode) {\r\n            case ROTATE:\r\n                if (ignoreOverlapping) {\r\n                    notRecastStep = true;\r\n                    step = 1\r\n                }\r\n                that._applyLabelMode(displayMode, step, boxes, labelOpt, notRecastStep);\r\n                break;\r\n            case \"stagger\":\r\n                if (ignoreOverlapping) {\r\n                    step = 2\r\n                }\r\n                that._applyLabelMode(displayMode, _max(step, 2), boxes, labelOpt);\r\n                break;\r\n            default:\r\n                that._applyLabelOverlapping(boxes, overlappingMode, step, behavior)\r\n        }\r\n    },\r\n    _applyLabelOverlapping: function(boxes, mode, step, behavior) {\r\n        var that = this;\r\n        var labelOpt = that._options.label;\r\n        var majorTicks = that._majorTicks;\r\n        if (\"none\" === mode || \"ignore\" === mode) {\r\n            return\r\n        }\r\n        var checkLabels = function(box, index, array) {\r\n            if (0 === index) {\r\n                return false\r\n            }\r\n            return _axes_constants.default.areLabelsOverlap(box, array[index - 1], labelOpt.minSpacing, labelOpt.alignment)\r\n        };\r\n        if (step > 1 && boxes.some(checkLabels)) {\r\n            that._applyLabelMode(mode, step, boxes, behavior)\r\n        }\r\n        that._checkBoundedLabelsOverlapping(majorTicks, boxes, mode)\r\n    },\r\n    _applyLabelMode: function(mode, step, boxes, behavior, notRecastStep) {\r\n        var that = this;\r\n        var majorTicks = that._majorTicks;\r\n        var labelOpt = that._options.label;\r\n        var angle = behavior.rotationAngle;\r\n        var labelHeight;\r\n        var alignment;\r\n        var func;\r\n        switch (mode) {\r\n            case ROTATE:\r\n                if (!labelOpt.userAlignment) {\r\n                    alignment = angle < 0 ? RIGHT : LEFT;\r\n                    if (angle % 90 === 0) {\r\n                        alignment = CENTER\r\n                    }\r\n                }\r\n                step = notRecastStep ? step : that._getStep(boxes, angle);\r\n                func = function(tick) {\r\n                    var contentContainer = tick.getContentContainer();\r\n                    if (!contentContainer) {\r\n                        return\r\n                    }\r\n                    contentContainer.rotate(angle);\r\n                    tick.labelRotationAngle = angle;\r\n                    alignment && (tick.labelAlignment = alignment)\r\n                };\r\n                updateLabels(majorTicks, step, func);\r\n                break;\r\n            case \"stagger\":\r\n                labelHeight = that._getMaxLabelHeight(boxes, behavior.staggeringSpacing);\r\n                func = function(tick, index) {\r\n                    if (index / (step - 1) % 2 !== 0) {\r\n                        tick.labelOffset = labelHeight\r\n                    }\r\n                };\r\n                updateLabels(majorTicks, step - 1, func);\r\n                break;\r\n            case \"auto\":\r\n            case \"_auto\":\r\n                if (2 === step) {\r\n                    that._applyLabelMode(\"stagger\", step, boxes, behavior)\r\n                } else {\r\n                    that._applyLabelMode(ROTATE, step, boxes, {\r\n                        rotationAngle: getOptimalAngle(boxes, labelOpt)\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                updateLabels(majorTicks, step)\r\n        }\r\n    },\r\n    getMarkerTrackers: _common.noop,\r\n    _drawDateMarkers: _common.noop,\r\n    _adjustDateMarkers: _common.noop,\r\n    coordsIn: _common.noop,\r\n    areCoordsOutsideAxis: _common.noop,\r\n    _getSkippedCategory: _common.noop,\r\n    _initAxisPositions: _common.noop,\r\n    _drawTitle: _common.noop,\r\n    _updateTitleCoords: _common.noop,\r\n    _adjustConstantLineLabels: _common.noop,\r\n    _createTranslator: function() {\r\n        return new _translator2d.Translator2D({}, {}, {})\r\n    },\r\n    _updateTranslator: function() {\r\n        var translator = this._translator;\r\n        translator.update(translator.getBusinessRange(), this._canvas || {}, this._getTranslatorOptions())\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        var _options$workWeek2, _options$breakStyle$w, _options$breakStyle;\r\n        var options = this._options;\r\n        return {\r\n            isHorizontal: this._isHorizontal,\r\n            shiftZeroValue: !this.isArgumentAxis,\r\n            interval: options.semiDiscreteInterval,\r\n            firstDayOfWeek: null === (_options$workWeek2 = options.workWeek) || void 0 === _options$workWeek2 ? void 0 : _options$workWeek2[0],\r\n            stick: this._getStick(),\r\n            breaksSize: null !== (_options$breakStyle$w = null === (_options$breakStyle = options.breakStyle) || void 0 === _options$breakStyle ? void 0 : _options$breakStyle.width) && void 0 !== _options$breakStyle$w ? _options$breakStyle$w : 0\r\n        }\r\n    },\r\n    getVisibleArea: function() {\r\n        var canvas = this._getCanvasStartEnd();\r\n        return [canvas.start, canvas.end].sort(function(a, b) {\r\n            return a - b\r\n        })\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        var isHorizontal = this._isHorizontal;\r\n        var canvas = this._canvas || {};\r\n        var invert = this._translator.getBusinessRange().invert;\r\n        var coords = isHorizontal ? [canvas.left, canvas.width - canvas.right] : [canvas.height - canvas.bottom, canvas.top];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getScreenDelta: function() {\r\n        var that = this;\r\n        var canvas = that._getCanvasStartEnd();\r\n        var breaks = that._seriesData ? that._seriesData.breaks || [] : [];\r\n        var breaksLength = breaks.length;\r\n        var screenDelta = _abs(canvas.start - canvas.end);\r\n        return screenDelta - (breaksLength ? breaks[breaksLength - 1].cumulativeWidth : 0)\r\n    },\r\n    _getScaleBreaks: function() {\r\n        return []\r\n    },\r\n    _filterBreaks: function() {\r\n        return []\r\n    },\r\n    _adjustTitle: _common.noop,\r\n    _checkTitleOverflow: _common.noop,\r\n    getSpiderTicks: _common.noop,\r\n    setSpiderTicks: _common.noop,\r\n    _checkBoundedLabelsOverlapping: _common.noop,\r\n    drawScaleBreaks: _common.noop,\r\n    _visualRange: _common.noop,\r\n    _rotateConstantLine: _common.noop,\r\n    applyVisualRangeSetter: function(visualRangeSetter) {\r\n        this._visualRange = visualRangeSetter\r\n    },\r\n    getCategoriesSorter: function(argCategories) {\r\n        var sort;\r\n        if (this.isArgumentAxis) {\r\n            sort = argCategories\r\n        } else {\r\n            var categoriesSortingMethod = this._options.categoriesSortingMethod;\r\n            sort = null !== categoriesSortingMethod && void 0 !== categoriesSortingMethod ? categoriesSortingMethod : this._options.categories\r\n        }\r\n        return sort\r\n    },\r\n    _getAdjustedBusinessRange: function() {\r\n        return this.adjustViewport(this._translator.getBusinessRange())\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}