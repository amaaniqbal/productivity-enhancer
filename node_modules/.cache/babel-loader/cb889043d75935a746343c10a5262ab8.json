{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/zoom_and_pan.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _wheel = require(\"../../events/core/wheel\");\n\nvar transformEvents = _interopRequireWildcard(require(\"../../events/transform\"));\n\nvar _drag = require(\"../../events/drag\");\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar EVENTS_NS = \".zoomAndPanNS\";\nvar DRAG_START_EVENT_NAME = _drag.start + EVENTS_NS;\nvar DRAG_EVENT_NAME = _drag.move + EVENTS_NS;\nvar DRAG_END_EVENT_NAME = _drag.end + EVENTS_NS;\nvar PINCH_START_EVENT_NAME = transformEvents.pinchstart + EVENTS_NS;\nvar PINCH_EVENT_NAME = transformEvents.pinch + EVENTS_NS;\nvar PINCH_END_EVENT_NAME = transformEvents.pinchend + EVENTS_NS;\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\nvar GESTURE_TIMEOUT = 300;\nvar MIN_DRAG_DELTA = 5;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _abs = Math.abs;\n\nfunction canvasToRect(canvas) {\n  return {\n    x: canvas.left,\n    y: canvas.top,\n    width: canvas.width - canvas.left - canvas.right,\n    height: canvas.height - canvas.top - canvas.bottom\n  };\n}\n\nfunction checkCoords(rect, coords) {\n  var x = coords.x;\n  var y = coords.y;\n  return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y;\n}\n\nfunction sortAxes(axes, onlyAxisToNotify) {\n  if (onlyAxisToNotify) {\n    axes = axes.sort(function (a, b) {\n      if (a === onlyAxisToNotify) {\n        return -1;\n      }\n\n      if (b === onlyAxisToNotify) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  return axes;\n}\n\nfunction isNotEmptyAxisBusinessRange(axis) {\n  return !axis.getTranslator().getBusinessRange().isEmpty();\n}\n\nvar _default = {\n  name: \"zoom_and_pan\",\n  init: function init() {\n    var chart = this;\n    var renderer = this._renderer;\n\n    function cancelEvent(e) {\n      if (e.originalEvent) {\n        cancelEvent(e.originalEvent);\n      }\n\n      if (false !== e.cancelable) {\n        e.cancel = true;\n      }\n    }\n\n    function startAxesViewportChanging(zoomAndPan, actionField, e) {\n      var options = zoomAndPan.options;\n      var actionData = zoomAndPan.actionData;\n      var axes = [];\n\n      if (options.argumentAxis[actionField]) {\n        axes.push(chart.getArgumentAxis());\n      }\n\n      if (options.valueAxis[actionField]) {\n        axes = axes.concat(actionData.valueAxes);\n      }\n\n      axes.reduce(function (isPrevented, axis) {\n        if (isPrevented) {\n          return isPrevented;\n        }\n\n        if (isNotEmptyAxisBusinessRange(axis)) {\n          return axis.handleZooming(null, {\n            end: true\n          }, e, actionField).isPrevented;\n        }\n\n        return isPrevented;\n      }, false) && cancelEvent(e);\n    }\n\n    function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\n      function zoomAxes(axes, criteria, coordField, e, actionData) {\n        var zoom = {\n          zoomed: false\n        };\n        criteria && axes.filter(isNotEmptyAxisBusinessRange).forEach(function (axis) {\n          var options = axis.getOptions();\n          var viewport = axis.visualRange();\n          var scale = axis.getTranslator().getEventScale(e);\n          var translate = -offsetCalc(e, actionData, coordField, scale);\n          zoom = (0, _extend.extend)(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\n          var range = axis.adjustRange((0, _utils.getVizRangeObject)([zoom.min, zoom.max]));\n          var isMinZoom = axis.isZoomingLowerLimitOvercome(actionField, scale, range);\n\n          if (!(0, _type.isDefined)(viewport) || viewport.startValue.valueOf() !== range.startValue.valueOf() || viewport.endValue.valueOf() !== range.endValue.valueOf()) {\n            axis.handleZooming(isMinZoom ? null : range, {\n              start: true,\n              end: true\n            }, e, actionField);\n\n            if (!isMinZoom) {\n              zoom.zoomed = true;\n              zoom.deltaTranslate = translate - zoom.translate;\n            }\n          } else {\n            if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\n              var isMinPosition = axis.isExtremePosition(false);\n              var isMaxPosition = axis.isExtremePosition(true);\n              var zoomInEnabled = scale > 1 && !isMinZoom;\n              var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\n              var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\n              zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled;\n            }\n          }\n        });\n        return zoom;\n      }\n\n      function storeOffset(e, actionData, zoom, coordField) {\n        if (zoom.zoomed) {\n          actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate;\n        }\n      }\n\n      function storeCenter(center, actionData, zoom, coordField) {\n        if (zoom.zoomed) {\n          actionData.center[coordField] = center[coordField] + zoom.deltaTranslate;\n        }\n      }\n\n      var rotated = chart.option(\"rotated\");\n      var actionData = zoomAndPan.actionData;\n      var options = zoomAndPan.options;\n      var argZoom = {};\n      var valZoom = {};\n\n      if (!actionData.fallback) {\n        argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\n        valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\n\n        chart._requestChange([\"VISUAL_RANGE\"]);\n\n        storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\n        storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\");\n      }\n\n      var center = centerCalc(e);\n      storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\n      storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\n\n      if (!argZoom.zoomed && !valZoom.zoomed) {\n        actionData.center = center;\n      }\n\n      return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled;\n    }\n\n    function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\n      function zoomAxes(axes, criteria, coordField, e, actionData, onlyAxisToNotify) {\n        var zoomStarted = false;\n        criteria && axes.forEach(function (axis) {\n          var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\n          var scale = e.scale || 1;\n          var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\n          var range = {\n            startValue: zoom.min,\n            endValue: zoom.max\n          };\n          var isMinZoom = axis.isZoomingLowerLimitOvercome(actionField, scale, range);\n          axis.handleZooming(isMinZoom ? null : range, {\n            start: true,\n            end: silent\n          }, e, actionField);\n          isMinZoom ? axis.handleZoomEnd() : zoomStarted = true;\n        });\n        return zoomStarted;\n      }\n\n      var rotated = chart.option(\"rotated\");\n      var actionData = zoomAndPan.actionData;\n      var options = zoomAndPan.options;\n      var zoomStarted = true;\n\n      if (actionData.fallback) {\n        zoomStarted &= zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData, chart.getArgumentAxis());\n        zoomStarted |= zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\n      } else {\n        var axes = [];\n\n        if (options.argumentAxis[actionField]) {\n          axes.push(chart.getArgumentAxis());\n        }\n\n        if (options.valueAxis[actionField]) {\n          axes = axes.concat(actionData.valueAxes);\n        }\n\n        axes.filter(isNotEmptyAxisBusinessRange).forEach(function (axis) {\n          axis.handleZooming(null, {\n            start: true\n          }, e, actionField);\n        });\n        zoomStarted = zoomStarted && axes.length;\n      }\n\n      zoomStarted && chart._requestChange([\"VISUAL_RANGE\"]);\n    }\n\n    function prepareActionData(coords, action) {\n      var axes = chart._argumentAxes.filter(function (axis) {\n        return checkCoords(canvasToRect(axis.getCanvas()), coords);\n      });\n\n      return {\n        fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\n        cancel: !axes.length || !(0, _type.isDefined)(action),\n        action: action,\n        curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\n        valueAxes: axes.length && chart._valueAxes.filter(function (axis) {\n          return checkCoords(canvasToRect(axis.getCanvas()), coords);\n        }),\n        offset: {\n          x: 0,\n          y: 0\n        },\n        center: coords,\n        startCenter: coords\n      };\n    }\n\n    function getPointerCoord(rect, e) {\n      var rootOffset = renderer.getRootOffset();\n      return {\n        x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\n        y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\n      };\n    }\n\n    function calcCenterForPinch(e) {\n      var rootOffset = renderer.getRootOffset();\n      var x1 = e.pointers[0].pageX;\n      var x2 = e.pointers[1].pageX;\n      var y1 = e.pointers[0].pageY;\n      var y2 = e.pointers[1].pageY;\n      return {\n        x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\n        y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\n      };\n    }\n\n    function calcCenterForDrag(e) {\n      var rootOffset = renderer.getRootOffset();\n      return {\n        x: e.pageX - rootOffset.left,\n        y: e.pageY - rootOffset.top\n      };\n    }\n\n    function calcOffsetForDrag(e, actionData, coordField) {\n      return e.offset[coordField] - actionData.offset[coordField];\n    }\n\n    function preventDefaults(e) {\n      if (false !== e.cancelable) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      chart._stopCurrentHandling();\n    }\n\n    var zoomAndPan = {\n      dragStartHandler: function dragStartHandler(e) {\n        var options = zoomAndPan.options;\n        var isTouch = \"touch\" === e.pointerType;\n        var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\n        var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\n        var panKeyPressed = (0, _type.isDefined)(options.panKey) && e[(0, _utils.normalizeEnum)(options.panKey) + \"Key\"];\n        var dragToZoom = options.dragToZoom;\n        var action;\n        e._cancelPreventDefault = true;\n\n        if (isTouch) {\n          if (options.allowTouchGestures && wantPan) {\n            var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\n            action = cancelPanning ? null : \"pan\";\n          }\n        } else {\n          if (dragToZoom && wantPan && panKeyPressed) {\n            action = \"pan\";\n          } else {\n            if (!dragToZoom && wantPan) {\n              action = \"pan\";\n            } else {\n              if (dragToZoom && wantZoom) {\n                action = \"zoom\";\n              }\n            }\n          }\n        }\n\n        var actionData = prepareActionData(calcCenterForDrag(e), action);\n\n        if (actionData.cancel) {\n          zoomAndPan.skipEvent = false;\n\n          if (false !== e.cancelable) {\n            e.cancel = true;\n          }\n\n          return;\n        }\n\n        zoomAndPan.actionData = actionData;\n\n        if (\"zoom\" === action) {\n          actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\n          actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root);\n        } else {\n          startAxesViewportChanging(zoomAndPan, \"pan\", e);\n        }\n      },\n      dragHandler: function dragHandler(e) {\n        var rotated = chart.option(\"rotated\");\n        var options = zoomAndPan.options;\n        var actionData = zoomAndPan.actionData;\n        var isTouch = \"touch\" === e.pointerType;\n        e._cancelPreventDefault = true;\n\n        if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\n          return;\n        }\n\n        if (\"zoom\" === actionData.action) {\n          preventDefaults(e);\n          var curCanvas = actionData.curAxisRect;\n          var startCoords = actionData.startCoords;\n          var curCoords = getPointerCoord(curCanvas, e);\n          var zoomArg = options.argumentAxis.zoom;\n          var zoomVal = options.valueAxis.zoom;\n          var rect = {\n            x: _min(startCoords.x, curCoords.x),\n            y: _min(startCoords.y, curCoords.y),\n            width: _abs(startCoords.x - curCoords.x),\n            height: _abs(startCoords.y - curCoords.y)\n          };\n\n          if (!zoomArg || !zoomVal) {\n            if (!zoomArg && !rotated || !zoomVal && rotated) {\n              rect.x = curCanvas.x;\n              rect.width = curCanvas.width;\n            } else {\n              rect.y = curCanvas.y;\n              rect.height = curCanvas.height;\n            }\n          }\n\n          actionData.rect.attr(rect);\n        } else {\n          if (\"pan\" === actionData.action) {\n            axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function (e) {\n              return e.offset;\n            });\n            var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\n            var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\n\n            if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\n              return;\n            }\n\n            preventDefaults(e);\n          }\n        }\n      },\n      dragEndHandler: function dragEndHandler(e) {\n        var rotated = chart.option(\"rotated\");\n        var options = zoomAndPan.options;\n        var actionData = zoomAndPan.actionData;\n        var isTouch = \"touch\" === e.pointerType;\n        var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\n\n        if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\n          return;\n        }\n\n        (!isTouch || !zoomAndPan.actionData.isNative) && preventDefaults(e);\n\n        if (\"zoom\" === actionData.action) {\n          var zoomAxes = function zoomAxes(axes, criteria, coordField, startCoords, curCoords, onlyAxisToNotify) {\n            axes = sortAxes(axes, onlyAxisToNotify);\n            var curCoord = curCoords[coordField];\n            var startCoord = startCoords[coordField];\n            var zoomStarted = false;\n\n            if (criteria && _abs(curCoord - startCoord) > MIN_DRAG_DELTA) {\n              axes.some(function (axis) {\n                var tr = axis.getTranslator();\n\n                if (tr.getBusinessRange().isEmpty()) {\n                  return;\n                }\n\n                var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\n                var range = [tr.from(startCoord), tr.from(curCoord)];\n                var isMinZoom = axis.isZoomingLowerLimitOvercome(actionData.action, tr.getMinScale(true), range);\n                var result = axis.handleZooming(isMinZoom ? null : range, {\n                  start: !!silent,\n                  end: !!silent\n                }, e, actionData.action);\n                isMinZoom ? axis.handleZoomEnd() : zoomStarted = true;\n                return onlyAxisToNotify && result.isPrevented;\n              });\n            }\n\n            return zoomStarted;\n          };\n\n          var curCoords = getPointerCoord(actionData.curAxisRect, e);\n          var argumentAxesZoomed = zoomAxes(chart._argumentAxes, options.argumentAxis.zoom, rotated ? \"y\" : \"x\", actionData.startCoords, curCoords, chart.getArgumentAxis());\n          var valueAxesZoomed = zoomAxes(actionData.valueAxes, options.valueAxis.zoom, rotated ? \"x\" : \"y\", actionData.startCoords, curCoords);\n\n          if (valueAxesZoomed || argumentAxesZoomed) {\n            chart._requestChange([\"VISUAL_RANGE\"]);\n          }\n\n          actionData.rect.dispose();\n        } else {\n          if (\"pan\" === actionData.action) {\n            finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\n          }\n        }\n\n        zoomAndPan.actionData = null;\n      },\n      pinchStartHandler: function pinchStartHandler(e) {\n        var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\n        actionData.isNative = !zoomAndPan.panningVisualRangeEnabled();\n\n        if (actionData.cancel) {\n          cancelEvent(e);\n          return;\n        }\n\n        zoomAndPan.actionData = actionData;\n        startAxesViewportChanging(zoomAndPan, \"zoom\", e);\n      },\n      pinchHandler: function pinchHandler(e) {\n        if (!zoomAndPan.actionData) {\n          return;\n        }\n\n        var viewportChanged = axesViewportChanging(zoomAndPan, \"zoom\", e, function (e, actionData, coordField, scale) {\n          return calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale);\n        }, calcCenterForPinch);\n        zoomAndPan.defineTouchBehavior(!viewportChanged, e);\n        !viewportChanged && (zoomAndPan.actionData = null);\n      },\n      pinchEndHandler: function pinchEndHandler(e) {\n        if (!zoomAndPan.actionData) {\n          return;\n        }\n\n        finishAxesViewportChanging(zoomAndPan, \"zoom\", e, function (e, actionData, coordField, scale) {\n          return actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale);\n        });\n        zoomAndPan.actionData = null;\n      },\n      cleanup: function cleanup() {\n        renderer.root.off(EVENTS_NS);\n        zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\n        zoomAndPan.actionData = null;\n        renderer.root.css({\n          \"touch-action\": \"\",\n          \"-ms-touch-action\": \"\"\n        });\n      },\n      setup: function setup(options) {\n        zoomAndPan.cleanup();\n\n        if (!options.argumentAxis.pan) {\n          renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent);\n        }\n\n        if (options.argumentAxis.none && options.valueAxis.none) {\n          return;\n        }\n\n        zoomAndPan.options = options;\n        var rotated = chart.option(\"rotated\");\n\n        if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\n          renderer.root.on(_wheel.name + EVENTS_NS, function (e) {\n            function zoomAxes(axes, coord, delta, onlyAxisToNotify) {\n              axes = sortAxes(axes, onlyAxisToNotify);\n              var zoomStarted = false;\n              axes.some(function (axis) {\n                var translator = axis.getTranslator();\n\n                if (translator.getBusinessRange().isEmpty()) {\n                  return;\n                }\n\n                var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\n                var scale = translator.getMinScale(delta > 0);\n                var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\n                var range = {\n                  startValue: zoom.min,\n                  endValue: zoom.max\n                };\n                var isMinZoom = axis.isZoomingLowerLimitOvercome(\"zoom\", scale, range);\n                var result = axis.handleZooming(isMinZoom ? null : range, {\n                  start: !!silent,\n                  end: !!silent\n                }, e, \"zoom\");\n                isMinZoom ? axis.handleZoomEnd() : zoomStarted = true;\n                return onlyAxisToNotify && result.isPrevented;\n              });\n              return !!zoomStarted;\n            }\n\n            var coords = calcCenterForDrag(e);\n            var axesZoomed = false;\n            var targetAxes;\n\n            if (options.valueAxis.zoom) {\n              targetAxes = chart._valueAxes.filter(function (axis) {\n                return checkCoords(canvasToRect(axis.getCanvas()), coords);\n              });\n\n              if (0 === targetAxes.length) {\n                var targetCanvas = chart._valueAxes.reduce(function (r, axis) {\n                  if (!r && axis.coordsIn(coords.x, coords.y)) {\n                    r = axis.getCanvas();\n                  }\n\n                  return r;\n                }, null);\n\n                if (targetCanvas) {\n                  targetAxes = chart._valueAxes.filter(function (axis) {\n                    return checkCoords(canvasToRect(axis.getCanvas()), {\n                      x: targetCanvas.left,\n                      y: targetCanvas.top\n                    });\n                  });\n                }\n              }\n\n              axesZoomed |= zoomAxes(targetAxes, rotated ? coords.x : coords.y, e.delta);\n            }\n\n            if (options.argumentAxis.zoom) {\n              var canZoom = chart._argumentAxes.some(function (axis) {\n                if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\n                  return true;\n                }\n\n                return false;\n              });\n\n              axesZoomed |= canZoom && zoomAxes(chart._argumentAxes, rotated ? coords.y : coords.x, e.delta, chart.getArgumentAxis());\n            }\n\n            if (axesZoomed) {\n              chart._requestChange([\"VISUAL_RANGE\"]);\n\n              zoomAndPan.panningVisualRangeEnabled(targetAxes) && preventDefaults(e);\n            }\n          });\n        }\n\n        if (options.allowTouchGestures) {\n          if (options.argumentAxis.zoom || options.valueAxis.zoom) {\n            renderer.root.on(PINCH_START_EVENT_NAME, {\n              passive: false\n            }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\n              passive: false\n            }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler);\n          }\n        }\n\n        renderer.root.on(DRAG_START_EVENT_NAME, {\n          immediate: true,\n          passive: false\n        }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\n          immediate: true,\n          passive: false\n        }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\n\n        if (options.argumentAxis.pan) {\n          renderer.root.on(SCROLL_BAR_START_EVENT_NAME, function (e) {\n            zoomAndPan.actionData = {\n              valueAxes: [],\n              offset: {\n                x: 0,\n                y: 0\n              },\n              center: {\n                x: 0,\n                y: 0\n              }\n            };\n            preventDefaults(e);\n            startAxesViewportChanging(zoomAndPan, \"pan\", e);\n          }).on(SCROLL_BAR_MOVE_EVENT_NAME, function (e) {\n            preventDefaults(e);\n            axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function (e) {\n              return e.offset;\n            });\n          }).on(SCROLL_BAR_END_EVENT_NAME, function (e) {\n            preventDefaults(e);\n            finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\n            zoomAndPan.actionData = null;\n          });\n        }\n      },\n      defineTouchBehavior: function defineTouchBehavior(isDefault, e) {\n        zoomAndPan.actionData && (zoomAndPan.actionData.isNative = isDefault);\n\n        if (!isDefault) {\n          preventDefaults(e);\n        }\n      },\n      panningVisualRangeEnabled: function panningVisualRangeEnabled(targetAxes) {\n        if (null === targetAxes || void 0 === targetAxes ? void 0 : targetAxes.length) {\n          return targetAxes.some(function (axis) {\n            return !axis.isExtremePosition(false) || !axis.isExtremePosition(true);\n          });\n        }\n\n        var enablePanByValueAxis = chart._valueAxes.some(function (axis) {\n          return !axis.isExtremePosition(false) || !axis.isExtremePosition(true);\n        });\n\n        var enablePanByArgumentAxis = chart._argumentAxes.some(function (axis) {\n          return !axis.isExtremePosition(false) || !axis.isExtremePosition(true);\n        });\n\n        return enablePanByValueAxis || enablePanByArgumentAxis;\n      }\n    };\n    this._zoomAndPan = zoomAndPan;\n  },\n  members: {\n    _setupZoomAndPan: function _setupZoomAndPan() {\n      this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"));\n    }\n  },\n  dispose: function dispose() {\n    this._zoomAndPan.cleanup();\n  },\n  customize: function customize(constructor) {\n    constructor.addChange({\n      code: \"ZOOM_AND_PAN\",\n      handler: function handler() {\n        this._setupZoomAndPan();\n      },\n      isThemeDependent: true,\n      isOptionChange: true,\n      option: \"zoomAndPan\"\n    });\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/chart_components/zoom_and_pan.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_type","require","_extend","_utils","_wheel","transformEvents","_interopRequireWildcard","_drag","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","EVENTS_NS","DRAG_START_EVENT_NAME","start","DRAG_EVENT_NAME","move","DRAG_END_EVENT_NAME","end","PINCH_START_EVENT_NAME","pinchstart","PINCH_EVENT_NAME","pinch","PINCH_END_EVENT_NAME","pinchend","SCROLL_BAR_START_EVENT_NAME","SCROLL_BAR_MOVE_EVENT_NAME","SCROLL_BAR_END_EVENT_NAME","GESTURE_TIMEOUT","MIN_DRAG_DELTA","_min","Math","min","_max","max","_abs","abs","canvasToRect","canvas","x","left","y","top","width","right","height","bottom","checkCoords","rect","coords","sortAxes","axes","onlyAxisToNotify","sort","a","b","isNotEmptyAxisBusinessRange","axis","getTranslator","getBusinessRange","isEmpty","_default","name","init","chart","renderer","_renderer","cancelEvent","e","originalEvent","cancelable","cancel","startAxesViewportChanging","zoomAndPan","actionField","options","actionData","argumentAxis","push","getArgumentAxis","valueAxis","concat","valueAxes","reduce","isPrevented","handleZooming","axesViewportChanging","offsetCalc","centerCalc","zoomAxes","criteria","coordField","zoom","zoomed","filter","forEach","getOptions","viewport","visualRange","scale","getEventScale","translate","extend","getZoomBounds","range","adjustRange","getVizRangeObject","isMinZoom","isZoomingLowerLimitOvercome","isDefined","startValue","valueOf","endValue","deltaTranslate","pointerType","type","isMinPosition","isExtremePosition","isMaxPosition","zoomInEnabled","zoomOutEnabled","panningEnabled","inverted","enabled","storeOffset","offset","storeCenter","center","rotated","option","argZoom","valZoom","fallback","_argumentAxes","_requestChange","finishAxesViewportChanging","zoomStarted","silent","handleZoomEnd","length","prepareActionData","action","getCanvas","_lastRenderingTime","curAxisRect","_valueAxes","startCenter","getPointerCoord","rootOffset","getRootOffset","pageX","pageY","calcCenterForPinch","x1","pointers","x2","y1","y2","calcCenterForDrag","calcOffsetForDrag","preventDefaults","preventDefault","stopPropagation","_stopCurrentHandling","dragStartHandler","isTouch","wantPan","pan","wantZoom","panKeyPressed","panKey","normalizeEnum","dragToZoom","_cancelPreventDefault","allowTouchGestures","cancelPanning","panningVisualRangeEnabled","skipEvent","startCoords","attr","dragBoxStyle","append","root","dragHandler","curCanvas","curCoords","zoomArg","zoomVal","deltaOffsetY","deltaOffsetX","dragEndHandler","panIsEmpty","isNative","curCoord","startCoord","some","tr","from","getMinScale","result","argumentAxesZoomed","valueAxesZoomed","dispose","pinchStartHandler","pinchHandler","viewportChanged","defineTouchBehavior","pinchEndHandler","cleanup","off","css","setup","on","none","allowMouseWheel","coord","delta","translator","axesZoomed","targetAxes","targetCanvas","r","coordsIn","canZoom","passive","immediate","isDefault","enablePanByValueAxis","enablePanByArgumentAxis","_zoomAndPan","members","_setupZoomAndPan","_themeManager","customize","addChange","code","handler","isThemeDependent","isOptionChange","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/zoom_and_pan.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _wheel = require(\"../../events/core/wheel\");\r\nvar transformEvents = _interopRequireWildcard(require(\"../../events/transform\"));\r\nvar _drag = require(\"../../events/drag\");\r\n\r\nfunction _getRequireWildcardCache() {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cache = new WeakMap;\r\n    _getRequireWildcardCache = function() {\r\n        return cache\r\n    };\r\n    return cache\r\n}\r\n\r\nfunction _interopRequireWildcard(obj) {\r\n    if (obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache();\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\nvar EVENTS_NS = \".zoomAndPanNS\";\r\nvar DRAG_START_EVENT_NAME = _drag.start + EVENTS_NS;\r\nvar DRAG_EVENT_NAME = _drag.move + EVENTS_NS;\r\nvar DRAG_END_EVENT_NAME = _drag.end + EVENTS_NS;\r\nvar PINCH_START_EVENT_NAME = transformEvents.pinchstart + EVENTS_NS;\r\nvar PINCH_EVENT_NAME = transformEvents.pinch + EVENTS_NS;\r\nvar PINCH_END_EVENT_NAME = transformEvents.pinchend + EVENTS_NS;\r\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\r\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\r\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\r\nvar GESTURE_TIMEOUT = 300;\r\nvar MIN_DRAG_DELTA = 5;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _abs = Math.abs;\r\n\r\nfunction canvasToRect(canvas) {\r\n    return {\r\n        x: canvas.left,\r\n        y: canvas.top,\r\n        width: canvas.width - canvas.left - canvas.right,\r\n        height: canvas.height - canvas.top - canvas.bottom\r\n    }\r\n}\r\n\r\nfunction checkCoords(rect, coords) {\r\n    var x = coords.x;\r\n    var y = coords.y;\r\n    return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y\r\n}\r\n\r\nfunction sortAxes(axes, onlyAxisToNotify) {\r\n    if (onlyAxisToNotify) {\r\n        axes = axes.sort(function(a, b) {\r\n            if (a === onlyAxisToNotify) {\r\n                return -1\r\n            }\r\n            if (b === onlyAxisToNotify) {\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    return axes\r\n}\r\n\r\nfunction isNotEmptyAxisBusinessRange(axis) {\r\n    return !axis.getTranslator().getBusinessRange().isEmpty()\r\n}\r\nvar _default = {\r\n    name: \"zoom_and_pan\",\r\n    init: function() {\r\n        var chart = this;\r\n        var renderer = this._renderer;\r\n\r\n        function cancelEvent(e) {\r\n            if (e.originalEvent) {\r\n                cancelEvent(e.originalEvent)\r\n            }\r\n            if (false !== e.cancelable) {\r\n                e.cancel = true\r\n            }\r\n        }\r\n\r\n        function startAxesViewportChanging(zoomAndPan, actionField, e) {\r\n            var options = zoomAndPan.options;\r\n            var actionData = zoomAndPan.actionData;\r\n            var axes = [];\r\n            if (options.argumentAxis[actionField]) {\r\n                axes.push(chart.getArgumentAxis())\r\n            }\r\n            if (options.valueAxis[actionField]) {\r\n                axes = axes.concat(actionData.valueAxes)\r\n            }\r\n            axes.reduce(function(isPrevented, axis) {\r\n                if (isPrevented) {\r\n                    return isPrevented\r\n                }\r\n                if (isNotEmptyAxisBusinessRange(axis)) {\r\n                    return axis.handleZooming(null, {\r\n                        end: true\r\n                    }, e, actionField).isPrevented\r\n                }\r\n                return isPrevented\r\n            }, false) && cancelEvent(e)\r\n        }\r\n\r\n        function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\r\n            function zoomAxes(axes, criteria, coordField, e, actionData) {\r\n                var zoom = {\r\n                    zoomed: false\r\n                };\r\n                criteria && axes.filter(isNotEmptyAxisBusinessRange).forEach(function(axis) {\r\n                    var options = axis.getOptions();\r\n                    var viewport = axis.visualRange();\r\n                    var scale = axis.getTranslator().getEventScale(e);\r\n                    var translate = -offsetCalc(e, actionData, coordField, scale);\r\n                    zoom = (0, _extend.extend)(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\r\n                    var range = axis.adjustRange((0, _utils.getVizRangeObject)([zoom.min, zoom.max]));\r\n                    var isMinZoom = axis.isZoomingLowerLimitOvercome(actionField, scale, range);\r\n                    if (!(0, _type.isDefined)(viewport) || viewport.startValue.valueOf() !== range.startValue.valueOf() || viewport.endValue.valueOf() !== range.endValue.valueOf()) {\r\n                        axis.handleZooming(isMinZoom ? null : range, {\r\n                            start: true,\r\n                            end: true\r\n                        }, e, actionField);\r\n                        if (!isMinZoom) {\r\n                            zoom.zoomed = true;\r\n                            zoom.deltaTranslate = translate - zoom.translate\r\n                        }\r\n                    } else {\r\n                        if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\r\n                            var isMinPosition = axis.isExtremePosition(false);\r\n                            var isMaxPosition = axis.isExtremePosition(true);\r\n                            var zoomInEnabled = scale > 1 && !isMinZoom;\r\n                            var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\r\n                            var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\r\n                            zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled\r\n                        }\r\n                    }\r\n                });\r\n                return zoom\r\n            }\r\n\r\n            function storeOffset(e, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate\r\n                }\r\n            }\r\n\r\n            function storeCenter(center, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.center[coordField] = center[coordField] + zoom.deltaTranslate\r\n                }\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var argZoom = {};\r\n            var valZoom = {};\r\n            if (!actionData.fallback) {\r\n                argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\r\n                valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\r\n                chart._requestChange([\"VISUAL_RANGE\"]);\r\n                storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n                storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\")\r\n            }\r\n            var center = centerCalc(e);\r\n            storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n            storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\r\n            if (!argZoom.zoomed && !valZoom.zoomed) {\r\n                actionData.center = center\r\n            }\r\n            return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled\r\n        }\r\n\r\n        function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\r\n            function zoomAxes(axes, criteria, coordField, e, actionData, onlyAxisToNotify) {\r\n                var zoomStarted = false;\r\n                criteria && axes.forEach(function(axis) {\r\n                    var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\r\n                    var scale = e.scale || 1;\r\n                    var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\r\n                    var range = {\r\n                        startValue: zoom.min,\r\n                        endValue: zoom.max\r\n                    };\r\n                    var isMinZoom = axis.isZoomingLowerLimitOvercome(actionField, scale, range);\r\n                    axis.handleZooming(isMinZoom ? null : range, {\r\n                        start: true,\r\n                        end: silent\r\n                    }, e, actionField);\r\n                    isMinZoom ? axis.handleZoomEnd() : zoomStarted = true\r\n                });\r\n                return zoomStarted\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var zoomStarted = true;\r\n            if (actionData.fallback) {\r\n                zoomStarted &= zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData, chart.getArgumentAxis());\r\n                zoomStarted |= zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData)\r\n            } else {\r\n                var axes = [];\r\n                if (options.argumentAxis[actionField]) {\r\n                    axes.push(chart.getArgumentAxis())\r\n                }\r\n                if (options.valueAxis[actionField]) {\r\n                    axes = axes.concat(actionData.valueAxes)\r\n                }\r\n                axes.filter(isNotEmptyAxisBusinessRange).forEach(function(axis) {\r\n                    axis.handleZooming(null, {\r\n                        start: true\r\n                    }, e, actionField)\r\n                });\r\n                zoomStarted = zoomStarted && axes.length\r\n            }\r\n            zoomStarted && chart._requestChange([\"VISUAL_RANGE\"])\r\n        }\r\n\r\n        function prepareActionData(coords, action) {\r\n            var axes = chart._argumentAxes.filter(function(axis) {\r\n                return checkCoords(canvasToRect(axis.getCanvas()), coords)\r\n            });\r\n            return {\r\n                fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\r\n                cancel: !axes.length || !(0, _type.isDefined)(action),\r\n                action: action,\r\n                curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\r\n                valueAxes: axes.length && chart._valueAxes.filter(function(axis) {\r\n                    return checkCoords(canvasToRect(axis.getCanvas()), coords)\r\n                }),\r\n                offset: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                center: coords,\r\n                startCenter: coords\r\n            }\r\n        }\r\n\r\n        function getPointerCoord(rect, e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\r\n                y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\r\n            }\r\n        }\r\n\r\n        function calcCenterForPinch(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            var x1 = e.pointers[0].pageX;\r\n            var x2 = e.pointers[1].pageX;\r\n            var y1 = e.pointers[0].pageY;\r\n            var y2 = e.pointers[1].pageY;\r\n            return {\r\n                x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\r\n                y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcCenterForDrag(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: e.pageX - rootOffset.left,\r\n                y: e.pageY - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcOffsetForDrag(e, actionData, coordField) {\r\n            return e.offset[coordField] - actionData.offset[coordField]\r\n        }\r\n\r\n        function preventDefaults(e) {\r\n            if (false !== e.cancelable) {\r\n                e.preventDefault();\r\n                e.stopPropagation()\r\n            }\r\n            chart._stopCurrentHandling()\r\n        }\r\n        var zoomAndPan = {\r\n            dragStartHandler: function(e) {\r\n                var options = zoomAndPan.options;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\r\n                var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\r\n                var panKeyPressed = (0, _type.isDefined)(options.panKey) && e[(0, _utils.normalizeEnum)(options.panKey) + \"Key\"];\r\n                var dragToZoom = options.dragToZoom;\r\n                var action;\r\n                e._cancelPreventDefault = true;\r\n                if (isTouch) {\r\n                    if (options.allowTouchGestures && wantPan) {\r\n                        var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\r\n                        action = cancelPanning ? null : \"pan\"\r\n                    }\r\n                } else {\r\n                    if (dragToZoom && wantPan && panKeyPressed) {\r\n                        action = \"pan\"\r\n                    } else {\r\n                        if (!dragToZoom && wantPan) {\r\n                            action = \"pan\"\r\n                        } else {\r\n                            if (dragToZoom && wantZoom) {\r\n                                action = \"zoom\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var actionData = prepareActionData(calcCenterForDrag(e), action);\r\n                if (actionData.cancel) {\r\n                    zoomAndPan.skipEvent = false;\r\n                    if (false !== e.cancelable) {\r\n                        e.cancel = true\r\n                    }\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                if (\"zoom\" === action) {\r\n                    actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root)\r\n                } else {\r\n                    startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                }\r\n            },\r\n            dragHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                e._cancelPreventDefault = true;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\r\n                    return\r\n                }\r\n                if (\"zoom\" === actionData.action) {\r\n                    preventDefaults(e);\r\n                    var curCanvas = actionData.curAxisRect;\r\n                    var startCoords = actionData.startCoords;\r\n                    var curCoords = getPointerCoord(curCanvas, e);\r\n                    var zoomArg = options.argumentAxis.zoom;\r\n                    var zoomVal = options.valueAxis.zoom;\r\n                    var rect = {\r\n                        x: _min(startCoords.x, curCoords.x),\r\n                        y: _min(startCoords.y, curCoords.y),\r\n                        width: _abs(startCoords.x - curCoords.x),\r\n                        height: _abs(startCoords.y - curCoords.y)\r\n                    };\r\n                    if (!zoomArg || !zoomVal) {\r\n                        if (!zoomArg && !rotated || !zoomVal && rotated) {\r\n                            rect.x = curCanvas.x;\r\n                            rect.width = curCanvas.width\r\n                        } else {\r\n                            rect.y = curCanvas.y;\r\n                            rect.height = curCanvas.height\r\n                        }\r\n                    }\r\n                    actionData.rect.attr(rect)\r\n                } else {\r\n                    if (\"pan\" === actionData.action) {\r\n                        axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function(e) {\r\n                            return e.offset\r\n                        });\r\n                        var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\r\n                        var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\r\n                        if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\r\n                            return\r\n                        }\r\n                        preventDefaults(e)\r\n                    }\r\n                }\r\n            },\r\n            dragEndHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\r\n                    return\r\n                }(!isTouch || !zoomAndPan.actionData.isNative) && preventDefaults(e);\r\n                if (\"zoom\" === actionData.action) {\r\n                    var zoomAxes = function(axes, criteria, coordField, startCoords, curCoords, onlyAxisToNotify) {\r\n                        axes = sortAxes(axes, onlyAxisToNotify);\r\n                        var curCoord = curCoords[coordField];\r\n                        var startCoord = startCoords[coordField];\r\n                        var zoomStarted = false;\r\n                        if (criteria && _abs(curCoord - startCoord) > MIN_DRAG_DELTA) {\r\n                            axes.some(function(axis) {\r\n                                var tr = axis.getTranslator();\r\n                                if (tr.getBusinessRange().isEmpty()) {\r\n                                    return\r\n                                }\r\n                                var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\r\n                                var range = [tr.from(startCoord), tr.from(curCoord)];\r\n                                var isMinZoom = axis.isZoomingLowerLimitOvercome(actionData.action, tr.getMinScale(true), range);\r\n                                var result = axis.handleZooming(isMinZoom ? null : range, {\r\n                                    start: !!silent,\r\n                                    end: !!silent\r\n                                }, e, actionData.action);\r\n                                isMinZoom ? axis.handleZoomEnd() : zoomStarted = true;\r\n                                return onlyAxisToNotify && result.isPrevented\r\n                            })\r\n                        }\r\n                        return zoomStarted\r\n                    };\r\n                    var curCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    var argumentAxesZoomed = zoomAxes(chart._argumentAxes, options.argumentAxis.zoom, rotated ? \"y\" : \"x\", actionData.startCoords, curCoords, chart.getArgumentAxis());\r\n                    var valueAxesZoomed = zoomAxes(actionData.valueAxes, options.valueAxis.zoom, rotated ? \"x\" : \"y\", actionData.startCoords, curCoords);\r\n                    if (valueAxesZoomed || argumentAxesZoomed) {\r\n                        chart._requestChange([\"VISUAL_RANGE\"])\r\n                    }\r\n                    actionData.rect.dispose()\r\n                } else {\r\n                    if (\"pan\" === actionData.action) {\r\n                        finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag)\r\n                    }\r\n                }\r\n                zoomAndPan.actionData = null\r\n            },\r\n            pinchStartHandler: function(e) {\r\n                var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\r\n                actionData.isNative = !zoomAndPan.panningVisualRangeEnabled();\r\n                if (actionData.cancel) {\r\n                    cancelEvent(e);\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                startAxesViewportChanging(zoomAndPan, \"zoom\", e)\r\n            },\r\n            pinchHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                var viewportChanged = axesViewportChanging(zoomAndPan, \"zoom\", e, function(e, actionData, coordField, scale) {\r\n                    return calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale)\r\n                }, calcCenterForPinch);\r\n                zoomAndPan.defineTouchBehavior(!viewportChanged, e);\r\n                !viewportChanged && (zoomAndPan.actionData = null)\r\n            },\r\n            pinchEndHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                finishAxesViewportChanging(zoomAndPan, \"zoom\", e, function(e, actionData, coordField, scale) {\r\n                    return actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale)\r\n                });\r\n                zoomAndPan.actionData = null\r\n            },\r\n            cleanup: function() {\r\n                renderer.root.off(EVENTS_NS);\r\n                zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\r\n                zoomAndPan.actionData = null;\r\n                renderer.root.css({\r\n                    \"touch-action\": \"\",\r\n                    \"-ms-touch-action\": \"\"\r\n                })\r\n            },\r\n            setup: function(options) {\r\n                zoomAndPan.cleanup();\r\n                if (!options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent)\r\n                }\r\n                if (options.argumentAxis.none && options.valueAxis.none) {\r\n                    return\r\n                }\r\n                zoomAndPan.options = options;\r\n                var rotated = chart.option(\"rotated\");\r\n                if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\r\n                    renderer.root.on(_wheel.name + EVENTS_NS, function(e) {\r\n                        function zoomAxes(axes, coord, delta, onlyAxisToNotify) {\r\n                            axes = sortAxes(axes, onlyAxisToNotify);\r\n                            var zoomStarted = false;\r\n                            axes.some(function(axis) {\r\n                                var translator = axis.getTranslator();\r\n                                if (translator.getBusinessRange().isEmpty()) {\r\n                                    return\r\n                                }\r\n                                var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\r\n                                var scale = translator.getMinScale(delta > 0);\r\n                                var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\r\n                                var range = {\r\n                                    startValue: zoom.min,\r\n                                    endValue: zoom.max\r\n                                };\r\n                                var isMinZoom = axis.isZoomingLowerLimitOvercome(\"zoom\", scale, range);\r\n                                var result = axis.handleZooming(isMinZoom ? null : range, {\r\n                                    start: !!silent,\r\n                                    end: !!silent\r\n                                }, e, \"zoom\");\r\n                                isMinZoom ? axis.handleZoomEnd() : zoomStarted = true;\r\n                                return onlyAxisToNotify && result.isPrevented\r\n                            });\r\n                            return !!zoomStarted\r\n                        }\r\n                        var coords = calcCenterForDrag(e);\r\n                        var axesZoomed = false;\r\n                        var targetAxes;\r\n                        if (options.valueAxis.zoom) {\r\n                            targetAxes = chart._valueAxes.filter(function(axis) {\r\n                                return checkCoords(canvasToRect(axis.getCanvas()), coords)\r\n                            });\r\n                            if (0 === targetAxes.length) {\r\n                                var targetCanvas = chart._valueAxes.reduce(function(r, axis) {\r\n                                    if (!r && axis.coordsIn(coords.x, coords.y)) {\r\n                                        r = axis.getCanvas()\r\n                                    }\r\n                                    return r\r\n                                }, null);\r\n                                if (targetCanvas) {\r\n                                    targetAxes = chart._valueAxes.filter(function(axis) {\r\n                                        return checkCoords(canvasToRect(axis.getCanvas()), {\r\n                                            x: targetCanvas.left,\r\n                                            y: targetCanvas.top\r\n                                        })\r\n                                    })\r\n                                }\r\n                            }\r\n                            axesZoomed |= zoomAxes(targetAxes, rotated ? coords.x : coords.y, e.delta)\r\n                        }\r\n                        if (options.argumentAxis.zoom) {\r\n                            var canZoom = chart._argumentAxes.some(function(axis) {\r\n                                if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            });\r\n                            axesZoomed |= canZoom && zoomAxes(chart._argumentAxes, rotated ? coords.y : coords.x, e.delta, chart.getArgumentAxis())\r\n                        }\r\n                        if (axesZoomed) {\r\n                            chart._requestChange([\"VISUAL_RANGE\"]);\r\n                            zoomAndPan.panningVisualRangeEnabled(targetAxes) && preventDefaults(e)\r\n                        }\r\n                    })\r\n                }\r\n                if (options.allowTouchGestures) {\r\n                    if (options.argumentAxis.zoom || options.valueAxis.zoom) {\r\n                        renderer.root.on(PINCH_START_EVENT_NAME, {\r\n                            passive: false\r\n                        }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\r\n                            passive: false\r\n                        }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler)\r\n                    }\r\n                }\r\n                renderer.root.on(DRAG_START_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\r\n                if (options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, function(e) {\r\n                        zoomAndPan.actionData = {\r\n                            valueAxes: [],\r\n                            offset: {\r\n                                x: 0,\r\n                                y: 0\r\n                            },\r\n                            center: {\r\n                                x: 0,\r\n                                y: 0\r\n                            }\r\n                        };\r\n                        preventDefaults(e);\r\n                        startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                    }).on(SCROLL_BAR_MOVE_EVENT_NAME, function(e) {\r\n                        preventDefaults(e);\r\n                        axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, function(e) {\r\n                            return e.offset\r\n                        })\r\n                    }).on(SCROLL_BAR_END_EVENT_NAME, function(e) {\r\n                        preventDefaults(e);\r\n                        finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\r\n                        zoomAndPan.actionData = null\r\n                    })\r\n                }\r\n            },\r\n            defineTouchBehavior: function(isDefault, e) {\r\n                zoomAndPan.actionData && (zoomAndPan.actionData.isNative = isDefault);\r\n                if (!isDefault) {\r\n                    preventDefaults(e)\r\n                }\r\n            },\r\n            panningVisualRangeEnabled: function(targetAxes) {\r\n                if (null === targetAxes || void 0 === targetAxes ? void 0 : targetAxes.length) {\r\n                    return targetAxes.some(function(axis) {\r\n                        return !axis.isExtremePosition(false) || !axis.isExtremePosition(true)\r\n                    })\r\n                }\r\n                var enablePanByValueAxis = chart._valueAxes.some(function(axis) {\r\n                    return !axis.isExtremePosition(false) || !axis.isExtremePosition(true)\r\n                });\r\n                var enablePanByArgumentAxis = chart._argumentAxes.some(function(axis) {\r\n                    return !axis.isExtremePosition(false) || !axis.isExtremePosition(true)\r\n                });\r\n                return enablePanByValueAxis || enablePanByArgumentAxis\r\n            }\r\n        };\r\n        this._zoomAndPan = zoomAndPan\r\n    },\r\n    members: {\r\n        _setupZoomAndPan: function() {\r\n            this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._zoomAndPan.cleanup()\r\n    },\r\n    customize: function(constructor) {\r\n        constructor.addChange({\r\n            code: \"ZOOM_AND_PAN\",\r\n            handler: function() {\r\n                this._setupZoomAndPan()\r\n            },\r\n            isThemeDependent: true,\r\n            isOptionChange: true,\r\n            option: \"zoomAndPan\"\r\n        })\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}