{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/math.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.adjust = adjust;\nexports.getPrecision = getPrecision;\nexports.getExponent = getExponent;\nexports.getRoot = getRoot;\nexports.solveCubicEquation = solveCubicEquation;\nexports.trunc = trunc;\nexports.inRange = exports.fitIntoRange = exports.sign = void 0;\n\nvar _type = require(\"./type\");\n\nvar sign = function sign(value) {\n  if (0 === value) {\n    return 0;\n  }\n\n  return value / Math.abs(value);\n};\n\nexports.sign = sign;\n\nvar fitIntoRange = function fitIntoRange(value, minValue, maxValue) {\n  var isMinValueUndefined = !minValue && 0 !== minValue;\n  var isMaxValueUndefined = !maxValue && 0 !== maxValue;\n  isMinValueUndefined && (minValue = !isMaxValueUndefined ? Math.min(value, maxValue) : value);\n  isMaxValueUndefined && (maxValue = !isMinValueUndefined ? Math.max(value, minValue) : value);\n  return Math.min(Math.max(value, minValue), maxValue);\n};\n\nexports.fitIntoRange = fitIntoRange;\n\nvar inRange = function inRange(value, minValue, maxValue) {\n  return value >= minValue && value <= maxValue;\n};\n\nexports.inRange = inRange;\n\nfunction getExponent(value) {\n  return Math.abs(parseInt(value.toExponential().split(\"e\")[1]));\n}\n\nfunction _isEdgeBug() {\n  var value = 3e-4;\n  var correctValue = \"0.000300\";\n  var precisionValue = 3;\n  return correctValue !== value.toPrecision(precisionValue);\n}\n\nfunction adjust(value, interval) {\n  var precision = getPrecision(interval || 0) + 2;\n  var separatedValue = value.toString().split(\".\");\n  var sourceValue = value;\n  var absValue = Math.abs(value);\n  var separatedAdjustedValue;\n  var isExponentValue = (0, _type.isExponential)(value);\n  var integerPart = absValue > 1 ? 10 : 0;\n\n  if (1 === separatedValue.length) {\n    return value;\n  }\n\n  if (!isExponentValue) {\n    if ((0, _type.isExponential)(interval)) {\n      precision = separatedValue[0].length + getExponent(interval);\n    }\n\n    value = absValue;\n    value = value - Math.floor(value) + integerPart;\n  }\n\n  precision = _isEdgeBug() && getExponent(value) > 6 || precision > 7 ? 15 : 7;\n\n  if (!isExponentValue) {\n    separatedAdjustedValue = parseFloat(value.toPrecision(precision)).toString().split(\".\");\n\n    if (separatedAdjustedValue[0] === integerPart.toString()) {\n      return parseFloat(separatedValue[0] + \".\" + separatedAdjustedValue[1]);\n    }\n  }\n\n  return parseFloat(sourceValue.toPrecision(precision));\n}\n\nfunction getPrecision(value) {\n  var str = value.toString();\n\n  if (str.indexOf(\".\") < 0) {\n    return 0;\n  }\n\n  var mantissa = str.split(\".\");\n  var positionOfDelimiter = mantissa[1].indexOf(\"e\");\n  return positionOfDelimiter >= 0 ? positionOfDelimiter : mantissa[1].length;\n}\n\nfunction getRoot(x, n) {\n  if (x < 0 && n % 2 !== 1) {\n    return NaN;\n  }\n\n  var y = Math.pow(Math.abs(x), 1 / n);\n  return n % 2 === 1 && x < 0 ? -y : y;\n}\n\nfunction solveCubicEquation(a, b, c, d) {\n  var min = 1e-8;\n\n  if (Math.abs(a) < min) {\n    a = b;\n    b = c;\n    c = d;\n\n    if (Math.abs(a) < min) {\n      a = b;\n      b = c;\n\n      if (Math.abs(a) < min) {\n        return [];\n      }\n\n      return [-b / a];\n    }\n\n    var D2 = b * b - 4 * a * c;\n\n    if (Math.abs(D2) < min) {\n      return [-b / (2 * a)];\n    } else {\n      if (D2 > 0) {\n        return [(-b + Math.sqrt(D2)) / (2 * a), (-b - Math.sqrt(D2)) / (2 * a)];\n      }\n    }\n\n    return [];\n  }\n\n  var p = (3 * a * c - b * b) / (3 * a * a);\n  var q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  var roots;\n  var u;\n\n  if (Math.abs(p) < min) {\n    roots = [getRoot(-q, 3)];\n  } else {\n    if (Math.abs(q) < min) {\n      roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n      var D3 = q * q / 4 + p * p * p / 27;\n\n      if (Math.abs(D3) < min) {\n        roots = [-1.5 * q / p, 3 * q / p];\n      } else {\n        if (D3 > 0) {\n          u = getRoot(-q / 2 - Math.sqrt(D3), 3);\n          roots = [u - p / (3 * u)];\n        } else {\n          u = 2 * Math.sqrt(-p / 3);\n          var t = Math.acos(3 * q / p / u) / 3;\n          var k = 2 * Math.PI / 3;\n          roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)];\n        }\n      }\n    }\n  }\n\n  for (var i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n\n  return roots;\n}\n\nfunction trunc(value) {\n  return Math.trunc ? Math.trunc(value) : value > 0 ? Math.floor(value) : Math.ceil(value);\n}","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/core/utils/math.js"],"names":["exports","adjust","getPrecision","getExponent","getRoot","solveCubicEquation","trunc","inRange","fitIntoRange","sign","_type","require","value","Math","abs","minValue","maxValue","isMinValueUndefined","isMaxValueUndefined","min","max","parseInt","toExponential","split","_isEdgeBug","correctValue","precisionValue","toPrecision","interval","precision","separatedValue","toString","sourceValue","absValue","separatedAdjustedValue","isExponentValue","isExponential","integerPart","length","floor","parseFloat","str","indexOf","mantissa","positionOfDelimiter","x","n","NaN","y","pow","a","b","c","d","D2","sqrt","p","q","roots","u","concat","D3","t","acos","k","PI","cos","i","ceil"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/math.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.adjust = adjust;\r\nexports.getPrecision = getPrecision;\r\nexports.getExponent = getExponent;\r\nexports.getRoot = getRoot;\r\nexports.solveCubicEquation = solveCubicEquation;\r\nexports.trunc = trunc;\r\nexports.inRange = exports.fitIntoRange = exports.sign = void 0;\r\nvar _type = require(\"./type\");\r\nvar sign = function(value) {\r\n    if (0 === value) {\r\n        return 0\r\n    }\r\n    return value / Math.abs(value)\r\n};\r\nexports.sign = sign;\r\nvar fitIntoRange = function(value, minValue, maxValue) {\r\n    var isMinValueUndefined = !minValue && 0 !== minValue;\r\n    var isMaxValueUndefined = !maxValue && 0 !== maxValue;\r\n    isMinValueUndefined && (minValue = !isMaxValueUndefined ? Math.min(value, maxValue) : value);\r\n    isMaxValueUndefined && (maxValue = !isMinValueUndefined ? Math.max(value, minValue) : value);\r\n    return Math.min(Math.max(value, minValue), maxValue)\r\n};\r\nexports.fitIntoRange = fitIntoRange;\r\nvar inRange = function(value, minValue, maxValue) {\r\n    return value >= minValue && value <= maxValue\r\n};\r\nexports.inRange = inRange;\r\n\r\nfunction getExponent(value) {\r\n    return Math.abs(parseInt(value.toExponential().split(\"e\")[1]))\r\n}\r\n\r\nfunction _isEdgeBug() {\r\n    var value = 3e-4;\r\n    var correctValue = \"0.000300\";\r\n    var precisionValue = 3;\r\n    return correctValue !== value.toPrecision(precisionValue)\r\n}\r\n\r\nfunction adjust(value, interval) {\r\n    var precision = getPrecision(interval || 0) + 2;\r\n    var separatedValue = value.toString().split(\".\");\r\n    var sourceValue = value;\r\n    var absValue = Math.abs(value);\r\n    var separatedAdjustedValue;\r\n    var isExponentValue = (0, _type.isExponential)(value);\r\n    var integerPart = absValue > 1 ? 10 : 0;\r\n    if (1 === separatedValue.length) {\r\n        return value\r\n    }\r\n    if (!isExponentValue) {\r\n        if ((0, _type.isExponential)(interval)) {\r\n            precision = separatedValue[0].length + getExponent(interval)\r\n        }\r\n        value = absValue;\r\n        value = value - Math.floor(value) + integerPart\r\n    }\r\n    precision = _isEdgeBug() && getExponent(value) > 6 || precision > 7 ? 15 : 7;\r\n    if (!isExponentValue) {\r\n        separatedAdjustedValue = parseFloat(value.toPrecision(precision)).toString().split(\".\");\r\n        if (separatedAdjustedValue[0] === integerPart.toString()) {\r\n            return parseFloat(separatedValue[0] + \".\" + separatedAdjustedValue[1])\r\n        }\r\n    }\r\n    return parseFloat(sourceValue.toPrecision(precision))\r\n}\r\n\r\nfunction getPrecision(value) {\r\n    var str = value.toString();\r\n    if (str.indexOf(\".\") < 0) {\r\n        return 0\r\n    }\r\n    var mantissa = str.split(\".\");\r\n    var positionOfDelimiter = mantissa[1].indexOf(\"e\");\r\n    return positionOfDelimiter >= 0 ? positionOfDelimiter : mantissa[1].length\r\n}\r\n\r\nfunction getRoot(x, n) {\r\n    if (x < 0 && n % 2 !== 1) {\r\n        return NaN\r\n    }\r\n    var y = Math.pow(Math.abs(x), 1 / n);\r\n    return n % 2 === 1 && x < 0 ? -y : y\r\n}\r\n\r\nfunction solveCubicEquation(a, b, c, d) {\r\n    var min = 1e-8;\r\n    if (Math.abs(a) < min) {\r\n        a = b;\r\n        b = c;\r\n        c = d;\r\n        if (Math.abs(a) < min) {\r\n            a = b;\r\n            b = c;\r\n            if (Math.abs(a) < min) {\r\n                return []\r\n            }\r\n            return [-b / a]\r\n        }\r\n        var D2 = b * b - 4 * a * c;\r\n        if (Math.abs(D2) < min) {\r\n            return [-b / (2 * a)]\r\n        } else {\r\n            if (D2 > 0) {\r\n                return [(-b + Math.sqrt(D2)) / (2 * a), (-b - Math.sqrt(D2)) / (2 * a)]\r\n            }\r\n        }\r\n        return []\r\n    }\r\n    var p = (3 * a * c - b * b) / (3 * a * a);\r\n    var q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\r\n    var roots;\r\n    var u;\r\n    if (Math.abs(p) < min) {\r\n        roots = [getRoot(-q, 3)]\r\n    } else {\r\n        if (Math.abs(q) < min) {\r\n            roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : [])\r\n        } else {\r\n            var D3 = q * q / 4 + p * p * p / 27;\r\n            if (Math.abs(D3) < min) {\r\n                roots = [-1.5 * q / p, 3 * q / p]\r\n            } else {\r\n                if (D3 > 0) {\r\n                    u = getRoot(-q / 2 - Math.sqrt(D3), 3);\r\n                    roots = [u - p / (3 * u)]\r\n                } else {\r\n                    u = 2 * Math.sqrt(-p / 3);\r\n                    var t = Math.acos(3 * q / p / u) / 3;\r\n                    var k = 2 * Math.PI / 3;\r\n                    roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < roots.length; i++) {\r\n        roots[i] -= b / (3 * a)\r\n    }\r\n    return roots\r\n}\r\n\r\nfunction trunc(value) {\r\n    return Math.trunc ? Math.trunc(value) : value > 0 ? Math.floor(value) : Math.ceil(value)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}