{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/polar_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.polarBarPoint = exports.polarSymbolPoint = void 0;\n\nvar _extend2 = require(\"../../../core/utils/extend\");\n\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\n\nvar _bar_point = _interopRequireDefault(require(\"./bar_point\"));\n\nvar _pie_point = _interopRequireDefault(require(\"./pie_point\"));\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _utils = require(\"../../core/utils\");\n\nvar _consts = _interopRequireDefault(require(\"../../components/consts\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _extend = _extend2.extend;\nvar _math = Math;\nvar _max = _math.max;\nvar RADIAL_LABEL_INDENT = _consts.default.radialLabelIndent;\nvar ERROR_BARS_ANGLE_OFFSET = 90;\nvar CANVAS_POSITION_END = \"canvas_position_end\";\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\n\nvar polarSymbolPoint = _extend({}, _symbol_point.default, {\n  _getLabelCoords: _pie_point.default._getLabelCoords,\n  _getElementCoords: _pie_point.default._getElementCoords,\n  _moveLabelOnCanvas: function (coord, visibleArea, labelBBox) {\n    var x = coord.x;\n    var y = coord.y;\n\n    if (visibleArea.minX > x) {\n      x = visibleArea.minX;\n    }\n\n    if (visibleArea.maxX < x + labelBBox.width) {\n      x = visibleArea.maxX - labelBBox.width;\n    }\n\n    if (visibleArea.minY > y) {\n      y = visibleArea.minY;\n    }\n\n    if (visibleArea.maxY < y + labelBBox.height) {\n      y = visibleArea.maxY - labelBBox.height;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getLabelPosition: function () {\n    return \"outside\";\n  },\n  _getCoords: function (argument, value) {\n    var axis = this.series.getValueAxis();\n    var startAngle = axis.getAngles()[0];\n\n    var angle = this._getArgTranslator().translate(argument);\n\n    var radius = this._getValTranslator().translate(value);\n\n    var coords = (0, _utils.convertPolarToXY)(axis.getCenter(), axis.getAngles()[0], angle, radius);\n    coords.angle = angle + startAngle - 90, coords.radius = radius;\n    return coords;\n  },\n  _translate: function () {\n    var that = this;\n    var center = that.series.getValueAxis().getCenter();\n\n    var coord = that._getCoords(that.argument, that.value);\n\n    var maxRadius = that._getValTranslator().translate(CANVAS_POSITION_END);\n\n    var normalizedRadius = (0, _type.isDefined)(coord.radius) && coord.radius >= 0 ? coord.radius : null;\n    that.vx = (0, _utils.normalizeAngle)(coord.angle);\n    that.vy = that.radiusOuter = that.radiusLabels = normalizedRadius;\n    that.radiusLabels += RADIAL_LABEL_INDENT;\n    that.radius = normalizedRadius;\n    that.middleAngle = -coord.angle;\n    that.angle = -coord.angle;\n    that.x = coord.x;\n    that.y = coord.y;\n    that.defaultX = that.centerX = center.x;\n    that.defaultY = that.centerY = center.y;\n\n    that._translateErrorBars();\n\n    that.inVisibleArea = that._checkRadiusForVisibleArea(normalizedRadius, maxRadius);\n  },\n  _checkRadiusForVisibleArea: function (radius, maxRadius) {\n    return (0, _type.isDefined)(radius) && radius <= maxRadius;\n  },\n  _translateErrorBars: function () {\n    var that = this;\n    var errorBars = that._options.errorBars;\n\n    var translator = that._getValTranslator();\n\n    if (!errorBars) {\n      return;\n    }\n\n    (0, _type.isDefined)(that.lowError) && (that._lowErrorCoord = that.centerY - translator.translate(that.lowError));\n    (0, _type.isDefined)(that.highError) && (that._highErrorCoord = that.centerY - translator.translate(that.highError));\n    that._errorBarPos = that.centerX;\n    that._baseErrorBarPos = \"stdDeviation\" === errorBars.type ? that._lowErrorCoord + (that._highErrorCoord - that._lowErrorCoord) / 2 : that.centerY - that.radius;\n  },\n  _getTranslates: function (animationEnabled) {\n    return animationEnabled ? this.getDefaultCoords() : {\n      x: this.x,\n      y: this.y\n    };\n  },\n  getDefaultCoords: function () {\n    var cosSin = (0, _utils.getCosAndSin)(-this.angle);\n\n    var radius = this._getValTranslator().translate(CANVAS_POSITION_DEFAULT);\n\n    var x = this.defaultX + radius * cosSin.cos;\n    var y = this.defaultY + radius * cosSin.sin;\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _addLabelAlignmentAndOffset: function (label, coord) {\n    return coord;\n  },\n  _checkLabelPosition: function (label, coord) {\n    var that = this;\n\n    var visibleArea = that._getVisibleArea();\n\n    var graphicBBox = that._getGraphicBBox();\n\n    if (that._isPointInVisibleArea(visibleArea, graphicBBox)) {\n      coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect());\n    }\n\n    return coord;\n  },\n  _getErrorBarSettings: function (errorBarOptions, animationEnabled) {\n    var settings = _symbol_point.default._getErrorBarSettings.call(this, errorBarOptions, animationEnabled);\n\n    settings.rotate = ERROR_BARS_ANGLE_OFFSET - this.angle;\n    settings.rotateX = this.centerX;\n    settings.rotateY = this.centerY;\n    return settings;\n  },\n  getCoords: function (min) {\n    return min ? this.getDefaultCoords() : {\n      x: this.x,\n      y: this.y\n    };\n  }\n});\n\nexports.polarSymbolPoint = polarSymbolPoint;\n\nvar polarBarPoint = _extend({}, _bar_point.default, {\n  _translateErrorBars: polarSymbolPoint._translateErrorBars,\n  _getErrorBarSettings: polarSymbolPoint._getErrorBarSettings,\n  _moveLabelOnCanvas: polarSymbolPoint._moveLabelOnCanvas,\n  _getLabelCoords: _pie_point.default._getLabelCoords,\n  _getElementCoords: _pie_point.default._getElementCoords,\n  _getLabelConnector: _pie_point.default._getLabelConnector,\n  getTooltipParams: _pie_point.default.getTooltipParams,\n  _getLabelPosition: _pie_point.default._getLabelPosition,\n  _getCoords: polarSymbolPoint._getCoords,\n  _translate: function () {\n    var that = this;\n\n    var translator = that._getValTranslator();\n\n    var businessRange = translator.getBusinessRange();\n    var maxRadius = translator.translate(CANVAS_POSITION_END);\n    that.radiusInner = translator.translate(that.minValue);\n\n    polarSymbolPoint._translate.call(that);\n\n    if (null === that.radiusInner) {\n      that.radiusInner = that.radius = maxRadius;\n    } else {\n      if (null === that.radius) {\n        that.radius = that.value >= businessRange.minVisible ? maxRadius : 0;\n      } else {\n        if (that.radius > maxRadius) {\n          that.radius = maxRadius;\n        }\n      }\n    }\n\n    that.radiusOuter = that.radiusLabels = _max(that.radiusInner, that.radius);\n    that.radiusLabels += RADIAL_LABEL_INDENT;\n    that.radiusInner = that.defaultRadius = _math.min(that.radiusInner, that.radius);\n    that.middleAngle = that.angle = -(0, _utils.normalizeAngle)(that.middleAngleCorrection - that.angle);\n  },\n  _checkRadiusForVisibleArea: function (radius) {\n    return (0, _type.isDefined)(radius) || this._getValTranslator().translate(this.minValue) > 0;\n  },\n  _getErrorBarBaseEdgeLength: function () {\n    var coord = this.getMarkerCoords();\n    return _math.PI * coord.outerRadius * _math.abs(coord.startAngle - coord.endAngle) / 180;\n  },\n  getMarkerCoords: function () {\n    return {\n      x: this.centerX,\n      y: this.centerY,\n      outerRadius: this.radiusOuter,\n      innerRadius: this.defaultRadius,\n      startAngle: this.middleAngle - this.interval / 2,\n      endAngle: this.middleAngle + this.interval / 2\n    };\n  },\n  _drawMarker: function (renderer, group, animationEnabled) {\n    var that = this;\n\n    var styles = that._getStyle();\n\n    var coords = that.getMarkerCoords();\n    var innerRadius = coords.innerRadius;\n    var outerRadius = coords.outerRadius;\n\n    var start = that._getCoords(that.argument, CANVAS_POSITION_DEFAULT);\n\n    var x = coords.x;\n    var y = coords.y;\n\n    if (animationEnabled) {\n      innerRadius = 0;\n      outerRadius = 0;\n      x = start.x;\n      y = start.y;\n    }\n\n    that.graphic = renderer.arc(x, y, innerRadius, outerRadius, coords.startAngle, coords.endAngle).attr(styles).data({\n      \"chart-data-point\": that\n    }).append(group);\n  },\n  _checkLabelPosition: function (label, coord) {\n    var that = this;\n\n    var visibleArea = that._getVisibleArea();\n\n    var angleFunctions = (0, _utils.getCosAndSin)(that.middleAngle);\n    var x = that.centerX + that.defaultRadius * angleFunctions.cos;\n    var y = that.centerY - that.defaultRadius * angleFunctions.sin;\n\n    if (x > visibleArea.minX && x < visibleArea.maxX && y > visibleArea.minY && y < visibleArea.maxY) {\n      coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect());\n    }\n\n    return coord;\n  },\n  _addLabelAlignmentAndOffset: function (label, coord) {\n    return coord;\n  },\n  correctCoordinates: function (correctOptions) {\n    this.middleAngleCorrection = correctOptions.offset;\n    this.interval = correctOptions.width;\n  },\n  coordsIn: function (x, y) {\n    var val = (0, _utils.convertXYToPolar)(this.series.getValueAxis().getCenter(), x, y);\n    var coords = this.getMarkerCoords();\n    var isBetweenAngles = coords.startAngle < coords.endAngle ? -val.phi >= coords.startAngle && -val.phi <= coords.endAngle : -val.phi <= coords.startAngle && -val.phi >= coords.endAngle;\n    return val.r >= coords.innerRadius && val.r <= coords.outerRadius && isBetweenAngles;\n  }\n});\n\nexports.polarBarPoint = polarBarPoint;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/points/polar_point.js"],"names":["exports","polarBarPoint","polarSymbolPoint","_extend2","require","_symbol_point","_interopRequireDefault","_bar_point","_pie_point","_type","_utils","_consts","obj","__esModule","_extend","extend","_math","Math","_max","max","RADIAL_LABEL_INDENT","default","radialLabelIndent","ERROR_BARS_ANGLE_OFFSET","CANVAS_POSITION_END","CANVAS_POSITION_DEFAULT","_getLabelCoords","_getElementCoords","_moveLabelOnCanvas","coord","visibleArea","labelBBox","x","y","minX","maxX","width","minY","maxY","height","_getLabelPosition","_getCoords","argument","value","axis","series","getValueAxis","startAngle","getAngles","angle","_getArgTranslator","translate","radius","_getValTranslator","coords","convertPolarToXY","getCenter","_translate","that","center","maxRadius","normalizedRadius","isDefined","vx","normalizeAngle","vy","radiusOuter","radiusLabels","middleAngle","defaultX","centerX","defaultY","centerY","_translateErrorBars","inVisibleArea","_checkRadiusForVisibleArea","errorBars","_options","translator","lowError","_lowErrorCoord","highError","_highErrorCoord","_errorBarPos","_baseErrorBarPos","type","_getTranslates","animationEnabled","getDefaultCoords","cosSin","getCosAndSin","cos","sin","_addLabelAlignmentAndOffset","label","_checkLabelPosition","_getVisibleArea","graphicBBox","_getGraphicBBox","_isPointInVisibleArea","getBoundingRect","_getErrorBarSettings","errorBarOptions","settings","call","rotate","rotateX","rotateY","getCoords","min","_getLabelConnector","getTooltipParams","businessRange","getBusinessRange","radiusInner","minValue","minVisible","defaultRadius","middleAngleCorrection","_getErrorBarBaseEdgeLength","getMarkerCoords","PI","outerRadius","abs","endAngle","innerRadius","interval","_drawMarker","renderer","group","styles","_getStyle","start","graphic","arc","attr","data","append","angleFunctions","correctCoordinates","correctOptions","offset","coordsIn","val","convertXYToPolar","isBetweenAngles","phi","r"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/polar_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.polarBarPoint = exports.polarSymbolPoint = void 0;\r\nvar _extend2 = require(\"../../../core/utils/extend\");\r\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\r\nvar _bar_point = _interopRequireDefault(require(\"./bar_point\"));\r\nvar _pie_point = _interopRequireDefault(require(\"./pie_point\"));\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _utils = require(\"../../core/utils\");\r\nvar _consts = _interopRequireDefault(require(\"../../components/consts\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _extend = _extend2.extend;\r\nvar _math = Math;\r\nvar _max = _math.max;\r\nvar RADIAL_LABEL_INDENT = _consts.default.radialLabelIndent;\r\nvar ERROR_BARS_ANGLE_OFFSET = 90;\r\nvar CANVAS_POSITION_END = \"canvas_position_end\";\r\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\r\nvar polarSymbolPoint = _extend({}, _symbol_point.default, {\r\n    _getLabelCoords: _pie_point.default._getLabelCoords,\r\n    _getElementCoords: _pie_point.default._getElementCoords,\r\n    _moveLabelOnCanvas: function(coord, visibleArea, labelBBox) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (visibleArea.minX > x) {\r\n            x = visibleArea.minX\r\n        }\r\n        if (visibleArea.maxX < x + labelBBox.width) {\r\n            x = visibleArea.maxX - labelBBox.width\r\n        }\r\n        if (visibleArea.minY > y) {\r\n            y = visibleArea.minY\r\n        }\r\n        if (visibleArea.maxY < y + labelBBox.height) {\r\n            y = visibleArea.maxY - labelBBox.height\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getLabelPosition: function() {\r\n        return \"outside\"\r\n    },\r\n    _getCoords: function(argument, value) {\r\n        var axis = this.series.getValueAxis();\r\n        var startAngle = axis.getAngles()[0];\r\n        var angle = this._getArgTranslator().translate(argument);\r\n        var radius = this._getValTranslator().translate(value);\r\n        var coords = (0, _utils.convertPolarToXY)(axis.getCenter(), axis.getAngles()[0], angle, radius);\r\n        coords.angle = angle + startAngle - 90, coords.radius = radius;\r\n        return coords\r\n    },\r\n    _translate: function() {\r\n        var that = this;\r\n        var center = that.series.getValueAxis().getCenter();\r\n        var coord = that._getCoords(that.argument, that.value);\r\n        var maxRadius = that._getValTranslator().translate(CANVAS_POSITION_END);\r\n        var normalizedRadius = (0, _type.isDefined)(coord.radius) && coord.radius >= 0 ? coord.radius : null;\r\n        that.vx = (0, _utils.normalizeAngle)(coord.angle);\r\n        that.vy = that.radiusOuter = that.radiusLabels = normalizedRadius;\r\n        that.radiusLabels += RADIAL_LABEL_INDENT;\r\n        that.radius = normalizedRadius;\r\n        that.middleAngle = -coord.angle;\r\n        that.angle = -coord.angle;\r\n        that.x = coord.x;\r\n        that.y = coord.y;\r\n        that.defaultX = that.centerX = center.x;\r\n        that.defaultY = that.centerY = center.y;\r\n        that._translateErrorBars();\r\n        that.inVisibleArea = that._checkRadiusForVisibleArea(normalizedRadius, maxRadius)\r\n    },\r\n    _checkRadiusForVisibleArea: function(radius, maxRadius) {\r\n        return (0, _type.isDefined)(radius) && radius <= maxRadius\r\n    },\r\n    _translateErrorBars: function() {\r\n        var that = this;\r\n        var errorBars = that._options.errorBars;\r\n        var translator = that._getValTranslator();\r\n        if (!errorBars) {\r\n            return\r\n        }(0, _type.isDefined)(that.lowError) && (that._lowErrorCoord = that.centerY - translator.translate(that.lowError));\r\n        (0, _type.isDefined)(that.highError) && (that._highErrorCoord = that.centerY - translator.translate(that.highError));\r\n        that._errorBarPos = that.centerX;\r\n        that._baseErrorBarPos = \"stdDeviation\" === errorBars.type ? that._lowErrorCoord + (that._highErrorCoord - that._lowErrorCoord) / 2 : that.centerY - that.radius\r\n    },\r\n    _getTranslates: function(animationEnabled) {\r\n        return animationEnabled ? this.getDefaultCoords() : {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    },\r\n    getDefaultCoords: function() {\r\n        var cosSin = (0, _utils.getCosAndSin)(-this.angle);\r\n        var radius = this._getValTranslator().translate(CANVAS_POSITION_DEFAULT);\r\n        var x = this.defaultX + radius * cosSin.cos;\r\n        var y = this.defaultY + radius * cosSin.sin;\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _addLabelAlignmentAndOffset: function(label, coord) {\r\n        return coord\r\n    },\r\n    _checkLabelPosition: function(label, coord) {\r\n        var that = this;\r\n        var visibleArea = that._getVisibleArea();\r\n        var graphicBBox = that._getGraphicBBox();\r\n        if (that._isPointInVisibleArea(visibleArea, graphicBBox)) {\r\n            coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect())\r\n        }\r\n        return coord\r\n    },\r\n    _getErrorBarSettings: function(errorBarOptions, animationEnabled) {\r\n        var settings = _symbol_point.default._getErrorBarSettings.call(this, errorBarOptions, animationEnabled);\r\n        settings.rotate = ERROR_BARS_ANGLE_OFFSET - this.angle;\r\n        settings.rotateX = this.centerX;\r\n        settings.rotateY = this.centerY;\r\n        return settings\r\n    },\r\n    getCoords: function(min) {\r\n        return min ? this.getDefaultCoords() : {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    }\r\n});\r\nexports.polarSymbolPoint = polarSymbolPoint;\r\nvar polarBarPoint = _extend({}, _bar_point.default, {\r\n    _translateErrorBars: polarSymbolPoint._translateErrorBars,\r\n    _getErrorBarSettings: polarSymbolPoint._getErrorBarSettings,\r\n    _moveLabelOnCanvas: polarSymbolPoint._moveLabelOnCanvas,\r\n    _getLabelCoords: _pie_point.default._getLabelCoords,\r\n    _getElementCoords: _pie_point.default._getElementCoords,\r\n    _getLabelConnector: _pie_point.default._getLabelConnector,\r\n    getTooltipParams: _pie_point.default.getTooltipParams,\r\n    _getLabelPosition: _pie_point.default._getLabelPosition,\r\n    _getCoords: polarSymbolPoint._getCoords,\r\n    _translate: function() {\r\n        var that = this;\r\n        var translator = that._getValTranslator();\r\n        var businessRange = translator.getBusinessRange();\r\n        var maxRadius = translator.translate(CANVAS_POSITION_END);\r\n        that.radiusInner = translator.translate(that.minValue);\r\n        polarSymbolPoint._translate.call(that);\r\n        if (null === that.radiusInner) {\r\n            that.radiusInner = that.radius = maxRadius\r\n        } else {\r\n            if (null === that.radius) {\r\n                that.radius = that.value >= businessRange.minVisible ? maxRadius : 0\r\n            } else {\r\n                if (that.radius > maxRadius) {\r\n                    that.radius = maxRadius\r\n                }\r\n            }\r\n        }\r\n        that.radiusOuter = that.radiusLabels = _max(that.radiusInner, that.radius);\r\n        that.radiusLabels += RADIAL_LABEL_INDENT;\r\n        that.radiusInner = that.defaultRadius = _math.min(that.radiusInner, that.radius);\r\n        that.middleAngle = that.angle = -(0, _utils.normalizeAngle)(that.middleAngleCorrection - that.angle)\r\n    },\r\n    _checkRadiusForVisibleArea: function(radius) {\r\n        return (0, _type.isDefined)(radius) || this._getValTranslator().translate(this.minValue) > 0\r\n    },\r\n    _getErrorBarBaseEdgeLength: function() {\r\n        var coord = this.getMarkerCoords();\r\n        return _math.PI * coord.outerRadius * _math.abs(coord.startAngle - coord.endAngle) / 180\r\n    },\r\n    getMarkerCoords: function() {\r\n        return {\r\n            x: this.centerX,\r\n            y: this.centerY,\r\n            outerRadius: this.radiusOuter,\r\n            innerRadius: this.defaultRadius,\r\n            startAngle: this.middleAngle - this.interval / 2,\r\n            endAngle: this.middleAngle + this.interval / 2\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled) {\r\n        var that = this;\r\n        var styles = that._getStyle();\r\n        var coords = that.getMarkerCoords();\r\n        var innerRadius = coords.innerRadius;\r\n        var outerRadius = coords.outerRadius;\r\n        var start = that._getCoords(that.argument, CANVAS_POSITION_DEFAULT);\r\n        var x = coords.x;\r\n        var y = coords.y;\r\n        if (animationEnabled) {\r\n            innerRadius = 0;\r\n            outerRadius = 0;\r\n            x = start.x;\r\n            y = start.y\r\n        }\r\n        that.graphic = renderer.arc(x, y, innerRadius, outerRadius, coords.startAngle, coords.endAngle).attr(styles).data({\r\n            \"chart-data-point\": that\r\n        }).append(group)\r\n    },\r\n    _checkLabelPosition: function(label, coord) {\r\n        var that = this;\r\n        var visibleArea = that._getVisibleArea();\r\n        var angleFunctions = (0, _utils.getCosAndSin)(that.middleAngle);\r\n        var x = that.centerX + that.defaultRadius * angleFunctions.cos;\r\n        var y = that.centerY - that.defaultRadius * angleFunctions.sin;\r\n        if (x > visibleArea.minX && x < visibleArea.maxX && y > visibleArea.minY && y < visibleArea.maxY) {\r\n            coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect())\r\n        }\r\n        return coord\r\n    },\r\n    _addLabelAlignmentAndOffset: function(label, coord) {\r\n        return coord\r\n    },\r\n    correctCoordinates: function(correctOptions) {\r\n        this.middleAngleCorrection = correctOptions.offset;\r\n        this.interval = correctOptions.width\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var val = (0, _utils.convertXYToPolar)(this.series.getValueAxis().getCenter(), x, y);\r\n        var coords = this.getMarkerCoords();\r\n        var isBetweenAngles = coords.startAngle < coords.endAngle ? -val.phi >= coords.startAngle && -val.phi <= coords.endAngle : -val.phi <= coords.startAngle && -val.phi >= coords.endAngle;\r\n        return val.r >= coords.innerRadius && val.r <= coords.outerRadius && isBetweenAngles\r\n    }\r\n});\r\nexports.polarBarPoint = polarBarPoint;\r\n"]},"metadata":{},"sourceType":"script"}