{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/view_port.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.originalViewPort = originalViewPort;\nexports.changeCallback = exports.value = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../renderer\"));\n\nvar _ready_callbacks = _interopRequireDefault(require(\"./ready_callbacks\"));\n\nvar _callbacks = _interopRequireDefault(require(\"./callbacks\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ready = _ready_callbacks.default.add;\nvar changeCallback = (0, _callbacks.default)();\nexports.changeCallback = changeCallback;\nvar $originalViewPort = (0, _renderer.default)();\n\nvar value = function () {\n  var $current;\n  return function (element) {\n    if (!arguments.length) {\n      return $current;\n    }\n\n    var $element = (0, _renderer.default)(element);\n    $originalViewPort = $element;\n    var isNewViewportFound = !!$element.length;\n    var prevViewPort = value();\n    $current = isNewViewportFound ? $element : (0, _renderer.default)(\"body\");\n    changeCallback.fire(isNewViewportFound ? value() : (0, _renderer.default)(), prevViewPort);\n  };\n}();\n\nexports.value = value;\nready(function () {\n  value(\".dx-viewport\");\n});\n\nfunction originalViewPort() {\n  return $originalViewPort;\n}","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/core/utils/view_port.js"],"names":["exports","originalViewPort","changeCallback","value","_renderer","_interopRequireDefault","require","_ready_callbacks","_callbacks","obj","__esModule","ready","default","add","$originalViewPort","$current","element","arguments","length","$element","isNewViewportFound","prevViewPort","fire"],"mappings":"AAAA;;;;;;;;AAQA;;AACAA,OAAO,CAACC,gBAAR,GAA2BA,gBAA3B;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,KAAR,GAAgB,KAAK,CAA9C;;AACA,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAtC;;AACA,IAAIC,gBAAgB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AACA,IAAIE,UAAU,GAAGH,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AACD,IAAIE,KAAK,GAAGJ,gBAAgB,CAACK,OAAjB,CAAyBC,GAArC;AACA,IAAIX,cAAc,GAAG,CAAC,GAAGM,UAAU,CAACI,OAAf,GAArB;AACAZ,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACA,IAAIY,iBAAiB,GAAG,CAAC,GAAGV,SAAS,CAACQ,OAAd,GAAxB;;AACA,IAAIT,KAAK,GAAG,YAAW;AACnB,MAAIY,QAAJ;AACA,SAAO,UAASC,OAAT,EAAkB;AACrB,QAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;AACnB,aAAOH,QAAP;AACH;;AACD,QAAII,QAAQ,GAAG,CAAC,GAAGf,SAAS,CAACQ,OAAd,EAAuBI,OAAvB,CAAf;AACAF,IAAAA,iBAAiB,GAAGK,QAApB;AACA,QAAIC,kBAAkB,GAAG,CAAC,CAACD,QAAQ,CAACD,MAApC;AACA,QAAIG,YAAY,GAAGlB,KAAK,EAAxB;AACAY,IAAAA,QAAQ,GAAGK,kBAAkB,GAAGD,QAAH,GAAc,CAAC,GAAGf,SAAS,CAACQ,OAAd,EAAuB,MAAvB,CAA3C;AACAV,IAAAA,cAAc,CAACoB,IAAf,CAAoBF,kBAAkB,GAAGjB,KAAK,EAAR,GAAa,CAAC,GAAGC,SAAS,CAACQ,OAAd,GAAnD,EAA6ES,YAA7E;AACH,GAVD;AAWH,CAbW,EAAZ;;AAcArB,OAAO,CAACG,KAAR,GAAgBA,KAAhB;AACAQ,KAAK,CAAC,YAAW;AACbR,EAAAA,KAAK,CAAC,cAAD,CAAL;AACH,CAFI,CAAL;;AAIA,SAASF,gBAAT,GAA4B;AACxB,SAAOa,iBAAP;AACH","sourcesContent":["/**\r\n * DevExtreme (core/utils/view_port.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.originalViewPort = originalViewPort;\r\nexports.changeCallback = exports.value = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../renderer\"));\r\nvar _ready_callbacks = _interopRequireDefault(require(\"./ready_callbacks\"));\r\nvar _callbacks = _interopRequireDefault(require(\"./callbacks\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ready = _ready_callbacks.default.add;\r\nvar changeCallback = (0, _callbacks.default)();\r\nexports.changeCallback = changeCallback;\r\nvar $originalViewPort = (0, _renderer.default)();\r\nvar value = function() {\r\n    var $current;\r\n    return function(element) {\r\n        if (!arguments.length) {\r\n            return $current\r\n        }\r\n        var $element = (0, _renderer.default)(element);\r\n        $originalViewPort = $element;\r\n        var isNewViewportFound = !!$element.length;\r\n        var prevViewPort = value();\r\n        $current = isNewViewportFound ? $element : (0, _renderer.default)(\"body\");\r\n        changeCallback.fire(isNewViewportFound ? value() : (0, _renderer.default)(), prevViewPort)\r\n    }\r\n}();\r\nexports.value = value;\r\nready(function() {\r\n    value(\".dx-viewport\")\r\n});\r\n\r\nfunction originalViewPort() {\r\n    return $originalViewPort\r\n}\r\n"]},"metadata":{},"sourceType":"script"}