{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/bar_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _extend2 = require(\"../../../core/utils/extend\");\n\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _extend = _extend2.extend;\nvar _math = Math;\nvar _floor = _math.floor;\nvar _abs = _math.abs;\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\nvar DEFAULT_BAR_TRACKER_SIZE = 9;\nvar CORRECTING_BAR_TRACKER_VALUE = 4;\nvar RIGHT = \"right\";\nvar LEFT = \"left\";\nvar TOP = \"top\";\nvar BOTTOM = \"bottom\";\n\nfunction getLabelOrientation(point) {\n  var initialValue = point.initialValue;\n\n  var invert = point._getValTranslator().getBusinessRange().invert;\n\n  var isDiscreteValue = \"discrete\" === point.series.valueAxisType;\n  var isFullStacked = point.series.isFullStackedSeries();\n  var notAxisInverted = !isDiscreteValue && (initialValue >= 0 && !invert || initialValue < 0 && invert) || isDiscreteValue && !invert || isFullStacked;\n  return notAxisInverted ? TOP : BOTTOM;\n}\n\nvar _default = _extend({}, _symbol_point.default, {\n  correctCoordinates: function correctCoordinates(correctOptions) {\n    var that = this;\n\n    var correction = _floor(correctOptions.offset - correctOptions.width / 2);\n\n    if (that._options.rotated) {\n      that.height = correctOptions.width;\n      that.yCorrection = correction;\n      that.xCorrection = null;\n    } else {\n      that.width = correctOptions.width;\n      that.xCorrection = correction;\n      that.yCorrection = null;\n    }\n  },\n  _getGraphicBBox: function _getGraphicBBox(location) {\n    var bBox = {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n\n    if (location) {\n      var isTop = \"top\" === location;\n\n      if (!this._options.rotated) {\n        bBox.y = isTop ? bBox.y : bBox.y + bBox.height;\n        bBox.height = 0;\n      } else {\n        bBox.x = isTop ? bBox.x + bBox.width : bBox.x;\n        bBox.width = 0;\n      }\n    }\n\n    return bBox;\n  },\n  _getLabelConnector: function _getLabelConnector(location) {\n    return this._getGraphicBBox(location);\n  },\n  _getLabelPosition: function _getLabelPosition() {\n    var position = getLabelOrientation(this);\n\n    if (this._options.rotated) {\n      position = position === TOP ? RIGHT : LEFT;\n    }\n\n    return position;\n  },\n  _getLabelCoords: function _getLabelCoords(label) {\n    var that = this;\n    var coords;\n\n    if (0 === that.initialValue && that.series.isFullStackedSeries()) {\n      if (!this._options.rotated) {\n        coords = that._getLabelCoordOfPosition(label, TOP);\n      } else {\n        coords = that._getLabelCoordOfPosition(label, RIGHT);\n      }\n    } else {\n      if (\"inside\" === label.getLayoutOptions().position) {\n        coords = that._getLabelCoordOfPosition(label, \"inside\");\n      } else {\n        coords = _symbol_point.default._getLabelCoords.call(this, label);\n      }\n    }\n\n    return coords;\n  },\n  _drawLabel: function _drawLabel() {\n    this._label.pointPosition = \"inside\" !== this._label.getLayoutOptions().position && getLabelOrientation(this);\n\n    _symbol_point.default._drawLabel.call(this);\n  },\n  hideInsideLabel: function hideInsideLabel(label, coord) {\n    var graphicBBox = this._getGraphicBBox();\n\n    var labelBBox = label.getBoundingRect();\n\n    if (this._options.resolveLabelsOverlapping) {\n      if ((coord.y <= graphicBBox.y && coord.y + labelBBox.height >= graphicBBox.y + graphicBBox.height || coord.x <= graphicBBox.x && coord.x + labelBBox.width >= graphicBBox.x + graphicBBox.width) && !(coord.y > graphicBBox.y + graphicBBox.height || coord.y + labelBBox.height < graphicBBox.y || coord.x > graphicBBox.x + graphicBBox.width || coord.x + labelBBox.width < graphicBBox.x)) {\n        label.draw(false);\n        return true;\n      }\n    }\n\n    return false;\n  },\n  _showForZeroValues: function _showForZeroValues() {\n    return this._options.label.showForZeroValues || this.initialValue;\n  },\n  _drawMarker: function _drawMarker(renderer, group, animationEnabled) {\n    var that = this;\n\n    var style = that._getStyle();\n\n    var r = that._options.cornerRadius;\n    var rotated = that._options.rotated;\n\n    var _that$getMarkerCoords = that.getMarkerCoords(),\n        x = _that$getMarkerCoords.x,\n        y = _that$getMarkerCoords.y,\n        width = _that$getMarkerCoords.width,\n        height = _that$getMarkerCoords.height;\n\n    if (animationEnabled) {\n      if (rotated) {\n        width = 0;\n        x = that.defaultX;\n      } else {\n        height = 0;\n        y = that.defaultY;\n      }\n    }\n\n    that.graphic = renderer.rect(x, y, width, height).attr({\n      rx: r,\n      ry: r\n    }).smartAttr(style).data({\n      \"chart-data-point\": that\n    }).append(group);\n  },\n  _getSettingsForTracker: function _getSettingsForTracker() {\n    var that = this;\n    var y = that.y;\n    var height = that.height;\n    var x = that.x;\n    var width = that.width;\n\n    if (that._options.rotated) {\n      if (1 === width) {\n        width = DEFAULT_BAR_TRACKER_SIZE;\n        x -= CORRECTING_BAR_TRACKER_VALUE;\n      }\n    } else {\n      if (1 === height) {\n        height = DEFAULT_BAR_TRACKER_SIZE;\n        y -= CORRECTING_BAR_TRACKER_VALUE;\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  getGraphicSettings: function getGraphicSettings() {\n    var graphic = this.graphic;\n    return {\n      x: graphic.attr(\"x\"),\n      y: graphic.attr(\"y\"),\n      height: graphic.attr(\"height\"),\n      width: graphic.attr(\"width\")\n    };\n  },\n  _getEdgeTooltipParams: function _getEdgeTooltipParams() {\n    var isPositive = this.value >= 0;\n    var xCoord;\n    var yCoord;\n\n    var invertedBusinessRange = this._getValTranslator().getBusinessRange().invert;\n\n    var x = this.x,\n        y = this.y,\n        width = this.width,\n        height = this.height;\n\n    if (this._options.rotated) {\n      yCoord = y + height / 2;\n\n      if (invertedBusinessRange) {\n        xCoord = isPositive ? x : x + width;\n      } else {\n        xCoord = isPositive ? x + width : x;\n      }\n    } else {\n      xCoord = x + width / 2;\n\n      if (invertedBusinessRange) {\n        yCoord = isPositive ? y + height : y;\n      } else {\n        yCoord = isPositive ? y : y + height;\n      }\n    }\n\n    return {\n      x: xCoord,\n      y: yCoord,\n      offset: 0\n    };\n  },\n  getTooltipParams: function getTooltipParams(location) {\n    if (\"edge\" === location) {\n      return this._getEdgeTooltipParams();\n    }\n\n    var center = this.getCenterCoord();\n    center.offset = 0;\n    return center;\n  },\n  getCenterCoord: function getCenterCoord() {\n    var width = this.width,\n        height = this.height,\n        x = this.x,\n        y = this.y;\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  },\n  _truncateCoord: function _truncateCoord(coord, bounds) {\n    if (null === coord) {\n      return coord;\n    }\n\n    if (coord < bounds[0]) {\n      return bounds[0];\n    }\n\n    if (coord > bounds[1]) {\n      return bounds[1];\n    }\n\n    return coord;\n  },\n  _getErrorBarBaseEdgeLength: function _getErrorBarBaseEdgeLength() {\n    return this._options.rotated ? this.height : this.width;\n  },\n  _translateErrorBars: function _translateErrorBars(argVisibleArea) {\n    _symbol_point.default._translateErrorBars.call(this);\n\n    if (this._errorBarPos < argVisibleArea[0] || this._errorBarPos > argVisibleArea[1]) {\n      this._errorBarPos = void 0;\n    }\n  },\n  _translate: function _translate() {\n    var that = this;\n    var rotated = that._options.rotated;\n    var valAxis = rotated ? \"x\" : \"y\";\n    var argAxis = rotated ? \"y\" : \"x\";\n    var valIntervalName = rotated ? \"width\" : \"height\";\n    var argIntervalName = rotated ? \"height\" : \"width\";\n\n    var argTranslator = that._getArgTranslator();\n\n    var valTranslator = that._getValTranslator();\n\n    var argVisibleArea = that.series.getArgumentAxis().getVisibleArea();\n    var valVisibleArea = that.series.getValueAxis().getVisibleArea();\n    var arg;\n    var val;\n    var minVal;\n    arg = argTranslator.translate(that.argument);\n    that[argAxis] = arg = null === arg ? arg : arg + (that[argAxis + \"Correction\"] || 0);\n    val = valTranslator.translate(that.value, 1);\n    minVal = valTranslator.translate(that.minValue);\n    that[\"v\" + valAxis] = val;\n    that[\"v\" + argAxis] = arg + that[argIntervalName] / 2;\n    val = that._truncateCoord(val, valVisibleArea);\n    minVal = that._truncateCoord(minVal, valVisibleArea);\n    that[valIntervalName] = _abs(val - minVal);\n    val = val < minVal ? val : minVal;\n\n    that._calculateVisibility(rotated ? val : arg, rotated ? arg : val, that.width, that.height);\n\n    that[valAxis] = null === val ? val : val + (that[valAxis + \"Correction\"] || 0);\n    that[\"min\" + valAxis.toUpperCase()] = null === minVal ? minVal : minVal + (that[valAxis + \"Correction\"] || 0);\n    that[\"default\" + valAxis.toUpperCase()] = valTranslator.translate(CANVAS_POSITION_DEFAULT);\n\n    that._translateErrorBars(argVisibleArea);\n\n    if (that.inVisibleArea && null !== that[argAxis]) {\n      if (that[argAxis] < argVisibleArea[0]) {\n        that[argIntervalName] = that[argIntervalName] - (argVisibleArea[0] - that[argAxis]);\n        that[argAxis] = argVisibleArea[0];\n      }\n\n      if (that[argAxis] + that[argIntervalName] > argVisibleArea[1]) {\n        that[argIntervalName] = argVisibleArea[1] - that[argAxis];\n      }\n    }\n  },\n  _updateMarker: function _updateMarker(animationEnabled, style) {\n    this.graphic.smartAttr(_extend({}, style, !animationEnabled ? this.getMarkerCoords() : {}));\n  },\n  getMarkerCoords: function getMarkerCoords() {\n    var that = this;\n    var x = that.x;\n    var y = that.y;\n    var width = that.width;\n    var height = that.height;\n    var argAxis = that.series.getArgumentAxis();\n    var rotated = that._options.rotated;\n\n    if (argAxis.getAxisPosition) {\n      var axisOptions = argAxis.getOptions();\n      var edgeOffset = Math.round(axisOptions.width / 2);\n      var argAxisPosition = argAxis.getAxisPosition();\n\n      if (axisOptions.visible) {\n        if (!rotated) {\n          height -= that.minY === that.defaultY && that.minY === argAxisPosition - argAxis.getAxisShift() ? edgeOffset : 0;\n          height < 0 && (height = 0);\n        } else {\n          var isStartFromAxis = that.minX === that.defaultX && that.minX === argAxisPosition - argAxis.getAxisShift();\n          x += isStartFromAxis ? edgeOffset : 0;\n          width -= isStartFromAxis ? edgeOffset : 0;\n          width < 0 && (width = 0);\n        }\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  coordsIn: function coordsIn(x, y) {\n    var that = this;\n    return x >= that.x && x <= that.x + that.width && y >= that.y && y <= that.y + that.height;\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/points/bar_point.js"],"names":["exports","default","_extend2","require","_symbol_point","_interopRequireDefault","obj","__esModule","_extend","extend","_math","Math","_floor","floor","_abs","abs","CANVAS_POSITION_DEFAULT","DEFAULT_BAR_TRACKER_SIZE","CORRECTING_BAR_TRACKER_VALUE","RIGHT","LEFT","TOP","BOTTOM","getLabelOrientation","point","initialValue","invert","_getValTranslator","getBusinessRange","isDiscreteValue","series","valueAxisType","isFullStacked","isFullStackedSeries","notAxisInverted","_default","correctCoordinates","correctOptions","that","correction","offset","width","_options","rotated","height","yCorrection","xCorrection","_getGraphicBBox","location","bBox","x","y","isTop","_getLabelConnector","_getLabelPosition","position","_getLabelCoords","label","coords","_getLabelCoordOfPosition","getLayoutOptions","call","_drawLabel","_label","pointPosition","hideInsideLabel","coord","graphicBBox","labelBBox","getBoundingRect","resolveLabelsOverlapping","draw","_showForZeroValues","showForZeroValues","_drawMarker","renderer","group","animationEnabled","style","_getStyle","r","cornerRadius","_that$getMarkerCoords","getMarkerCoords","defaultX","defaultY","graphic","rect","attr","rx","ry","smartAttr","data","append","_getSettingsForTracker","getGraphicSettings","_getEdgeTooltipParams","isPositive","value","xCoord","yCoord","invertedBusinessRange","getTooltipParams","center","getCenterCoord","_truncateCoord","bounds","_getErrorBarBaseEdgeLength","_translateErrorBars","argVisibleArea","_errorBarPos","_translate","valAxis","argAxis","valIntervalName","argIntervalName","argTranslator","_getArgTranslator","valTranslator","getArgumentAxis","getVisibleArea","valVisibleArea","getValueAxis","arg","val","minVal","translate","argument","minValue","_calculateVisibility","toUpperCase","inVisibleArea","_updateMarker","getAxisPosition","axisOptions","getOptions","edgeOffset","round","argAxisPosition","visible","minY","getAxisShift","isStartFromAxis","minX","coordsIn","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/bar_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _extend2 = require(\"../../../core/utils/extend\");\r\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _extend = _extend2.extend;\r\nvar _math = Math;\r\nvar _floor = _math.floor;\r\nvar _abs = _math.abs;\r\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\r\nvar DEFAULT_BAR_TRACKER_SIZE = 9;\r\nvar CORRECTING_BAR_TRACKER_VALUE = 4;\r\nvar RIGHT = \"right\";\r\nvar LEFT = \"left\";\r\nvar TOP = \"top\";\r\nvar BOTTOM = \"bottom\";\r\n\r\nfunction getLabelOrientation(point) {\r\n    var initialValue = point.initialValue;\r\n    var invert = point._getValTranslator().getBusinessRange().invert;\r\n    var isDiscreteValue = \"discrete\" === point.series.valueAxisType;\r\n    var isFullStacked = point.series.isFullStackedSeries();\r\n    var notAxisInverted = !isDiscreteValue && (initialValue >= 0 && !invert || initialValue < 0 && invert) || isDiscreteValue && !invert || isFullStacked;\r\n    return notAxisInverted ? TOP : BOTTOM\r\n}\r\nvar _default = _extend({}, _symbol_point.default, {\r\n    correctCoordinates: function(correctOptions) {\r\n        var that = this;\r\n        var correction = _floor(correctOptions.offset - correctOptions.width / 2);\r\n        if (that._options.rotated) {\r\n            that.height = correctOptions.width;\r\n            that.yCorrection = correction;\r\n            that.xCorrection = null\r\n        } else {\r\n            that.width = correctOptions.width;\r\n            that.xCorrection = correction;\r\n            that.yCorrection = null\r\n        }\r\n    },\r\n    _getGraphicBBox: function(location) {\r\n        var bBox = {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height\r\n        };\r\n        if (location) {\r\n            var isTop = \"top\" === location;\r\n            if (!this._options.rotated) {\r\n                bBox.y = isTop ? bBox.y : bBox.y + bBox.height;\r\n                bBox.height = 0\r\n            } else {\r\n                bBox.x = isTop ? bBox.x + bBox.width : bBox.x;\r\n                bBox.width = 0\r\n            }\r\n        }\r\n        return bBox\r\n    },\r\n    _getLabelConnector: function(location) {\r\n        return this._getGraphicBBox(location)\r\n    },\r\n    _getLabelPosition: function() {\r\n        var position = getLabelOrientation(this);\r\n        if (this._options.rotated) {\r\n            position = position === TOP ? RIGHT : LEFT\r\n        }\r\n        return position\r\n    },\r\n    _getLabelCoords: function(label) {\r\n        var that = this;\r\n        var coords;\r\n        if (0 === that.initialValue && that.series.isFullStackedSeries()) {\r\n            if (!this._options.rotated) {\r\n                coords = that._getLabelCoordOfPosition(label, TOP)\r\n            } else {\r\n                coords = that._getLabelCoordOfPosition(label, RIGHT)\r\n            }\r\n        } else {\r\n            if (\"inside\" === label.getLayoutOptions().position) {\r\n                coords = that._getLabelCoordOfPosition(label, \"inside\")\r\n            } else {\r\n                coords = _symbol_point.default._getLabelCoords.call(this, label)\r\n            }\r\n        }\r\n        return coords\r\n    },\r\n    _drawLabel: function() {\r\n        this._label.pointPosition = \"inside\" !== this._label.getLayoutOptions().position && getLabelOrientation(this);\r\n        _symbol_point.default._drawLabel.call(this)\r\n    },\r\n    hideInsideLabel: function(label, coord) {\r\n        var graphicBBox = this._getGraphicBBox();\r\n        var labelBBox = label.getBoundingRect();\r\n        if (this._options.resolveLabelsOverlapping) {\r\n            if ((coord.y <= graphicBBox.y && coord.y + labelBBox.height >= graphicBBox.y + graphicBBox.height || coord.x <= graphicBBox.x && coord.x + labelBBox.width >= graphicBBox.x + graphicBBox.width) && !(coord.y > graphicBBox.y + graphicBBox.height || coord.y + labelBBox.height < graphicBBox.y || coord.x > graphicBBox.x + graphicBBox.width || coord.x + labelBBox.width < graphicBBox.x)) {\r\n                label.draw(false);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _showForZeroValues: function() {\r\n        return this._options.label.showForZeroValues || this.initialValue\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled) {\r\n        var that = this;\r\n        var style = that._getStyle();\r\n        var r = that._options.cornerRadius;\r\n        var rotated = that._options.rotated;\r\n        var _that$getMarkerCoords = that.getMarkerCoords(),\r\n            x = _that$getMarkerCoords.x,\r\n            y = _that$getMarkerCoords.y,\r\n            width = _that$getMarkerCoords.width,\r\n            height = _that$getMarkerCoords.height;\r\n        if (animationEnabled) {\r\n            if (rotated) {\r\n                width = 0;\r\n                x = that.defaultX\r\n            } else {\r\n                height = 0;\r\n                y = that.defaultY\r\n            }\r\n        }\r\n        that.graphic = renderer.rect(x, y, width, height).attr({\r\n            rx: r,\r\n            ry: r\r\n        }).smartAttr(style).data({\r\n            \"chart-data-point\": that\r\n        }).append(group)\r\n    },\r\n    _getSettingsForTracker: function() {\r\n        var that = this;\r\n        var y = that.y;\r\n        var height = that.height;\r\n        var x = that.x;\r\n        var width = that.width;\r\n        if (that._options.rotated) {\r\n            if (1 === width) {\r\n                width = DEFAULT_BAR_TRACKER_SIZE;\r\n                x -= CORRECTING_BAR_TRACKER_VALUE\r\n            }\r\n        } else {\r\n            if (1 === height) {\r\n                height = DEFAULT_BAR_TRACKER_SIZE;\r\n                y -= CORRECTING_BAR_TRACKER_VALUE\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    getGraphicSettings: function() {\r\n        var graphic = this.graphic;\r\n        return {\r\n            x: graphic.attr(\"x\"),\r\n            y: graphic.attr(\"y\"),\r\n            height: graphic.attr(\"height\"),\r\n            width: graphic.attr(\"width\")\r\n        }\r\n    },\r\n    _getEdgeTooltipParams: function() {\r\n        var isPositive = this.value >= 0;\r\n        var xCoord;\r\n        var yCoord;\r\n        var invertedBusinessRange = this._getValTranslator().getBusinessRange().invert;\r\n        var x = this.x,\r\n            y = this.y,\r\n            width = this.width,\r\n            height = this.height;\r\n        if (this._options.rotated) {\r\n            yCoord = y + height / 2;\r\n            if (invertedBusinessRange) {\r\n                xCoord = isPositive ? x : x + width\r\n            } else {\r\n                xCoord = isPositive ? x + width : x\r\n            }\r\n        } else {\r\n            xCoord = x + width / 2;\r\n            if (invertedBusinessRange) {\r\n                yCoord = isPositive ? y + height : y\r\n            } else {\r\n                yCoord = isPositive ? y : y + height\r\n            }\r\n        }\r\n        return {\r\n            x: xCoord,\r\n            y: yCoord,\r\n            offset: 0\r\n        }\r\n    },\r\n    getTooltipParams: function(location) {\r\n        if (\"edge\" === location) {\r\n            return this._getEdgeTooltipParams()\r\n        }\r\n        var center = this.getCenterCoord();\r\n        center.offset = 0;\r\n        return center\r\n    },\r\n    getCenterCoord: function() {\r\n        var width = this.width,\r\n            height = this.height,\r\n            x = this.x,\r\n            y = this.y;\r\n        return {\r\n            x: x + width / 2,\r\n            y: y + height / 2\r\n        }\r\n    },\r\n    _truncateCoord: function(coord, bounds) {\r\n        if (null === coord) {\r\n            return coord\r\n        }\r\n        if (coord < bounds[0]) {\r\n            return bounds[0]\r\n        }\r\n        if (coord > bounds[1]) {\r\n            return bounds[1]\r\n        }\r\n        return coord\r\n    },\r\n    _getErrorBarBaseEdgeLength: function() {\r\n        return this._options.rotated ? this.height : this.width\r\n    },\r\n    _translateErrorBars: function(argVisibleArea) {\r\n        _symbol_point.default._translateErrorBars.call(this);\r\n        if (this._errorBarPos < argVisibleArea[0] || this._errorBarPos > argVisibleArea[1]) {\r\n            this._errorBarPos = void 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        var valAxis = rotated ? \"x\" : \"y\";\r\n        var argAxis = rotated ? \"y\" : \"x\";\r\n        var valIntervalName = rotated ? \"width\" : \"height\";\r\n        var argIntervalName = rotated ? \"height\" : \"width\";\r\n        var argTranslator = that._getArgTranslator();\r\n        var valTranslator = that._getValTranslator();\r\n        var argVisibleArea = that.series.getArgumentAxis().getVisibleArea();\r\n        var valVisibleArea = that.series.getValueAxis().getVisibleArea();\r\n        var arg;\r\n        var val;\r\n        var minVal;\r\n        arg = argTranslator.translate(that.argument);\r\n        that[argAxis] = arg = null === arg ? arg : arg + (that[argAxis + \"Correction\"] || 0);\r\n        val = valTranslator.translate(that.value, 1);\r\n        minVal = valTranslator.translate(that.minValue);\r\n        that[\"v\" + valAxis] = val;\r\n        that[\"v\" + argAxis] = arg + that[argIntervalName] / 2;\r\n        val = that._truncateCoord(val, valVisibleArea);\r\n        minVal = that._truncateCoord(minVal, valVisibleArea);\r\n        that[valIntervalName] = _abs(val - minVal);\r\n        val = val < minVal ? val : minVal;\r\n        that._calculateVisibility(rotated ? val : arg, rotated ? arg : val, that.width, that.height);\r\n        that[valAxis] = null === val ? val : val + (that[valAxis + \"Correction\"] || 0);\r\n        that[\"min\" + valAxis.toUpperCase()] = null === minVal ? minVal : minVal + (that[valAxis + \"Correction\"] || 0);\r\n        that[\"default\" + valAxis.toUpperCase()] = valTranslator.translate(CANVAS_POSITION_DEFAULT);\r\n        that._translateErrorBars(argVisibleArea);\r\n        if (that.inVisibleArea && null !== that[argAxis]) {\r\n            if (that[argAxis] < argVisibleArea[0]) {\r\n                that[argIntervalName] = that[argIntervalName] - (argVisibleArea[0] - that[argAxis]);\r\n                that[argAxis] = argVisibleArea[0]\r\n            }\r\n            if (that[argAxis] + that[argIntervalName] > argVisibleArea[1]) {\r\n                that[argIntervalName] = argVisibleArea[1] - that[argAxis]\r\n            }\r\n        }\r\n    },\r\n    _updateMarker: function(animationEnabled, style) {\r\n        this.graphic.smartAttr(_extend({}, style, !animationEnabled ? this.getMarkerCoords() : {}))\r\n    },\r\n    getMarkerCoords: function() {\r\n        var that = this;\r\n        var x = that.x;\r\n        var y = that.y;\r\n        var width = that.width;\r\n        var height = that.height;\r\n        var argAxis = that.series.getArgumentAxis();\r\n        var rotated = that._options.rotated;\r\n        if (argAxis.getAxisPosition) {\r\n            var axisOptions = argAxis.getOptions();\r\n            var edgeOffset = Math.round(axisOptions.width / 2);\r\n            var argAxisPosition = argAxis.getAxisPosition();\r\n            if (axisOptions.visible) {\r\n                if (!rotated) {\r\n                    height -= that.minY === that.defaultY && that.minY === argAxisPosition - argAxis.getAxisShift() ? edgeOffset : 0;\r\n                    height < 0 && (height = 0)\r\n                } else {\r\n                    var isStartFromAxis = that.minX === that.defaultX && that.minX === argAxisPosition - argAxis.getAxisShift();\r\n                    x += isStartFromAxis ? edgeOffset : 0;\r\n                    width -= isStartFromAxis ? edgeOffset : 0;\r\n                    width < 0 && (width = 0)\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var that = this;\r\n        return x >= that.x && x <= that.x + that.width && y >= that.y && y <= that.y + that.height\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}