{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/range_symbol_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _iterator = require(\"../../../core/utils/iterator\");\n\nvar _extend2 = require(\"../../../core/utils/extend\");\n\nvar _common = require(\"../../../core/utils/common\");\n\nvar _label = require(\"./label\");\n\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\n\nvar _type = require(\"../../../core/utils/type\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _extend = _extend2.extend;\nvar _math = Math;\nvar _abs = _math.abs;\nvar _min = _math.min;\nvar _max = _math.max;\nvar _round = _math.round;\nvar DEFAULT_IMAGE_WIDTH = 20;\nvar DEFAULT_IMAGE_HEIGHT = 20;\n\nvar _default = _extend({}, _symbol_point.default, {\n  deleteLabel: function deleteLabel() {\n    var that = this;\n\n    that._topLabel.dispose();\n\n    that._topLabel = null;\n\n    that._bottomLabel.dispose();\n\n    that._bottomLabel = null;\n  },\n  hideMarker: function hideMarker(type) {\n    var graphic = this.graphic;\n    var marker = graphic && graphic[type + \"Marker\"];\n    var label = this[\"_\" + type + \"Label\"];\n\n    if (marker && \"hidden\" !== marker.attr(\"visibility\")) {\n      marker.attr({\n        visibility: \"hidden\"\n      });\n    }\n\n    label.draw(false);\n  },\n  setInvisibility: function setInvisibility() {\n    this.hideMarker(\"top\");\n    this.hideMarker(\"bottom\");\n  },\n  clearVisibility: function clearVisibility() {\n    var that = this;\n    var graphic = that.graphic;\n    var topMarker = graphic && graphic.topMarker;\n    var bottomMarker = graphic && graphic.bottomMarker;\n\n    if (topMarker && topMarker.attr(\"visibility\")) {\n      topMarker.attr({\n        visibility: null\n      });\n    }\n\n    if (bottomMarker && bottomMarker.attr(\"visibility\")) {\n      bottomMarker.attr({\n        visibility: null\n      });\n    }\n  },\n  clearMarker: function clearMarker() {\n    var that = this;\n    var graphic = that.graphic;\n    var topMarker = graphic && graphic.topMarker;\n    var bottomMarker = graphic && graphic.bottomMarker;\n    var emptySettings = that._emptySettings;\n    topMarker && topMarker.attr(emptySettings);\n    bottomMarker && bottomMarker.attr(emptySettings);\n  },\n  _getLabelPosition: function _getLabelPosition(markerType) {\n    var position;\n    var labelsInside = \"inside\" === this._options.label.position;\n\n    if (!this._options.rotated) {\n      position = \"top\" === markerType ^ labelsInside ? \"top\" : \"bottom\";\n    } else {\n      position = \"top\" === markerType ^ labelsInside ? \"right\" : \"left\";\n    }\n\n    return position;\n  },\n  _getLabelMinFormatObject: function _getLabelMinFormatObject() {\n    var that = this;\n    return {\n      index: 0,\n      argument: that.initialArgument,\n      value: that.initialMinValue,\n      seriesName: that.series.name,\n      originalValue: that.originalMinValue,\n      originalArgument: that.originalArgument,\n      point: that\n    };\n  },\n  _updateLabelData: function _updateLabelData() {\n    var maxFormatObject = this._getLabelFormatObject();\n\n    maxFormatObject.index = 1;\n\n    this._topLabel.setData(maxFormatObject);\n\n    this._bottomLabel.setData(this._getLabelMinFormatObject());\n  },\n  _updateLabelOptions: function _updateLabelOptions() {\n    var that = this;\n    var options = this._options.label;\n    (!that._topLabel || !that._bottomLabel) && that._createLabel();\n\n    that._topLabel.setOptions(options);\n\n    that._bottomLabel.setOptions(options);\n  },\n  _createLabel: function _createLabel() {\n    var options = {\n      renderer: this.series._renderer,\n      labelsGroup: this.series._labelsGroup,\n      point: this\n    };\n    this._topLabel = new _label.Label(options);\n    this._bottomLabel = new _label.Label(options);\n  },\n  _getGraphicBBox: function _getGraphicBBox(location) {\n    var options = this._options;\n\n    var images = this._getImage(options.image);\n\n    var image = \"top\" === location ? this._checkImage(images.top) : this._checkImage(images.bottom);\n    var bBox;\n\n    var coord = this._getPositionFromLocation(location);\n\n    if (options.visible) {\n      bBox = image ? this._getImageBBox(coord.x, coord.y) : this._getSymbolBBox(coord.x, coord.y, options.styles.normal.r);\n    } else {\n      bBox = {\n        x: coord.x,\n        y: coord.y,\n        width: 0,\n        height: 0\n      };\n    }\n\n    return bBox;\n  },\n  _getPositionFromLocation: function _getPositionFromLocation(location) {\n    var x;\n    var y;\n    var isTop = \"top\" === location;\n\n    if (!this._options.rotated) {\n      x = this.x;\n      y = isTop ? _min(this.y, this.minY) : _max(this.y, this.minY);\n    } else {\n      x = isTop ? _max(this.x, this.minX) : _min(this.x, this.minX);\n      y = this.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _checkOverlay: function _checkOverlay(bottomCoord, topCoord, topValue) {\n    return bottomCoord < topCoord + topValue;\n  },\n  _getOverlayCorrections: function _getOverlayCorrections(topCoords, bottomCoords) {\n    var rotated = this._options.rotated;\n    var coordSelector = !rotated ? \"y\" : \"x\";\n    var valueSelector = !rotated ? \"height\" : \"width\";\n    var visibleArea = this.series.getValueAxis().getVisibleArea();\n    var minBound = visibleArea[0];\n    var maxBound = visibleArea[1];\n\n    var delta = _round((topCoords[coordSelector] + topCoords[valueSelector] - bottomCoords[coordSelector]) / 2);\n\n    var coord1 = topCoords[coordSelector] - delta;\n    var coord2 = bottomCoords[coordSelector] + delta;\n\n    if (coord1 < minBound) {\n      delta = minBound - coord1;\n      coord1 += delta;\n      coord2 += delta;\n    } else {\n      if (coord2 + bottomCoords[valueSelector] > maxBound) {\n        delta = maxBound - coord2 - bottomCoords[valueSelector];\n        coord1 += delta;\n        coord2 += delta;\n      }\n    }\n\n    return {\n      coord1: coord1,\n      coord2: coord2\n    };\n  },\n  _checkLabelsOverlay: function _checkLabelsOverlay(topLocation) {\n    var that = this;\n\n    var topCoords = that._topLabel.getBoundingRect();\n\n    var bottomCoords = that._bottomLabel.getBoundingRect();\n\n    var corrections = {};\n\n    if (!that._options.rotated) {\n      if (\"top\" === topLocation) {\n        if (this._checkOverlay(bottomCoords.y, topCoords.y, topCoords.height)) {\n          corrections = this._getOverlayCorrections(topCoords, bottomCoords);\n\n          that._topLabel.shift(topCoords.x, corrections.coord1);\n\n          that._bottomLabel.shift(bottomCoords.x, corrections.coord2);\n        }\n      } else {\n        if (this._checkOverlay(topCoords.y, bottomCoords.y, bottomCoords.height)) {\n          corrections = this._getOverlayCorrections(bottomCoords, topCoords);\n\n          that._topLabel.shift(topCoords.x, corrections.coord2);\n\n          that._bottomLabel.shift(bottomCoords.x, corrections.coord1);\n        }\n      }\n    } else {\n      if (\"top\" === topLocation) {\n        if (this._checkOverlay(topCoords.x, bottomCoords.x, bottomCoords.width)) {\n          corrections = this._getOverlayCorrections(bottomCoords, topCoords);\n\n          that._topLabel.shift(corrections.coord2, topCoords.y);\n\n          that._bottomLabel.shift(corrections.coord1, bottomCoords.y);\n        }\n      } else {\n        if (this._checkOverlay(bottomCoords.x, topCoords.x, topCoords.width)) {\n          corrections = this._getOverlayCorrections(topCoords, bottomCoords);\n\n          that._topLabel.shift(corrections.coord1, topCoords.y);\n\n          that._bottomLabel.shift(corrections.coord2, bottomCoords.y);\n        }\n      }\n    }\n  },\n  _drawLabel: function _drawLabel() {\n    var that = this;\n    var labels = [];\n    var notInverted = that._options.rotated ? that.x >= that.minX : that.y < that.minY;\n\n    var customVisibility = that._getCustomLabelVisibility();\n\n    var topLabel = that._topLabel;\n    var bottomLabel = that._bottomLabel;\n    topLabel.pointPosition = notInverted ? \"top\" : \"bottom\";\n    bottomLabel.pointPosition = notInverted ? \"bottom\" : \"top\";\n\n    if ((that.series.getLabelVisibility() || customVisibility) && that.hasValue() && false !== customVisibility) {\n      false !== that.visibleTopMarker && labels.push(topLabel);\n      false !== that.visibleBottomMarker && labels.push(bottomLabel);\n      (0, _iterator.each)(labels, function (_, label) {\n        label.draw(true);\n      });\n\n      that._checkLabelsOverlay(that._topLabel.pointPosition);\n    } else {\n      topLabel.draw(false);\n      bottomLabel.draw(false);\n    }\n  },\n  _getImage: function _getImage(imageOption) {\n    var image = {};\n\n    if ((0, _type.isDefined)(imageOption)) {\n      if (\"string\" === typeof imageOption) {\n        image.top = image.bottom = imageOption;\n      } else {\n        image.top = {\n          url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMaxPoint,\n          width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMaxPoint,\n          height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMaxPoint\n        };\n        image.bottom = {\n          url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMinPoint,\n          width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMinPoint,\n          height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMinPoint\n        };\n      }\n    }\n\n    return image;\n  },\n  _checkSymbol: function _checkSymbol(oldOptions, newOptions) {\n    var that = this;\n    var oldSymbol = oldOptions.symbol;\n    var newSymbol = newOptions.symbol;\n    var symbolChanged = \"circle\" === oldSymbol && \"circle\" !== newSymbol || \"circle\" !== oldSymbol && \"circle\" === newSymbol;\n\n    var oldImages = that._getImage(oldOptions.image);\n\n    var newImages = that._getImage(newOptions.image);\n\n    var topImageChanged = that._checkImage(oldImages.top) !== that._checkImage(newImages.top);\n\n    var bottomImageChanged = that._checkImage(oldImages.bottom) !== that._checkImage(newImages.bottom);\n\n    return symbolChanged || topImageChanged || bottomImageChanged;\n  },\n  _getSettingsForTwoMarkers: function _getSettingsForTwoMarkers(style) {\n    var that = this;\n    var options = that._options;\n    var settings = {};\n    var x = options.rotated ? _min(that.x, that.minX) : that.x;\n    var y = options.rotated ? that.y : _min(that.y, that.minY);\n    var radius = style.r;\n\n    var points = that._populatePointShape(options.symbol, radius);\n\n    settings.top = _extend({\n      translateX: x + that.width,\n      translateY: y,\n      r: radius\n    }, style);\n    settings.bottom = _extend({\n      translateX: x,\n      translateY: y + that.height,\n      r: radius\n    }, style);\n\n    if (points) {\n      settings.top.points = settings.bottom.points = points;\n    }\n\n    return settings;\n  },\n  _hasGraphic: function _hasGraphic() {\n    return this.graphic && this.graphic.topMarker && this.graphic.bottomMarker;\n  },\n  _drawOneMarker: function _drawOneMarker(renderer, markerType, imageSettings, settings) {\n    var that = this;\n    var graphic = that.graphic;\n\n    if (graphic[markerType]) {\n      that._updateOneMarker(markerType, settings);\n    } else {\n      graphic[markerType] = that._createMarker(renderer, graphic, imageSettings, settings);\n    }\n  },\n  _drawMarker: function _drawMarker(renderer, group, animationEnabled, firstDrawing, style) {\n    var that = this;\n\n    var settings = that._getSettingsForTwoMarkers(style || that._getStyle());\n\n    var image = that._getImage(that._options.image);\n\n    if (that._checkImage(image.top)) {\n      settings.top = that._getImageSettings(settings.top, image.top);\n    }\n\n    if (that._checkImage(image.bottom)) {\n      settings.bottom = that._getImageSettings(settings.bottom, image.bottom);\n    }\n\n    that.graphic = that.graphic || renderer.g().append(group);\n    that.visibleTopMarker && that._drawOneMarker(renderer, \"topMarker\", image.top, settings.top);\n    that.visibleBottomMarker && that._drawOneMarker(renderer, \"bottomMarker\", image.bottom, settings.bottom);\n  },\n  _getSettingsForTracker: function _getSettingsForTracker(radius) {\n    var that = this;\n    var rotated = that._options.rotated;\n    return {\n      translateX: rotated ? _min(that.x, that.minX) - radius : that.x - radius,\n      translateY: rotated ? that.y - radius : _min(that.y, that.minY) - radius,\n      width: that.width + 2 * radius,\n      height: that.height + 2 * radius\n    };\n  },\n  isInVisibleArea: function isInVisibleArea() {\n    var that = this;\n    var rotated = that._options.rotated;\n    var argument = !rotated ? that.x : that.y;\n    var maxValue = !rotated ? _max(that.minY, that.y) : _max(that.minX, that.x);\n    var minValue = !rotated ? _min(that.minY, that.y) : _min(that.minX, that.x);\n    var tmp;\n    var visibleTopMarker = true;\n    var visibleBottomMarker = true;\n    var visibleRangeArea = true;\n    var visibleArgArea = that.series.getArgumentAxis().getVisibleArea();\n    var visibleValArea = that.series.getValueAxis().getVisibleArea();\n    var notVisibleByArg = visibleArgArea[1] < argument || visibleArgArea[0] > argument;\n    var notVisibleByVal = visibleValArea[0] > minValue && visibleValArea[0] > maxValue || visibleValArea[1] < minValue && visibleValArea[1] < maxValue;\n\n    if (notVisibleByArg || notVisibleByVal) {\n      visibleTopMarker = visibleBottomMarker = visibleRangeArea = false;\n    } else {\n      visibleTopMarker = visibleValArea[0] <= minValue && visibleValArea[1] > minValue;\n      visibleBottomMarker = visibleValArea[0] < maxValue && visibleValArea[1] >= maxValue;\n\n      if (rotated) {\n        tmp = visibleTopMarker;\n        visibleTopMarker = visibleBottomMarker;\n        visibleBottomMarker = tmp;\n      }\n    }\n\n    that.visibleTopMarker = visibleTopMarker;\n    that.visibleBottomMarker = visibleBottomMarker;\n    return visibleRangeArea;\n  },\n  getTooltipParams: function getTooltipParams() {\n    var that = this;\n    var x;\n    var y;\n    var rotated = that._options.rotated;\n    var minValue = !rotated ? _min(that.y, that.minY) : _min(that.x, that.minX);\n    var side = !rotated ? \"height\" : \"width\";\n\n    var visibleArea = that._getVisibleArea();\n\n    var minVisible = rotated ? visibleArea.minX : visibleArea.minY;\n    var maxVisible = rotated ? visibleArea.maxX : visibleArea.maxY;\n\n    var min = _max(minVisible, minValue);\n\n    var max = _min(maxVisible, minValue + that[side]);\n\n    if (!rotated) {\n      x = that.x;\n      y = min + (max - min) / 2;\n    } else {\n      y = that.y;\n      x = min + (max - min) / 2;\n    }\n\n    return {\n      x: x,\n      y: y,\n      offset: 0\n    };\n  },\n  _translate: function _translate() {\n    var that = this;\n    var rotated = that._options.rotated;\n\n    _symbol_point.default._translate.call(that);\n\n    that.height = rotated ? 0 : _abs(that.minY - that.y);\n    that.width = rotated ? _abs(that.x - that.minX) : 0;\n  },\n  hasCoords: function hasCoords() {\n    return _symbol_point.default.hasCoords.call(this) && !(null === this.minX || null === this.minY);\n  },\n  _updateData: function _updateData(data) {\n    var that = this;\n\n    _symbol_point.default._updateData.call(that, data);\n\n    that.minValue = that.initialMinValue = that.originalMinValue = data.minValue;\n  },\n  _getImageSettings: function _getImageSettings(settings, image) {\n    return {\n      href: image.url || image.toString(),\n      width: image.width || DEFAULT_IMAGE_WIDTH,\n      height: image.height || DEFAULT_IMAGE_HEIGHT,\n      translateX: settings.translateX,\n      translateY: settings.translateY\n    };\n  },\n  getCrosshairData: function getCrosshairData(x, y) {\n    var that = this;\n    var rotated = that._options.rotated;\n    var minX = that.minX;\n    var minY = that.minY;\n    var vx = that.vx;\n    var vy = that.vy;\n    var value = that.value;\n    var minValue = that.minValue;\n    var argument = that.argument;\n    var coords = {\n      axis: that.series.axis,\n      x: vx,\n      y: vy,\n      yValue: value,\n      xValue: argument\n    };\n\n    if (rotated) {\n      coords.yValue = argument;\n\n      if (_abs(vx - x) < _abs(minX - x)) {\n        coords.xValue = value;\n      } else {\n        coords.x = minX;\n        coords.xValue = minValue;\n      }\n    } else {\n      if (_abs(vy - y) >= _abs(minY - y)) {\n        coords.y = minY;\n        coords.yValue = minValue;\n      }\n    }\n\n    return coords;\n  },\n  _updateOneMarker: function _updateOneMarker(markerType, settings) {\n    this.graphic && this.graphic[markerType] && this.graphic[markerType].attr(settings);\n  },\n  _updateMarker: function _updateMarker(animationEnabled, style) {\n    this._drawMarker(void 0, void 0, false, false, style);\n  },\n  _getFormatObject: function _getFormatObject(tooltip) {\n    var that = this;\n    var initialMinValue = that.initialMinValue;\n    var initialValue = that.initialValue;\n    var initialArgument = that.initialArgument;\n    var minValue = tooltip.formatValue(initialMinValue);\n    var value = tooltip.formatValue(initialValue);\n    return {\n      argument: initialArgument,\n      argumentText: tooltip.formatValue(initialArgument, \"argument\"),\n      valueText: minValue + \" - \" + value,\n      rangeValue1Text: minValue,\n      rangeValue2Text: value,\n      rangeValue1: initialMinValue,\n      rangeValue2: initialValue,\n      seriesName: that.series.name,\n      point: that,\n      originalMinValue: that.originalMinValue,\n      originalValue: that.originalValue,\n      originalArgument: that.originalArgument\n    };\n  },\n  getLabel: function getLabel() {\n    return [this._topLabel, this._bottomLabel];\n  },\n  getLabels: function getLabels() {\n    return [this._topLabel, this._bottomLabel];\n  },\n  getBoundingRect: _common.noop,\n  coordsIn: function coordsIn(x, y) {\n    var trackerRadius = this._storeTrackerR();\n\n    var xCond = x >= this.x - trackerRadius && x <= this.x + trackerRadius;\n    var yCond = y >= this.y - trackerRadius && y <= this.y + trackerRadius;\n\n    if (this._options.rotated) {\n      return yCond && (xCond || x >= this.minX - trackerRadius && x <= this.minX + trackerRadius);\n    } else {\n      return xCond && (yCond || y >= this.minY - trackerRadius && y <= this.minY + trackerRadius);\n    }\n  },\n  getMaxValue: function getMaxValue() {\n    if (\"discrete\" !== this.series.valueAxisType) {\n      return this.minValue > this.value ? this.minValue : this.value;\n    }\n\n    return this.value;\n  },\n  getMinValue: function getMinValue() {\n    if (\"discrete\" !== this.series.valueAxisType) {\n      return this.minValue < this.value ? this.minValue : this.value;\n    }\n\n    return this.minValue;\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/points/range_symbol_point.js"],"names":["exports","default","_iterator","require","_extend2","_common","_label","_symbol_point","_interopRequireDefault","_type","obj","__esModule","_extend","extend","_math","Math","_abs","abs","_min","min","_max","max","_round","round","DEFAULT_IMAGE_WIDTH","DEFAULT_IMAGE_HEIGHT","_default","deleteLabel","that","_topLabel","dispose","_bottomLabel","hideMarker","type","graphic","marker","label","attr","visibility","draw","setInvisibility","clearVisibility","topMarker","bottomMarker","clearMarker","emptySettings","_emptySettings","_getLabelPosition","markerType","position","labelsInside","_options","rotated","_getLabelMinFormatObject","index","argument","initialArgument","value","initialMinValue","seriesName","series","name","originalValue","originalMinValue","originalArgument","point","_updateLabelData","maxFormatObject","_getLabelFormatObject","setData","_updateLabelOptions","options","_createLabel","setOptions","renderer","_renderer","labelsGroup","_labelsGroup","Label","_getGraphicBBox","location","images","_getImage","image","_checkImage","top","bottom","bBox","coord","_getPositionFromLocation","visible","_getImageBBox","x","y","_getSymbolBBox","styles","normal","r","width","height","isTop","minY","minX","_checkOverlay","bottomCoord","topCoord","topValue","_getOverlayCorrections","topCoords","bottomCoords","coordSelector","valueSelector","visibleArea","getValueAxis","getVisibleArea","minBound","maxBound","delta","coord1","coord2","_checkLabelsOverlay","topLocation","getBoundingRect","corrections","shift","_drawLabel","labels","notInverted","customVisibility","_getCustomLabelVisibility","topLabel","bottomLabel","pointPosition","getLabelVisibility","hasValue","visibleTopMarker","push","visibleBottomMarker","each","_","imageOption","isDefined","url","rangeMaxPoint","rangeMinPoint","_checkSymbol","oldOptions","newOptions","oldSymbol","symbol","newSymbol","symbolChanged","oldImages","newImages","topImageChanged","bottomImageChanged","_getSettingsForTwoMarkers","style","settings","radius","points","_populatePointShape","translateX","translateY","_hasGraphic","_drawOneMarker","imageSettings","_updateOneMarker","_createMarker","_drawMarker","group","animationEnabled","firstDrawing","_getStyle","_getImageSettings","g","append","_getSettingsForTracker","isInVisibleArea","maxValue","minValue","tmp","visibleRangeArea","visibleArgArea","getArgumentAxis","visibleValArea","notVisibleByArg","notVisibleByVal","getTooltipParams","side","_getVisibleArea","minVisible","maxVisible","maxX","maxY","offset","_translate","call","hasCoords","_updateData","data","href","toString","getCrosshairData","vx","vy","coords","axis","yValue","xValue","_updateMarker","_getFormatObject","tooltip","initialValue","formatValue","argumentText","valueText","rangeValue1Text","rangeValue2Text","rangeValue1","rangeValue2","getLabel","getLabels","noop","coordsIn","trackerRadius","_storeTrackerR","xCond","yCond","getMaxValue","valueAxisType","getMinValue","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/range_symbol_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _iterator = require(\"../../../core/utils/iterator\");\r\nvar _extend2 = require(\"../../../core/utils/extend\");\r\nvar _common = require(\"../../../core/utils/common\");\r\nvar _label = require(\"./label\");\r\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\r\nvar _type = require(\"../../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _extend = _extend2.extend;\r\nvar _math = Math;\r\nvar _abs = _math.abs;\r\nvar _min = _math.min;\r\nvar _max = _math.max;\r\nvar _round = _math.round;\r\nvar DEFAULT_IMAGE_WIDTH = 20;\r\nvar DEFAULT_IMAGE_HEIGHT = 20;\r\nvar _default = _extend({}, _symbol_point.default, {\r\n    deleteLabel: function() {\r\n        var that = this;\r\n        that._topLabel.dispose();\r\n        that._topLabel = null;\r\n        that._bottomLabel.dispose();\r\n        that._bottomLabel = null\r\n    },\r\n    hideMarker: function(type) {\r\n        var graphic = this.graphic;\r\n        var marker = graphic && graphic[type + \"Marker\"];\r\n        var label = this[\"_\" + type + \"Label\"];\r\n        if (marker && \"hidden\" !== marker.attr(\"visibility\")) {\r\n            marker.attr({\r\n                visibility: \"hidden\"\r\n            })\r\n        }\r\n        label.draw(false)\r\n    },\r\n    setInvisibility: function() {\r\n        this.hideMarker(\"top\");\r\n        this.hideMarker(\"bottom\")\r\n    },\r\n    clearVisibility: function() {\r\n        var that = this;\r\n        var graphic = that.graphic;\r\n        var topMarker = graphic && graphic.topMarker;\r\n        var bottomMarker = graphic && graphic.bottomMarker;\r\n        if (topMarker && topMarker.attr(\"visibility\")) {\r\n            topMarker.attr({\r\n                visibility: null\r\n            })\r\n        }\r\n        if (bottomMarker && bottomMarker.attr(\"visibility\")) {\r\n            bottomMarker.attr({\r\n                visibility: null\r\n            })\r\n        }\r\n    },\r\n    clearMarker: function() {\r\n        var that = this;\r\n        var graphic = that.graphic;\r\n        var topMarker = graphic && graphic.topMarker;\r\n        var bottomMarker = graphic && graphic.bottomMarker;\r\n        var emptySettings = that._emptySettings;\r\n        topMarker && topMarker.attr(emptySettings);\r\n        bottomMarker && bottomMarker.attr(emptySettings)\r\n    },\r\n    _getLabelPosition: function(markerType) {\r\n        var position;\r\n        var labelsInside = \"inside\" === this._options.label.position;\r\n        if (!this._options.rotated) {\r\n            position = \"top\" === markerType ^ labelsInside ? \"top\" : \"bottom\"\r\n        } else {\r\n            position = \"top\" === markerType ^ labelsInside ? \"right\" : \"left\"\r\n        }\r\n        return position\r\n    },\r\n    _getLabelMinFormatObject: function() {\r\n        var that = this;\r\n        return {\r\n            index: 0,\r\n            argument: that.initialArgument,\r\n            value: that.initialMinValue,\r\n            seriesName: that.series.name,\r\n            originalValue: that.originalMinValue,\r\n            originalArgument: that.originalArgument,\r\n            point: that\r\n        }\r\n    },\r\n    _updateLabelData: function() {\r\n        var maxFormatObject = this._getLabelFormatObject();\r\n        maxFormatObject.index = 1;\r\n        this._topLabel.setData(maxFormatObject);\r\n        this._bottomLabel.setData(this._getLabelMinFormatObject())\r\n    },\r\n    _updateLabelOptions: function() {\r\n        var that = this;\r\n        var options = this._options.label;\r\n        (!that._topLabel || !that._bottomLabel) && that._createLabel();\r\n        that._topLabel.setOptions(options);\r\n        that._bottomLabel.setOptions(options)\r\n    },\r\n    _createLabel: function() {\r\n        var options = {\r\n            renderer: this.series._renderer,\r\n            labelsGroup: this.series._labelsGroup,\r\n            point: this\r\n        };\r\n        this._topLabel = new _label.Label(options);\r\n        this._bottomLabel = new _label.Label(options)\r\n    },\r\n    _getGraphicBBox: function(location) {\r\n        var options = this._options;\r\n        var images = this._getImage(options.image);\r\n        var image = \"top\" === location ? this._checkImage(images.top) : this._checkImage(images.bottom);\r\n        var bBox;\r\n        var coord = this._getPositionFromLocation(location);\r\n        if (options.visible) {\r\n            bBox = image ? this._getImageBBox(coord.x, coord.y) : this._getSymbolBBox(coord.x, coord.y, options.styles.normal.r)\r\n        } else {\r\n            bBox = {\r\n                x: coord.x,\r\n                y: coord.y,\r\n                width: 0,\r\n                height: 0\r\n            }\r\n        }\r\n        return bBox\r\n    },\r\n    _getPositionFromLocation: function(location) {\r\n        var x;\r\n        var y;\r\n        var isTop = \"top\" === location;\r\n        if (!this._options.rotated) {\r\n            x = this.x;\r\n            y = isTop ? _min(this.y, this.minY) : _max(this.y, this.minY)\r\n        } else {\r\n            x = isTop ? _max(this.x, this.minX) : _min(this.x, this.minX);\r\n            y = this.y\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkOverlay: function(bottomCoord, topCoord, topValue) {\r\n        return bottomCoord < topCoord + topValue\r\n    },\r\n    _getOverlayCorrections: function(topCoords, bottomCoords) {\r\n        var rotated = this._options.rotated;\r\n        var coordSelector = !rotated ? \"y\" : \"x\";\r\n        var valueSelector = !rotated ? \"height\" : \"width\";\r\n        var visibleArea = this.series.getValueAxis().getVisibleArea();\r\n        var minBound = visibleArea[0];\r\n        var maxBound = visibleArea[1];\r\n        var delta = _round((topCoords[coordSelector] + topCoords[valueSelector] - bottomCoords[coordSelector]) / 2);\r\n        var coord1 = topCoords[coordSelector] - delta;\r\n        var coord2 = bottomCoords[coordSelector] + delta;\r\n        if (coord1 < minBound) {\r\n            delta = minBound - coord1;\r\n            coord1 += delta;\r\n            coord2 += delta\r\n        } else {\r\n            if (coord2 + bottomCoords[valueSelector] > maxBound) {\r\n                delta = maxBound - coord2 - bottomCoords[valueSelector];\r\n                coord1 += delta;\r\n                coord2 += delta\r\n            }\r\n        }\r\n        return {\r\n            coord1: coord1,\r\n            coord2: coord2\r\n        }\r\n    },\r\n    _checkLabelsOverlay: function(topLocation) {\r\n        var that = this;\r\n        var topCoords = that._topLabel.getBoundingRect();\r\n        var bottomCoords = that._bottomLabel.getBoundingRect();\r\n        var corrections = {};\r\n        if (!that._options.rotated) {\r\n            if (\"top\" === topLocation) {\r\n                if (this._checkOverlay(bottomCoords.y, topCoords.y, topCoords.height)) {\r\n                    corrections = this._getOverlayCorrections(topCoords, bottomCoords);\r\n                    that._topLabel.shift(topCoords.x, corrections.coord1);\r\n                    that._bottomLabel.shift(bottomCoords.x, corrections.coord2)\r\n                }\r\n            } else {\r\n                if (this._checkOverlay(topCoords.y, bottomCoords.y, bottomCoords.height)) {\r\n                    corrections = this._getOverlayCorrections(bottomCoords, topCoords);\r\n                    that._topLabel.shift(topCoords.x, corrections.coord2);\r\n                    that._bottomLabel.shift(bottomCoords.x, corrections.coord1)\r\n                }\r\n            }\r\n        } else {\r\n            if (\"top\" === topLocation) {\r\n                if (this._checkOverlay(topCoords.x, bottomCoords.x, bottomCoords.width)) {\r\n                    corrections = this._getOverlayCorrections(bottomCoords, topCoords);\r\n                    that._topLabel.shift(corrections.coord2, topCoords.y);\r\n                    that._bottomLabel.shift(corrections.coord1, bottomCoords.y)\r\n                }\r\n            } else {\r\n                if (this._checkOverlay(bottomCoords.x, topCoords.x, topCoords.width)) {\r\n                    corrections = this._getOverlayCorrections(topCoords, bottomCoords);\r\n                    that._topLabel.shift(corrections.coord1, topCoords.y);\r\n                    that._bottomLabel.shift(corrections.coord2, bottomCoords.y)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _drawLabel: function() {\r\n        var that = this;\r\n        var labels = [];\r\n        var notInverted = that._options.rotated ? that.x >= that.minX : that.y < that.minY;\r\n        var customVisibility = that._getCustomLabelVisibility();\r\n        var topLabel = that._topLabel;\r\n        var bottomLabel = that._bottomLabel;\r\n        topLabel.pointPosition = notInverted ? \"top\" : \"bottom\";\r\n        bottomLabel.pointPosition = notInverted ? \"bottom\" : \"top\";\r\n        if ((that.series.getLabelVisibility() || customVisibility) && that.hasValue() && false !== customVisibility) {\r\n            false !== that.visibleTopMarker && labels.push(topLabel);\r\n            false !== that.visibleBottomMarker && labels.push(bottomLabel);\r\n            (0, _iterator.each)(labels, function(_, label) {\r\n                label.draw(true)\r\n            });\r\n            that._checkLabelsOverlay(that._topLabel.pointPosition)\r\n        } else {\r\n            topLabel.draw(false);\r\n            bottomLabel.draw(false)\r\n        }\r\n    },\r\n    _getImage: function(imageOption) {\r\n        var image = {};\r\n        if ((0, _type.isDefined)(imageOption)) {\r\n            if (\"string\" === typeof imageOption) {\r\n                image.top = image.bottom = imageOption\r\n            } else {\r\n                image.top = {\r\n                    url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMaxPoint,\r\n                    width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMaxPoint,\r\n                    height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMaxPoint\r\n                };\r\n                image.bottom = {\r\n                    url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMinPoint,\r\n                    width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMinPoint,\r\n                    height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMinPoint\r\n                }\r\n            }\r\n        }\r\n        return image\r\n    },\r\n    _checkSymbol: function(oldOptions, newOptions) {\r\n        var that = this;\r\n        var oldSymbol = oldOptions.symbol;\r\n        var newSymbol = newOptions.symbol;\r\n        var symbolChanged = \"circle\" === oldSymbol && \"circle\" !== newSymbol || \"circle\" !== oldSymbol && \"circle\" === newSymbol;\r\n        var oldImages = that._getImage(oldOptions.image);\r\n        var newImages = that._getImage(newOptions.image);\r\n        var topImageChanged = that._checkImage(oldImages.top) !== that._checkImage(newImages.top);\r\n        var bottomImageChanged = that._checkImage(oldImages.bottom) !== that._checkImage(newImages.bottom);\r\n        return symbolChanged || topImageChanged || bottomImageChanged\r\n    },\r\n    _getSettingsForTwoMarkers: function(style) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var settings = {};\r\n        var x = options.rotated ? _min(that.x, that.minX) : that.x;\r\n        var y = options.rotated ? that.y : _min(that.y, that.minY);\r\n        var radius = style.r;\r\n        var points = that._populatePointShape(options.symbol, radius);\r\n        settings.top = _extend({\r\n            translateX: x + that.width,\r\n            translateY: y,\r\n            r: radius\r\n        }, style);\r\n        settings.bottom = _extend({\r\n            translateX: x,\r\n            translateY: y + that.height,\r\n            r: radius\r\n        }, style);\r\n        if (points) {\r\n            settings.top.points = settings.bottom.points = points\r\n        }\r\n        return settings\r\n    },\r\n    _hasGraphic: function() {\r\n        return this.graphic && this.graphic.topMarker && this.graphic.bottomMarker\r\n    },\r\n    _drawOneMarker: function(renderer, markerType, imageSettings, settings) {\r\n        var that = this;\r\n        var graphic = that.graphic;\r\n        if (graphic[markerType]) {\r\n            that._updateOneMarker(markerType, settings)\r\n        } else {\r\n            graphic[markerType] = that._createMarker(renderer, graphic, imageSettings, settings)\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled, firstDrawing, style) {\r\n        var that = this;\r\n        var settings = that._getSettingsForTwoMarkers(style || that._getStyle());\r\n        var image = that._getImage(that._options.image);\r\n        if (that._checkImage(image.top)) {\r\n            settings.top = that._getImageSettings(settings.top, image.top)\r\n        }\r\n        if (that._checkImage(image.bottom)) {\r\n            settings.bottom = that._getImageSettings(settings.bottom, image.bottom)\r\n        }\r\n        that.graphic = that.graphic || renderer.g().append(group);\r\n        that.visibleTopMarker && that._drawOneMarker(renderer, \"topMarker\", image.top, settings.top);\r\n        that.visibleBottomMarker && that._drawOneMarker(renderer, \"bottomMarker\", image.bottom, settings.bottom)\r\n    },\r\n    _getSettingsForTracker: function(radius) {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        return {\r\n            translateX: rotated ? _min(that.x, that.minX) - radius : that.x - radius,\r\n            translateY: rotated ? that.y - radius : _min(that.y, that.minY) - radius,\r\n            width: that.width + 2 * radius,\r\n            height: that.height + 2 * radius\r\n        }\r\n    },\r\n    isInVisibleArea: function() {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        var argument = !rotated ? that.x : that.y;\r\n        var maxValue = !rotated ? _max(that.minY, that.y) : _max(that.minX, that.x);\r\n        var minValue = !rotated ? _min(that.minY, that.y) : _min(that.minX, that.x);\r\n        var tmp;\r\n        var visibleTopMarker = true;\r\n        var visibleBottomMarker = true;\r\n        var visibleRangeArea = true;\r\n        var visibleArgArea = that.series.getArgumentAxis().getVisibleArea();\r\n        var visibleValArea = that.series.getValueAxis().getVisibleArea();\r\n        var notVisibleByArg = visibleArgArea[1] < argument || visibleArgArea[0] > argument;\r\n        var notVisibleByVal = visibleValArea[0] > minValue && visibleValArea[0] > maxValue || visibleValArea[1] < minValue && visibleValArea[1] < maxValue;\r\n        if (notVisibleByArg || notVisibleByVal) {\r\n            visibleTopMarker = visibleBottomMarker = visibleRangeArea = false\r\n        } else {\r\n            visibleTopMarker = visibleValArea[0] <= minValue && visibleValArea[1] > minValue;\r\n            visibleBottomMarker = visibleValArea[0] < maxValue && visibleValArea[1] >= maxValue;\r\n            if (rotated) {\r\n                tmp = visibleTopMarker;\r\n                visibleTopMarker = visibleBottomMarker;\r\n                visibleBottomMarker = tmp\r\n            }\r\n        }\r\n        that.visibleTopMarker = visibleTopMarker;\r\n        that.visibleBottomMarker = visibleBottomMarker;\r\n        return visibleRangeArea\r\n    },\r\n    getTooltipParams: function() {\r\n        var that = this;\r\n        var x;\r\n        var y;\r\n        var rotated = that._options.rotated;\r\n        var minValue = !rotated ? _min(that.y, that.minY) : _min(that.x, that.minX);\r\n        var side = !rotated ? \"height\" : \"width\";\r\n        var visibleArea = that._getVisibleArea();\r\n        var minVisible = rotated ? visibleArea.minX : visibleArea.minY;\r\n        var maxVisible = rotated ? visibleArea.maxX : visibleArea.maxY;\r\n        var min = _max(minVisible, minValue);\r\n        var max = _min(maxVisible, minValue + that[side]);\r\n        if (!rotated) {\r\n            x = that.x;\r\n            y = min + (max - min) / 2\r\n        } else {\r\n            y = that.y;\r\n            x = min + (max - min) / 2\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            offset: 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        _symbol_point.default._translate.call(that);\r\n        that.height = rotated ? 0 : _abs(that.minY - that.y);\r\n        that.width = rotated ? _abs(that.x - that.minX) : 0\r\n    },\r\n    hasCoords: function() {\r\n        return _symbol_point.default.hasCoords.call(this) && !(null === this.minX || null === this.minY)\r\n    },\r\n    _updateData: function(data) {\r\n        var that = this;\r\n        _symbol_point.default._updateData.call(that, data);\r\n        that.minValue = that.initialMinValue = that.originalMinValue = data.minValue\r\n    },\r\n    _getImageSettings: function(settings, image) {\r\n        return {\r\n            href: image.url || image.toString(),\r\n            width: image.width || DEFAULT_IMAGE_WIDTH,\r\n            height: image.height || DEFAULT_IMAGE_HEIGHT,\r\n            translateX: settings.translateX,\r\n            translateY: settings.translateY\r\n        }\r\n    },\r\n    getCrosshairData: function(x, y) {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        var minX = that.minX;\r\n        var minY = that.minY;\r\n        var vx = that.vx;\r\n        var vy = that.vy;\r\n        var value = that.value;\r\n        var minValue = that.minValue;\r\n        var argument = that.argument;\r\n        var coords = {\r\n            axis: that.series.axis,\r\n            x: vx,\r\n            y: vy,\r\n            yValue: value,\r\n            xValue: argument\r\n        };\r\n        if (rotated) {\r\n            coords.yValue = argument;\r\n            if (_abs(vx - x) < _abs(minX - x)) {\r\n                coords.xValue = value\r\n            } else {\r\n                coords.x = minX;\r\n                coords.xValue = minValue\r\n            }\r\n        } else {\r\n            if (_abs(vy - y) >= _abs(minY - y)) {\r\n                coords.y = minY;\r\n                coords.yValue = minValue\r\n            }\r\n        }\r\n        return coords\r\n    },\r\n    _updateOneMarker: function(markerType, settings) {\r\n        this.graphic && this.graphic[markerType] && this.graphic[markerType].attr(settings)\r\n    },\r\n    _updateMarker: function(animationEnabled, style) {\r\n        this._drawMarker(void 0, void 0, false, false, style)\r\n    },\r\n    _getFormatObject: function(tooltip) {\r\n        var that = this;\r\n        var initialMinValue = that.initialMinValue;\r\n        var initialValue = that.initialValue;\r\n        var initialArgument = that.initialArgument;\r\n        var minValue = tooltip.formatValue(initialMinValue);\r\n        var value = tooltip.formatValue(initialValue);\r\n        return {\r\n            argument: initialArgument,\r\n            argumentText: tooltip.formatValue(initialArgument, \"argument\"),\r\n            valueText: minValue + \" - \" + value,\r\n            rangeValue1Text: minValue,\r\n            rangeValue2Text: value,\r\n            rangeValue1: initialMinValue,\r\n            rangeValue2: initialValue,\r\n            seriesName: that.series.name,\r\n            point: that,\r\n            originalMinValue: that.originalMinValue,\r\n            originalValue: that.originalValue,\r\n            originalArgument: that.originalArgument\r\n        }\r\n    },\r\n    getLabel: function() {\r\n        return [this._topLabel, this._bottomLabel]\r\n    },\r\n    getLabels: function() {\r\n        return [this._topLabel, this._bottomLabel]\r\n    },\r\n    getBoundingRect: _common.noop,\r\n    coordsIn: function(x, y) {\r\n        var trackerRadius = this._storeTrackerR();\r\n        var xCond = x >= this.x - trackerRadius && x <= this.x + trackerRadius;\r\n        var yCond = y >= this.y - trackerRadius && y <= this.y + trackerRadius;\r\n        if (this._options.rotated) {\r\n            return yCond && (xCond || x >= this.minX - trackerRadius && x <= this.minX + trackerRadius)\r\n        } else {\r\n            return xCond && (yCond || y >= this.minY - trackerRadius && y <= this.minY + trackerRadius)\r\n        }\r\n    },\r\n    getMaxValue: function() {\r\n        if (\"discrete\" !== this.series.valueAxisType) {\r\n            return this.minValue > this.value ? this.minValue : this.value\r\n        }\r\n        return this.value\r\n    },\r\n    getMinValue: function() {\r\n        if (\"discrete\" !== this.series.valueAxisType) {\r\n            return this.minValue < this.value ? this.minValue : this.value\r\n        }\r\n        return this.minValue\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}