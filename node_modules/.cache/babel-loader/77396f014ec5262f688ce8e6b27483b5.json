{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/string.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.isEmpty = exports.replaceAll = exports.format = exports.quadToObject = exports.encodeHtml = void 0;\n\nvar _type = require(\"./type\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar encodeHtml = function () {\n  var encodeRegExp = [new RegExp(\"&\", \"g\"), new RegExp('\"', \"g\"), new RegExp(\"'\", \"g\"), new RegExp(\"<\", \"g\"), new RegExp(\">\", \"g\")];\n  return function (str) {\n    return String(str).replace(encodeRegExp[0], \"&amp;\").replace(encodeRegExp[1], \"&quot;\").replace(encodeRegExp[2], \"&#39;\").replace(encodeRegExp[3], \"&lt;\").replace(encodeRegExp[4], \"&gt;\");\n  };\n}();\n\nexports.encodeHtml = encodeHtml;\n\nvar splitQuad = function splitQuad(raw) {\n  switch (_typeof(raw)) {\n    case \"string\":\n      return raw.split(/\\s+/, 4);\n\n    case \"object\":\n      return [raw.x || raw.h || raw.left, raw.y || raw.v || raw.top, raw.x || raw.h || raw.right, raw.y || raw.v || raw.bottom];\n\n    case \"number\":\n      return [raw];\n\n    default:\n      return raw;\n  }\n};\n\nvar quadToObject = function quadToObject(raw) {\n  var quad = splitQuad(raw);\n  var left = parseInt(quad && quad[0], 10);\n  var top = parseInt(quad && quad[1], 10);\n  var right = parseInt(quad && quad[2], 10);\n  var bottom = parseInt(quad && quad[3], 10);\n\n  if (!isFinite(left)) {\n    left = 0;\n  }\n\n  if (!isFinite(top)) {\n    top = left;\n  }\n\n  if (!isFinite(right)) {\n    right = left;\n  }\n\n  if (!isFinite(bottom)) {\n    bottom = top;\n  }\n\n  return {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n};\n\nexports.quadToObject = quadToObject;\n\nvar format = function format() {\n  var s = arguments[0];\n  var values = [].slice.call(arguments).slice(1);\n  var replaceDollarCount;\n  var reg;\n  var value;\n\n  if ((0, _type.isFunction)(s)) {\n    return s.apply(this, values);\n  }\n\n  for (var i = 0; i < values.length; i++) {\n    reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n    value = values[i];\n\n    if (\"string\" === (0, _type.type)(value) && value.indexOf(\"$\") >= 0) {\n      replaceDollarCount = \"$\".replace(\"$\", \"$$\").length;\n      value = value.replace(\"$\", 1 === replaceDollarCount ? \"$$$$\" : \"$$\");\n    }\n\n    s = s.replace(reg, value);\n  }\n\n  return s;\n};\n\nexports.format = format;\n\nvar replaceAll = function () {\n  var quote = function quote(str) {\n    return (str + \"\").replace(/([+*?.[^\\]$(){}><|=!:])/g, \"\\\\$1\");\n  };\n\n  return function (text, searchToken, replacementToken) {\n    return text.replace(new RegExp(\"(\" + quote(searchToken) + \")\", \"gi\"), replacementToken);\n  };\n}();\n\nexports.replaceAll = replaceAll;\n\nvar isEmpty = function () {\n  var SPACE_REGEXP = /\\s/g;\n  return function (text) {\n    return !text || !text.replace(SPACE_REGEXP, \"\");\n  };\n}();\n\nexports.isEmpty = isEmpty;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/core/utils/string.js"],"names":["exports","isEmpty","replaceAll","format","quadToObject","encodeHtml","_type","require","_typeof","obj","Symbol","iterator","constructor","prototype","encodeRegExp","RegExp","str","String","replace","splitQuad","raw","split","x","h","left","y","v","top","right","bottom","quad","parseInt","isFinite","s","arguments","values","slice","call","replaceDollarCount","reg","value","isFunction","apply","i","length","type","indexOf","quote","text","searchToken","replacementToken","SPACE_REGEXP"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/string.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.isEmpty = exports.replaceAll = exports.format = exports.quadToObject = exports.encodeHtml = void 0;\r\nvar _type = require(\"./type\");\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nvar encodeHtml = function() {\r\n    var encodeRegExp = [new RegExp(\"&\", \"g\"), new RegExp('\"', \"g\"), new RegExp(\"'\", \"g\"), new RegExp(\"<\", \"g\"), new RegExp(\">\", \"g\")];\r\n    return function(str) {\r\n        return String(str).replace(encodeRegExp[0], \"&amp;\").replace(encodeRegExp[1], \"&quot;\").replace(encodeRegExp[2], \"&#39;\").replace(encodeRegExp[3], \"&lt;\").replace(encodeRegExp[4], \"&gt;\")\r\n    }\r\n}();\r\nexports.encodeHtml = encodeHtml;\r\nvar splitQuad = function(raw) {\r\n    switch (_typeof(raw)) {\r\n        case \"string\":\r\n            return raw.split(/\\s+/, 4);\r\n        case \"object\":\r\n            return [raw.x || raw.h || raw.left, raw.y || raw.v || raw.top, raw.x || raw.h || raw.right, raw.y || raw.v || raw.bottom];\r\n        case \"number\":\r\n            return [raw];\r\n        default:\r\n            return raw\r\n    }\r\n};\r\nvar quadToObject = function(raw) {\r\n    var quad = splitQuad(raw);\r\n    var left = parseInt(quad && quad[0], 10);\r\n    var top = parseInt(quad && quad[1], 10);\r\n    var right = parseInt(quad && quad[2], 10);\r\n    var bottom = parseInt(quad && quad[3], 10);\r\n    if (!isFinite(left)) {\r\n        left = 0\r\n    }\r\n    if (!isFinite(top)) {\r\n        top = left\r\n    }\r\n    if (!isFinite(right)) {\r\n        right = left\r\n    }\r\n    if (!isFinite(bottom)) {\r\n        bottom = top\r\n    }\r\n    return {\r\n        top: top,\r\n        right: right,\r\n        bottom: bottom,\r\n        left: left\r\n    }\r\n};\r\nexports.quadToObject = quadToObject;\r\nvar format = function() {\r\n    var s = arguments[0];\r\n    var values = [].slice.call(arguments).slice(1);\r\n    var replaceDollarCount;\r\n    var reg;\r\n    var value;\r\n    if ((0, _type.isFunction)(s)) {\r\n        return s.apply(this, values)\r\n    }\r\n    for (var i = 0; i < values.length; i++) {\r\n        reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\r\n        value = values[i];\r\n        if (\"string\" === (0, _type.type)(value) && value.indexOf(\"$\") >= 0) {\r\n            replaceDollarCount = \"$\".replace(\"$\", \"$$\").length;\r\n            value = value.replace(\"$\", 1 === replaceDollarCount ? \"$$$$\" : \"$$\")\r\n        }\r\n        s = s.replace(reg, value)\r\n    }\r\n    return s\r\n};\r\nexports.format = format;\r\nvar replaceAll = function() {\r\n    var quote = function(str) {\r\n        return (str + \"\").replace(/([+*?.[^\\]$(){}><|=!:])/g, \"\\\\$1\")\r\n    };\r\n    return function(text, searchToken, replacementToken) {\r\n        return text.replace(new RegExp(\"(\" + quote(searchToken) + \")\", \"gi\"), replacementToken)\r\n    }\r\n}();\r\nexports.replaceAll = replaceAll;\r\nvar isEmpty = function() {\r\n    var SPACE_REGEXP = /\\s/g;\r\n    return function(text) {\r\n        return !text || !text.replace(SPACE_REGEXP, \"\")\r\n    }\r\n}();\r\nexports.isEmpty = isEmpty;\r\n"]},"metadata":{},"sourceType":"script"}