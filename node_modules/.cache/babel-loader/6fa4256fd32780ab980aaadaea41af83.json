{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-chart-material-ui\n * Generated: 2020-11-03\n * Version: 2.7.3\n * License: https://js.devexpress.com/Licensing\n */\nimport { createElement, useState, forwardRef } from 'react';\nimport { node, string, object, any, bool, oneOfType, func } from 'prop-types';\nimport { withComponents } from '@devexpress/dx-react-core';\nimport { withPatchedProps, Chart as Chart$1, Palette, Legend as Legend$1, Title as Title$1, ScatterSeries as ScatterSeries$1, Axis, ValueAxis as ValueAxis$1, ArgumentAxis as ArgumentAxis$1, Tooltip as Tooltip$1, ZoomAndPan as ZoomAndPan$1 } from '@devexpress/dx-react-chart';\nexport { AreaSeries, BarSeries, LineSeries, PieSeries, SplineSeries } from '@devexpress/dx-react-chart';\nimport { lighten, fade, darken } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'clsx';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Popper from '@material-ui/core/Popper';\nimport { RIGHT, TOP } from '@devexpress/dx-chart-core';\nimport Paper from '@material-ui/core/Paper';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar getBorderColor = function getBorderColor(theme) {\n  return theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68);\n};\n\nvar withClassName = function withClassName() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var setClassName = function setClassName(_ref) {\n    var className = _ref.className,\n        classes = _ref.classes,\n        restProps = _objectWithoutProperties(_ref, [\"className\", \"classes\"]);\n\n    return _objectSpread2({\n      className: classNames(classes.root, className)\n    }, restProps);\n  }; // TODO: First candidate to `compose` util?\n\n\n  return function (Target) {\n    return withStyles.apply(void 0, args)(withPatchedProps(setClassName)(Target));\n  };\n};\n\nvar styles = function styles(theme) {\n  var _theme$typography = theme.typography,\n      fontFamily = _theme$typography.fontFamily,\n      fontSize = _theme$typography.fontSize,\n      fontWeightLight = _theme$typography.fontWeightLight;\n  return {\n    root: {\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      fontWeight: fontWeightLight,\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '10px',\n      boxSizing: 'border-box'\n    }\n  };\n};\n\nvar Root = withClassName(styles)(Chart$1.Root);\n\nvar styles$1 = function styles(theme) {\n  var fontFamily = theme.typography.fontFamily;\n  return {\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily: fontFamily,\n      fontSize: 12,\n      fontWeight: 400\n    }\n  };\n};\n\nvar Label = withClassName(styles$1)(Chart$1.Label);\nvar palette = ['#42A5F5', '#FF7043', '#9CCC65', '#FFCA28', '#26A69A', '#EC407A'];\n\nvar ChartWithPalette = function ChartWithPalette(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return createElement(Chart$1, props, createElement(Palette, {\n    scheme: palette\n  }), children);\n};\n\nChartWithPalette.components = Chart$1.components;\nprocess.env.NODE_ENV !== \"production\" ? ChartWithPalette.propTypes = {\n  children: node.isRequired\n} : void 0;\nvar Chart = withComponents({\n  Root: Root\n})(ChartWithPalette);\nChart.Label = Label;\n\nvar styles$2 = function styles() {\n  return {\n    root: {\n      paddingTop: 16,\n      paddingBottom: 16\n    }\n  };\n};\n\nvar Root$1 = withClassName(styles$2, {\n  name: 'LegendRoot'\n})(List);\n\nvar styles$3 = function styles() {\n  return {\n    root: {\n      fontSize: 14,\n      paddingLeft: 8,\n      paddingRight: 8\n    }\n  };\n};\n\nvar Label$1 = withClassName(styles$3, {\n  name: 'LegendLabel'\n})(function (_ref) {\n  var text = _ref.text,\n      restProps = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return createElement(ListItemText, restProps, text);\n});\n\nvar styles$4 = function styles(theme) {\n  return {\n    root: {\n      alignItems: 'center',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5)\n    }\n  };\n};\n\nvar Item = withClassName(styles$4, {\n  name: 'LegendItem'\n})(ListItem);\nvar Legend = withComponents({\n  Root: Root$1,\n  Item: Item,\n  Label: Label$1\n})(Legend$1);\n\nvar styles$5 = function styles() {\n  return {\n    root: {\n      textAlign: 'center',\n      width: '100%',\n      marginBottom: '20px'\n    }\n  };\n};\n\nvar Text = withClassName(styles$5, {\n  name: 'Title'\n})(function (_ref) {\n  var text = _ref.text,\n      restProps = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return createElement(Typography, _extends({\n    component: \"h3\",\n    variant: \"h5\"\n  }, restProps), text);\n});\nvar Title = withComponents({\n  Text: Text\n})(Title$1);\n\nvar styles$6 = function styles(theme) {\n  return {\n    point: {\n      fill: theme.palette.background.paper\n    }\n  };\n};\n\nvar setClassName = function setClassName(_ref) {\n  var classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  if (restProps.state) {\n    var className = restProps.className,\n        rest = _objectWithoutProperties(restProps, [\"className\"]);\n\n    return _objectSpread2({\n      className: classNames(classes.point, className)\n    }, rest);\n  }\n\n  return restProps;\n};\n\nvar Point = withStyles(styles$6)(withPatchedProps(setClassName)(ScatterSeries$1.Point));\nvar ScatterSeries = withComponents({\n  Point: Point\n})(ScatterSeries$1);\n\nvar styles$7 = function styles() {\n  return {\n    root: {\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Root$2 = withClassName(styles$7)(Axis.Root);\n\nvar styles$8 = function styles(theme) {\n  return {\n    root: {\n      stroke: getBorderColor(theme),\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Tick = withClassName(styles$8)(Axis.Tick);\n\nvar styles$9 = function styles(theme) {\n  var fontFamily = theme.typography.fontFamily;\n  return {\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily: fontFamily,\n      fontSize: 12,\n      fontWeight: 400,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\n\nvar Label$2 = withClassName(styles$9)(Axis.Label);\n\nvar styles$a = function styles(theme) {\n  return {\n    root: {\n      stroke: getBorderColor(theme),\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Line = withClassName(styles$a)(Axis.Line);\n\nvar styles$b = function styles(theme) {\n  return {\n    root: {\n      stroke: getBorderColor(theme),\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Grid = withClassName(styles$b)(Axis.Grid);\nvar ValueAxis = withComponents({\n  Root: Root$2,\n  Tick: Tick,\n  Label: Label$2,\n  Line: Line,\n  Grid: Grid\n})(ValueAxis$1);\nvar ArgumentAxis = withComponents({\n  Root: Root$2,\n  Tick: Tick,\n  Label: Label$2,\n  Line: Line,\n  Grid: Grid\n})(ArgumentAxis$1);\n\nvar styles$c = function styles(theme) {\n  var arrowSize = theme.spacing(1.2);\n  return {\n    'popper-top': {\n      zIndex: 1,\n      marginBottom: \"\".concat(arrowSize, \"px\")\n    },\n    'popper-right': {\n      zIndex: 1,\n      marginLeft: \"\".concat(arrowSize, \"px\")\n    }\n  };\n};\n\nvar popperModifiers = function popperModifiers(arrowRef) {\n  return {\n    flip: {\n      enabled: false\n    },\n    arrow: {\n      element: arrowRef\n    }\n  };\n};\n\nvar OverlayBase = function OverlayBase(_ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      children = _ref.children,\n      target = _ref.target,\n      rotated = _ref.rotated,\n      ArrowComponent = _ref.arrowComponent,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"children\", \"target\", \"rotated\", \"arrowComponent\"]);\n\n  var _React$useState = useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  var placement = rotated ? RIGHT : TOP;\n  return createElement(Popper, _extends({\n    open: true,\n    anchorEl: target,\n    placement: placement,\n    className: classNames(classes[\"popper-\".concat(placement)], className),\n    modifiers: popperModifiers(arrowRef)\n  }, restProps), children, createElement(ArrowComponent, {\n    placement: placement,\n    ref: setArrowRef\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? OverlayBase.propTypes = {\n  className: string,\n  classes: object.isRequired,\n  children: node.isRequired,\n  target: any.isRequired,\n  rotated: bool.isRequired,\n  arrowComponent: oneOfType([func, object]).isRequired\n} : void 0;\nOverlayBase.defaultProps = {\n  className: undefined\n};\nvar Overlay = withStyles(styles$c)(OverlayBase);\n\nvar styles$d = function styles(theme) {\n  return {\n    root: {\n      fontSize: 14,\n      padding: theme.spacing(0.5)\n    }\n  };\n};\n\nvar Content = withClassName(styles$d, {\n  name: 'TooltipContent'\n})(function (_ref) {\n  var text = _ref.text,\n      targetItem = _ref.targetItem,\n      restProps = _objectWithoutProperties(_ref, [\"text\", \"targetItem\"]);\n\n  return createElement(Typography, restProps, text);\n});\n\nvar styles$e = function styles(theme) {\n  var arrowSize = theme.spacing(1.2);\n  return {\n    'arrow-top': {\n      width: \"\".concat(arrowSize * 2, \"px\"),\n      height: \"\".concat(arrowSize, \"px\"),\n      position: 'absolute',\n      top: '100%',\n      overflow: 'hidden',\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: \"\".concat(arrowSize, \"px\"),\n        height: \"\".concat(arrowSize, \"px\"),\n        background: theme.palette.background.paper,\n        transform: 'translateX(-50%) translateY(-50%) rotate(45deg)',\n        left: '50%',\n        boxShadow: theme.shadows[2]\n      }\n    },\n    'arrow-right': {\n      width: \"\".concat(arrowSize, \"px\"),\n      height: \"\".concat(arrowSize * 2, \"px\"),\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateX(-100%)',\n      overflow: 'hidden',\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: \"\".concat(arrowSize, \"px\"),\n        height: \"\".concat(arrowSize, \"px\"),\n        background: theme.palette.background.paper,\n        transform: 'translateX(-50%) translateY(-50%) rotate(45deg)',\n        top: '50%',\n        left: '100%',\n        boxShadow: theme.shadows[2]\n      }\n    }\n  };\n};\n\nvar BaseArrow = forwardRef(function (_ref, ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      placement = _ref.placement,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"placement\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes[\"arrow-\".concat(placement)], className),\n    ref: ref\n  }, restProps));\n});\nBaseArrow.propTypes = {\n  placement: string.isRequired,\n  classes: object.isRequired,\n  className: string\n};\nBaseArrow.defaultProps = {\n  className: undefined\n};\nvar Arrow = withStyles(styles$e)(BaseArrow);\n\nvar styles$f = function styles(theme) {\n  return {\n    root: {\n      padding: theme.spacing(0.5, 1)\n    }\n  };\n};\n\nvar Sheet = withClassName(styles$f)(function (props) {\n  return createElement(Paper, props);\n});\nvar Tooltip = withComponents({\n  Overlay: Overlay,\n  Content: Content,\n  Sheet: Sheet,\n  Arrow: Arrow\n})(Tooltip$1);\n\nvar styles$g = function styles(theme) {\n  return {\n    root: {\n      fill: theme.palette.primary.main,\n      opacity: 0.2\n    }\n  };\n};\n\nvar DragBox = withClassName(styles$g)(ZoomAndPan$1.DragBox);\nvar ZoomAndPan = withComponents({\n  DragBox: DragBox\n})(ZoomAndPan$1);\nexport { ArgumentAxis, Chart, Legend, ScatterSeries, Title, Tooltip, ValueAxis, ZoomAndPan };","map":{"version":3,"sources":["../src/templates/utils.jsx","../src/templates/layout.jsx","../src/templates/label.jsx","../src/chart.jsx","../src/templates/legend/root.jsx","../src/templates/legend/label.jsx","../src/templates/legend/item.jsx","../src/plugins/legend.jsx","../src/templates/title/text.jsx","../src/plugins/title.jsx","../src/templates/series/point.jsx","../src/plugins/scatter-series.jsx","../src/templates/axis/root.jsx","../src/templates/axis/tick.jsx","../src/templates/axis/label.jsx","../src/templates/axis/line.jsx","../src/templates/axis/grid.jsx","../src/plugins/value-axis.jsx","../src/plugins/argument-axis.jsx","../src/templates/tooltip/overlay.jsx","../src/templates/tooltip/content.jsx","../src/templates/tooltip/arrow.jsx","../src/templates/tooltip/sheet.jsx","../src/plugins/tooltip.jsx","../src/templates/zoom-and-pan/drag-box.jsx","../src/plugins/zoom-and-pan.jsx"],"names":["getBorderColor","theme","lighten","fade","darken","withClassName","args","setClassName","className","classes","restProps","classNames","withStyles","withPatchedProps","styles","fontFamily","fontSize","fontWeightLight","root","fontWeight","display","flexDirection","padding","boxSizing","Root","Chart","fill","Label","palette","ChartWithPalette","children","props","ChartBase","PropTypes","isRequired","paddingTop","paddingBottom","name","paddingLeft","paddingRight","text","React.createElement","alignItems","Item","Legend","textAlign","width","marginBottom","Text","Title","point","paper","rest","Point","ScatterSeries","shapeRendering","Axis","stroke","Tick","backgroundColor","Line","Grid","ValueAxis","ArgumentAxis","arrowSize","zIndex","marginLeft","popperModifiers","flip","enabled","arrow","element","arrowRef","OverlayBase","target","rotated","arrowComponent","ArrowComponent","setArrowRef","React","placement","undefined","Overlay","Content","targetItem","height","position","top","overflow","content","background","transform","left","boxShadow","BaseArrow","ref","Arrow","Sheet","Tooltip","opacity","DragBox","ZoomAndPanBase","ZoomAndPan"],"mappings":"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","sourcesContent":["import { withPatchedProps } from '@devexpress/dx-react-chart';\nimport { darken, fade, lighten } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'clsx';\n\nexport const getBorderColor = theme => (\n  theme.palette.type === 'light'\n    ? lighten(fade(theme.palette.divider, 1), 0.88)\n    : darken(fade(theme.palette.divider, 1), 0.68)\n);\n\nexport const withClassName = (...args) => {\n  const setClassName = ({ className, classes, ...restProps }) => ({\n    className: classNames(classes.root, className),\n    ...restProps,\n  });\n  // TODO: First candidate to `compose` util?\n  return Target => withStyles(...args)(withPatchedProps(setClassName)(Target));\n};\n","import { Chart } from '@devexpress/dx-react-chart';\nimport { withClassName } from './utils';\n\nconst styles = (theme) => {\n  const { fontFamily, fontSize, fontWeightLight } = theme.typography;\n  return ({\n    root: {\n      fontFamily,\n      fontSize,\n      fontWeight: fontWeightLight,\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '10px',\n      boxSizing: 'border-box',\n    },\n  });\n};\n\nexport const Root = withClassName(styles)(Chart.Root);\n","import { Chart } from '@devexpress/dx-react-chart';\nimport { withClassName } from './utils';\n\nconst styles = (theme) => {\n  const { fontFamily } = theme.typography;\n  return ({\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily,\n      fontSize: 12,\n      fontWeight: 400,\n    },\n  });\n};\n\nexport const Label = withClassName(styles)(Chart.Label);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { withComponents } from '@devexpress/dx-react-core';\nimport { Chart as ChartBase, Palette } from '@devexpress/dx-react-chart';\nimport { Root } from './templates/layout';\nimport { Label } from './templates/label';\n\nconst palette = ['#42A5F5', '#FF7043', '#9CCC65', '#FFCA28', '#26A69A', '#EC407A'];\n\nconst ChartWithPalette = ({ children, ...props }) => (\n  <ChartBase\n    {...props}\n  >\n    <Palette scheme={palette} />\n    {children}\n  </ChartBase>\n);\n\nChartWithPalette.components = ChartBase.components;\n\nChartWithPalette.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const Chart = withComponents({ Root })(ChartWithPalette);\nChart.Label = Label;\n","import List from '@material-ui/core/List';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    paddingTop: 16,\n    paddingBottom: 16,\n  },\n});\n\nexport const Root = withClassName(styles, { name: 'LegendRoot' })(List);\n","import * as React from 'react';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    fontSize: 14,\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport const Label = withClassName(styles, { name: 'LegendLabel' })(\n  ({ text, ...restProps }) => <ListItemText {...restProps}>{text}</ListItemText>,\n);\n","import ListItem from '@material-ui/core/ListItem';\nimport { withClassName } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n  },\n});\n\nexport const Item = withClassName(styles, { name: 'LegendItem' })(ListItem);\n","import { withComponents } from '@devexpress/dx-react-core';\nimport { Legend as LegendBase } from '@devexpress/dx-react-chart';\nimport { Root } from '../templates/legend/root';\nimport { Label } from '../templates/legend/label';\nimport { Item } from '../templates/legend/item';\n\nexport const Legend = withComponents({\n  Root, Item, Label,\n})(LegendBase);\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    textAlign: 'center',\n    width: '100%',\n    marginBottom: '20px',\n  },\n});\n\nexport const Text = withClassName(styles, { name: 'Title' })(\n  ({ text, ...restProps }) => <Typography component=\"h3\" variant=\"h5\" {...restProps}>{text}</Typography>,\n);\n","import { withComponents } from '@devexpress/dx-react-core';\nimport { Title as TitleBase } from '@devexpress/dx-react-chart';\nimport { Text } from '../templates/title/text';\n\nexport const Title = withComponents({ Text })(TitleBase);\n","import { ScatterSeries, withPatchedProps } from '@devexpress/dx-react-chart';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'clsx';\n\nconst styles = theme => ({\n  point: {\n    fill: theme.palette.background.paper,\n  },\n});\n\nconst setClassName = ({ classes, ...restProps }) => {\n  if (restProps.state) {\n    const { className, ...rest } = restProps;\n    return {\n      className: classNames(classes.point, className),\n      ...rest,\n    };\n  }\n  return restProps;\n};\n\nexport const Point = withStyles(styles)(\n  withPatchedProps(setClassName)(\n    ScatterSeries.Point,\n  ),\n);\n","import { withComponents } from '@devexpress/dx-react-core';\nimport { ScatterSeries as ScatterSeriesBase } from '@devexpress/dx-react-chart';\nimport { Point } from '../templates/series/point';\n\nexport const ScatterSeries = withComponents({ Point })(ScatterSeriesBase);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Root = withClassName(styles)(Axis.Root);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName, getBorderColor } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    stroke: getBorderColor(theme),\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Tick = withClassName(styles)(Axis.Tick);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName } from '../utils';\n\nconst styles = (theme) => {\n  const { fontFamily } = theme.typography;\n  return ({\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily,\n      fontSize: 12,\n      fontWeight: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n  });\n};\n\nexport const Label = withClassName(styles)(Axis.Label);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName, getBorderColor } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    stroke: getBorderColor(theme),\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Line = withClassName(styles)(Axis.Line);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName, getBorderColor } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    stroke: getBorderColor(theme),\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Grid = withClassName(styles)(Axis.Grid);\n","import { withComponents } from '@devexpress/dx-react-core';\nimport { ValueAxis as ValueAxisBase } from '@devexpress/dx-react-chart';\nimport { Root } from '../templates/axis/root';\nimport { Tick } from '../templates/axis/tick';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\nimport { Grid } from '../templates/axis/grid';\n\nexport const ValueAxis = withComponents({\n  Root, Tick, Label, Line, Grid,\n})(ValueAxisBase);\n","import { withComponents } from '@devexpress/dx-react-core';\nimport { ArgumentAxis as ArgumentAxisBase } from '@devexpress/dx-react-chart';\nimport { Root } from '../templates/axis/root';\nimport { Tick } from '../templates/axis/tick';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\nimport { Grid } from '../templates/axis/grid';\n\nexport const ArgumentAxis = withComponents({\n  Root, Tick, Label, Line, Grid,\n})(ArgumentAxisBase);\n","import * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport { RIGHT, TOP } from '@devexpress/dx-chart-core';\nimport classNames from 'clsx';\nimport * as PropTypes from 'prop-types';\n\nconst styles = (theme) => {\n  const arrowSize = theme.spacing(1.2);\n  return {\n    'popper-top': {\n      zIndex: 1,\n      marginBottom: `${arrowSize}px`,\n    },\n    'popper-right': {\n      zIndex: 1,\n      marginLeft: `${arrowSize}px`,\n    },\n  };\n};\n\nconst popperModifiers = arrowRef => ({\n  flip: { enabled: false },\n  arrow: {\n    element: arrowRef,\n  },\n});\n\nconst OverlayBase = ({\n  classes, className, children, target, rotated, arrowComponent: ArrowComponent, ...restProps\n}) => {\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const placement = rotated ? RIGHT : TOP;\n\n  return (\n    <Popper\n      open\n      anchorEl={target}\n      placement={placement}\n      className={classNames(classes[`popper-${placement}`], className)}\n      modifiers={popperModifiers(arrowRef)}\n      {...restProps}\n    >\n      {children}\n      <ArrowComponent placement={placement} ref={setArrowRef} />\n    </Popper>\n  );\n};\n\nOverlayBase.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  target: PropTypes.any.isRequired,\n  rotated: PropTypes.bool.isRequired,\n  arrowComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n};\n\nOverlayBase.defaultProps = {\n  className: undefined,\n};\n\nexport const Overlay = withStyles(styles)(OverlayBase);\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withClassName } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    fontSize: 14,\n    padding: theme.spacing(0.5),\n  },\n});\n\nexport const Content = withClassName(styles, { name: 'TooltipContent' })(\n  ({ text, targetItem, ...restProps }) => <Typography {...restProps}>{text}</Typography>,\n);\n","import * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'clsx';\nimport * as PropTypes from 'prop-types';\n\nconst styles = (theme) => {\n  const arrowSize = theme.spacing(1.2);\n  return {\n    'arrow-top': {\n      width: `${arrowSize * 2}px`,\n      height: `${arrowSize}px`,\n      position: 'absolute',\n      top: '100%',\n      overflow: 'hidden',\n\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: `${arrowSize}px`,\n        height: `${arrowSize}px`,\n        background: theme.palette.background.paper,\n        transform: 'translateX(-50%) translateY(-50%) rotate(45deg)',\n        left: '50%',\n        boxShadow: theme.shadows[2],\n      },\n    },\n    'arrow-right': {\n      width: `${arrowSize}px`,\n      height: `${arrowSize * 2}px`,\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateX(-100%)',\n      overflow: 'hidden',\n\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: `${arrowSize}px`,\n        height: `${arrowSize}px`,\n        background: theme.palette.background.paper,\n        transform: 'translateX(-50%) translateY(-50%) rotate(45deg)',\n        top: '50%',\n        left: '100%',\n        boxShadow: theme.shadows[2],\n      },\n    },\n  };\n};\n\nconst BaseArrow = React.forwardRef(({\n  classes, className, placement, ...restProps\n}, ref) => (\n  <div className={classNames(classes[`arrow-${placement}`], className)} ref={ref} {...restProps} />\n));\n\nBaseArrow.propTypes = {\n  placement: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nBaseArrow.defaultProps = {\n  className: undefined,\n};\n\nexport const Arrow = withStyles(styles)(BaseArrow);\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { withClassName } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(0.5, 1),\n  },\n});\n\nexport const Sheet = withClassName(styles)(props => (\n  <Paper {...props} />\n));\n","import { Tooltip as TooltipBase } from '@devexpress/dx-react-chart';\nimport { withComponents } from '@devexpress/dx-react-core';\nimport { Overlay } from '../templates/tooltip/overlay';\nimport { Content } from '../templates/tooltip/content';\nimport { Arrow } from '../templates/tooltip/arrow';\nimport { Sheet } from '../templates/tooltip/sheet';\n\nexport const Tooltip = withComponents({\n  Overlay, Content, Sheet, Arrow,\n})(TooltipBase);\n","import { ZoomAndPan as ZoomAndPanBase } from '@devexpress/dx-react-chart';\nimport { withClassName } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    fill: theme.palette.primary.main,\n    opacity: 0.2,\n  },\n});\n\nexport const DragBox = withClassName(styles)(ZoomAndPanBase.DragBox);\n","import { ZoomAndPan as ZoomAndPanBase } from '@devexpress/dx-react-chart';\nimport { withComponents } from '@devexpress/dx-react-core';\nimport { DragBox } from '../templates/zoom-and-pan/drag-box';\n\nexport const ZoomAndPan = withComponents({ DragBox })(ZoomAndPanBase);\n"]},"metadata":{},"sourceType":"module"}