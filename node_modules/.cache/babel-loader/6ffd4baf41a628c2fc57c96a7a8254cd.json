{"ast":null,"code":"/**\r\n * DevExtreme (data/remote_query.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _query_adapters = _interopRequireDefault(require(\"./query_adapters\"));\n\nvar _errors = _interopRequireDefault(require(\"./errors\"));\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _deferred = require(\"../core/utils/deferred\");\n\nvar _array_query = _interopRequireDefault(require(\"./array_query\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar remoteQueryImpl = function remoteQueryImpl(url, queryOptions, tasks) {\n  tasks = tasks || [];\n  queryOptions = queryOptions || {};\n\n  var createTask = function createTask(name, args) {\n    return {\n      name: name,\n      args: args\n    };\n  };\n\n  var exec = function exec(executorTask) {\n    var d = new _deferred.Deferred();\n\n    var _adapterFactory;\n\n    var _adapter;\n\n    var _taskQueue;\n\n    var _currentTask;\n\n    var _mergedSortArgs;\n\n    var rejectWithNotify = function rejectWithNotify(error) {\n      var handler = queryOptions.errorHandler;\n\n      if (handler) {\n        handler(error);\n      }\n\n      _errors.default._errorHandler(error);\n\n      d.reject(error);\n    };\n\n    function mergeSortTask(task) {\n      switch (task.name) {\n        case \"sortBy\":\n          _mergedSortArgs = [task.args];\n          return true;\n\n        case \"thenBy\":\n          if (!_mergedSortArgs) {\n            throw _errors.default.errors.Error(\"E4004\");\n          }\n\n          _mergedSortArgs.push(task.args);\n\n          return true;\n      }\n\n      return false;\n    }\n\n    function unmergeSortTasks() {\n      var head = _taskQueue[0];\n      var unmergedTasks = [];\n\n      if (head && \"multiSort\" === head.name) {\n        _taskQueue.shift();\n\n        (0, _iterator.each)(head.args[0], function () {\n          unmergedTasks.push(createTask(unmergedTasks.length ? \"thenBy\" : \"sortBy\", this));\n        });\n      }\n\n      _taskQueue = unmergedTasks.concat(_taskQueue);\n    }\n\n    try {\n      _adapterFactory = queryOptions.adapter;\n\n      if (!(0, _type.isFunction)(_adapterFactory)) {\n        _adapterFactory = _query_adapters.default[_adapterFactory];\n      }\n\n      _adapter = _adapterFactory(queryOptions);\n      _taskQueue = [].concat(tasks).concat(executorTask);\n      var optimize = _adapter.optimize;\n\n      if (optimize) {\n        optimize(_taskQueue);\n      }\n\n      while (_taskQueue.length) {\n        _currentTask = _taskQueue[0];\n\n        if (!mergeSortTask(_currentTask)) {\n          if (_mergedSortArgs) {\n            _taskQueue.unshift(createTask(\"multiSort\", [_mergedSortArgs]));\n\n            _mergedSortArgs = null;\n            continue;\n          }\n\n          if (\"enumerate\" !== String(_currentTask.name)) {\n            if (!_adapter[_currentTask.name] || false === _adapter[_currentTask.name].apply(_adapter, _currentTask.args)) {\n              break;\n            }\n          }\n        }\n\n        _taskQueue.shift();\n      }\n\n      unmergeSortTasks();\n\n      _adapter.exec(url).done(function (result, extra) {\n        if (!_taskQueue.length) {\n          d.resolve(result, extra);\n        } else {\n          var clientChain = (0, _array_query.default)(result, {\n            errorHandler: queryOptions.errorHandler\n          });\n          (0, _iterator.each)(_taskQueue, function () {\n            clientChain = clientChain[this.name].apply(clientChain, this.args);\n          });\n          clientChain.done(d.resolve).fail(d.reject);\n        }\n      }).fail(rejectWithNotify);\n    } catch (x) {\n      rejectWithNotify(x);\n    }\n\n    return d.promise();\n  };\n\n  var query = {};\n  (0, _iterator.each)([\"sortBy\", \"thenBy\", \"filter\", \"slice\", \"select\", \"groupBy\"], function () {\n    var name = String(this);\n\n    query[name] = function () {\n      return remoteQueryImpl(url, queryOptions, tasks.concat(createTask(name, arguments)));\n    };\n  });\n  (0, _iterator.each)([\"count\", \"min\", \"max\", \"sum\", \"avg\", \"aggregate\", \"enumerate\"], function () {\n    var name = String(this);\n\n    query[name] = function () {\n      return exec.call(this, createTask(name, arguments));\n    };\n  });\n  return query;\n};\n\nvar _default = remoteQueryImpl;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/data/remote_query.js"],"names":["exports","default","_query_adapters","_interopRequireDefault","require","_errors","_iterator","_type","_deferred","_array_query","obj","__esModule","remoteQueryImpl","url","queryOptions","tasks","createTask","name","args","exec","executorTask","d","Deferred","_adapterFactory","_adapter","_taskQueue","_currentTask","_mergedSortArgs","rejectWithNotify","error","handler","errorHandler","_errorHandler","reject","mergeSortTask","task","errors","Error","push","unmergeSortTasks","head","unmergedTasks","shift","each","length","concat","adapter","isFunction","optimize","unshift","String","apply","done","result","extra","resolve","clientChain","fail","x","promise","query","arguments","call","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (data/remote_query.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _query_adapters = _interopRequireDefault(require(\"./query_adapters\"));\r\nvar _errors = _interopRequireDefault(require(\"./errors\"));\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _deferred = require(\"../core/utils/deferred\");\r\nvar _array_query = _interopRequireDefault(require(\"./array_query\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar remoteQueryImpl = function remoteQueryImpl(url, queryOptions, tasks) {\r\n    tasks = tasks || [];\r\n    queryOptions = queryOptions || {};\r\n    var createTask = function(name, args) {\r\n        return {\r\n            name: name,\r\n            args: args\r\n        }\r\n    };\r\n    var exec = function(executorTask) {\r\n        var d = new _deferred.Deferred;\r\n        var _adapterFactory;\r\n        var _adapter;\r\n        var _taskQueue;\r\n        var _currentTask;\r\n        var _mergedSortArgs;\r\n        var rejectWithNotify = function(error) {\r\n            var handler = queryOptions.errorHandler;\r\n            if (handler) {\r\n                handler(error)\r\n            }\r\n            _errors.default._errorHandler(error);\r\n            d.reject(error)\r\n        };\r\n\r\n        function mergeSortTask(task) {\r\n            switch (task.name) {\r\n                case \"sortBy\":\r\n                    _mergedSortArgs = [task.args];\r\n                    return true;\r\n                case \"thenBy\":\r\n                    if (!_mergedSortArgs) {\r\n                        throw _errors.default.errors.Error(\"E4004\")\r\n                    }\r\n                    _mergedSortArgs.push(task.args);\r\n                    return true\r\n            }\r\n            return false\r\n        }\r\n\r\n        function unmergeSortTasks() {\r\n            var head = _taskQueue[0];\r\n            var unmergedTasks = [];\r\n            if (head && \"multiSort\" === head.name) {\r\n                _taskQueue.shift();\r\n                (0, _iterator.each)(head.args[0], function() {\r\n                    unmergedTasks.push(createTask(unmergedTasks.length ? \"thenBy\" : \"sortBy\", this))\r\n                })\r\n            }\r\n            _taskQueue = unmergedTasks.concat(_taskQueue)\r\n        }\r\n        try {\r\n            _adapterFactory = queryOptions.adapter;\r\n            if (!(0, _type.isFunction)(_adapterFactory)) {\r\n                _adapterFactory = _query_adapters.default[_adapterFactory]\r\n            }\r\n            _adapter = _adapterFactory(queryOptions);\r\n            _taskQueue = [].concat(tasks).concat(executorTask);\r\n            var optimize = _adapter.optimize;\r\n            if (optimize) {\r\n                optimize(_taskQueue)\r\n            }\r\n            while (_taskQueue.length) {\r\n                _currentTask = _taskQueue[0];\r\n                if (!mergeSortTask(_currentTask)) {\r\n                    if (_mergedSortArgs) {\r\n                        _taskQueue.unshift(createTask(\"multiSort\", [_mergedSortArgs]));\r\n                        _mergedSortArgs = null;\r\n                        continue\r\n                    }\r\n                    if (\"enumerate\" !== String(_currentTask.name)) {\r\n                        if (!_adapter[_currentTask.name] || false === _adapter[_currentTask.name].apply(_adapter, _currentTask.args)) {\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                _taskQueue.shift()\r\n            }\r\n            unmergeSortTasks();\r\n            _adapter.exec(url).done(function(result, extra) {\r\n                if (!_taskQueue.length) {\r\n                    d.resolve(result, extra)\r\n                } else {\r\n                    var clientChain = (0, _array_query.default)(result, {\r\n                        errorHandler: queryOptions.errorHandler\r\n                    });\r\n                    (0, _iterator.each)(_taskQueue, function() {\r\n                        clientChain = clientChain[this.name].apply(clientChain, this.args)\r\n                    });\r\n                    clientChain.done(d.resolve).fail(d.reject)\r\n                }\r\n            }).fail(rejectWithNotify)\r\n        } catch (x) {\r\n            rejectWithNotify(x)\r\n        }\r\n        return d.promise()\r\n    };\r\n    var query = {};\r\n    (0, _iterator.each)([\"sortBy\", \"thenBy\", \"filter\", \"slice\", \"select\", \"groupBy\"], function() {\r\n        var name = String(this);\r\n        query[name] = function() {\r\n            return remoteQueryImpl(url, queryOptions, tasks.concat(createTask(name, arguments)))\r\n        }\r\n    });\r\n    (0, _iterator.each)([\"count\", \"min\", \"max\", \"sum\", \"avg\", \"aggregate\", \"enumerate\"], function() {\r\n        var name = String(this);\r\n        query[name] = function() {\r\n            return exec.call(this, createTask(name, arguments))\r\n        }\r\n    });\r\n    return query\r\n};\r\nvar _default = remoteQueryImpl;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}