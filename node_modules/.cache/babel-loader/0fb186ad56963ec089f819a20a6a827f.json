{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/crosshair.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.getMargins = getMargins;\nexports.Crosshair = Crosshair;\n\nvar _utils = require(\"../core/utils\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar math = Math;\nvar mathAbs = math.abs;\nvar mathMin = math.min;\nvar mathMax = math.max;\nvar mathFloor = math.floor;\nvar HORIZONTAL = \"horizontal\";\nvar VERTICAL = \"vertical\";\nvar LABEL_BACKGROUND_PADDING_X = 8;\nvar LABEL_BACKGROUND_PADDING_Y = 4;\nvar CENTER = \"center\";\nvar RIGHT = \"right\";\nvar LEFT = \"left\";\nvar TOP = \"top\";\nvar BOTTOM = \"bottom\";\n\nfunction getMargins() {\n  return {\n    x: LABEL_BACKGROUND_PADDING_X,\n    y: LABEL_BACKGROUND_PADDING_Y\n  };\n}\n\nfunction getRectangleBBox(bBox) {\n  return {\n    x: bBox.x - LABEL_BACKGROUND_PADDING_X,\n    y: bBox.y - LABEL_BACKGROUND_PADDING_Y,\n    width: bBox.width + 2 * LABEL_BACKGROUND_PADDING_X,\n    height: bBox.height + 2 * LABEL_BACKGROUND_PADDING_Y\n  };\n}\n\nfunction getLabelCheckerPosition(x, y, isHorizontal, canvas) {\n  var params = isHorizontal ? [\"x\", \"width\", \"y\", \"height\", y, 0] : [\"y\", \"height\", \"x\", \"width\", x, 1];\n  return function (bBox, position, coord) {\n    var labelCoord = {\n      x: coord.x,\n      y: coord.y\n    };\n    var rectangleBBox = getRectangleBBox(bBox);\n    var delta = isHorizontal ? coord.y - bBox.y - bBox.height / 2 : coord.y - bBox.y;\n    labelCoord.y = isHorizontal || !isHorizontal && position === BOTTOM ? coord.y + delta : coord.y;\n\n    if (rectangleBBox[params[0]] < 0) {\n      labelCoord[params[0]] -= rectangleBBox[params[0]];\n    } else {\n      if (rectangleBBox[params[0]] + rectangleBBox[params[1]] + delta * params[5] > canvas[params[1]]) {\n        labelCoord[params[0]] -= rectangleBBox[params[0]] + rectangleBBox[params[1]] + delta * params[5] - canvas[params[1]];\n      }\n    }\n\n    if (params[4] - rectangleBBox[params[3]] / 2 < 0) {\n      labelCoord[params[2]] -= params[4] - rectangleBBox[params[3]] / 2;\n    } else {\n      if (params[4] + rectangleBBox[params[3]] / 2 > canvas[params[3]]) {\n        labelCoord[params[2]] -= params[4] + rectangleBBox[params[3]] / 2 - canvas[params[3]];\n      }\n    }\n\n    return labelCoord;\n  };\n}\n\nfunction Crosshair(renderer, options, params, group) {\n  var that = this;\n  that._renderer = renderer;\n  that._crosshairGroup = group;\n  that._options = {};\n  that.update(options, params);\n}\n\nCrosshair.prototype = {\n  constructor: Crosshair,\n  update: function (options, params) {\n    var that = this;\n    var canvas = params.canvas;\n    that._canvas = {\n      top: canvas.top,\n      bottom: canvas.height - canvas.bottom,\n      left: canvas.left,\n      right: canvas.width - canvas.right,\n      width: canvas.width,\n      height: canvas.height\n    };\n    that._axes = params.axes;\n    that._panes = params.panes;\n\n    that._prepareOptions(options, HORIZONTAL);\n\n    that._prepareOptions(options, VERTICAL);\n  },\n  dispose: function () {\n    var that = this;\n    that._renderer = that._crosshairGroup = that._options = that._axes = that._canvas = that._horizontalGroup = that._verticalGroup = that._horizontal = that._vertical = that._circle = that._panes = null;\n  },\n  _prepareOptions: function (options, direction) {\n    var lineOptions = options[direction + \"Line\"];\n    this._options[direction] = {\n      visible: lineOptions.visible,\n      line: {\n        stroke: lineOptions.color || options.color,\n        \"stroke-width\": lineOptions.width || options.width,\n        dashStyle: lineOptions.dashStyle || options.dashStyle,\n        opacity: lineOptions.opacity || options.opacity,\n        \"stroke-linecap\": \"butt\"\n      },\n      label: (0, _extend.extend)(true, {}, options.label, lineOptions.label)\n    };\n  },\n  _createLines: function (options, sharpParam, group) {\n    var lines = [];\n    var canvas = this._canvas;\n    var points = [canvas.left, canvas.top, canvas.left, canvas.top];\n\n    for (var i = 0; i < 2; i++) {\n      lines.push(this._renderer.path(points, \"line\").attr(options).sharp(sharpParam).append(group));\n    }\n\n    return lines;\n  },\n  render: function () {\n    var that = this;\n    var renderer = that._renderer;\n    var options = that._options;\n    var verticalOptions = options.vertical;\n    var horizontalOptions = options.horizontal;\n    var extraOptions = horizontalOptions.visible ? horizontalOptions.line : verticalOptions.line;\n    var circleOptions = {\n      stroke: extraOptions.stroke,\n      \"stroke-width\": extraOptions[\"stroke-width\"],\n      dashStyle: extraOptions.dashStyle,\n      opacity: extraOptions.opacity\n    };\n    var canvas = that._canvas;\n    that._horizontal = {};\n    that._vertical = {};\n    that._circle = renderer.circle(canvas.left, canvas.top, 0).attr(circleOptions).append(that._crosshairGroup);\n    that._horizontalGroup = renderer.g().append(that._crosshairGroup);\n    that._verticalGroup = renderer.g().append(that._crosshairGroup);\n\n    if (verticalOptions.visible) {\n      that._vertical.lines = that._createLines(verticalOptions.line, \"h\", that._verticalGroup);\n      that._vertical.labels = that._createLabels(that._axes[0], verticalOptions, false, that._verticalGroup);\n    }\n\n    if (horizontalOptions.visible) {\n      that._horizontal.lines = that._createLines(horizontalOptions.line, \"v\", that._horizontalGroup);\n      that._horizontal.labels = that._createLabels(that._axes[1], horizontalOptions, true, that._horizontalGroup);\n    }\n\n    that.hide();\n  },\n  _createLabels: function (axes, options, isHorizontal, group) {\n    var that = this;\n    var canvas = that._canvas;\n    var renderer = that._renderer;\n    var x;\n    var y;\n    var text;\n    var labels = [];\n    var background;\n    var currentLabelPos;\n    var labelOptions = options.label;\n\n    if (labelOptions.visible) {\n      axes.forEach(function (axis) {\n        var position = axis.getOptions().position;\n\n        if (axis.getTranslator().getBusinessRange().isEmpty()) {\n          return;\n        }\n\n        currentLabelPos = axis.getLabelsPosition();\n\n        if (isHorizontal) {\n          y = canvas.top;\n          x = currentLabelPos;\n        } else {\n          x = canvas.left;\n          y = currentLabelPos;\n        }\n\n        var align = position === TOP || position === BOTTOM ? CENTER : position === RIGHT ? LEFT : RIGHT;\n        background = renderer.rect(0, 0, 0, 0).attr({\n          fill: labelOptions.backgroundColor || options.line.stroke\n        }).append(group);\n        text = renderer.text(\"0\", 0, 0).css((0, _utils.patchFontOptions)(options.label.font)).attr({\n          align: align,\n          \"class\": labelOptions.cssClass\n        }).append(group);\n        labels.push({\n          text: text,\n          background: background,\n          axis: axis,\n          options: labelOptions,\n          pos: {\n            coord: currentLabelPos,\n            side: position\n          },\n          startXY: {\n            x: x,\n            y: y\n          }\n        });\n      });\n    }\n\n    return labels;\n  },\n  _updateText: function (value, axisName, labels, point, func) {\n    var that = this;\n    labels.forEach(function (label) {\n      var axis = label.axis;\n      var coord = label.startXY;\n      var textElement = label.text;\n      var backgroundElement = label.background;\n      var text = \"\";\n\n      if (!axis.name || axis.name === axisName) {\n        text = axis.getFormattedValue(value, label.options, point);\n      }\n\n      if (text) {\n        textElement.attr({\n          text: text,\n          x: coord.x,\n          y: coord.y\n        });\n        textElement.attr(func(textElement.getBBox(), label.pos.side, coord));\n\n        that._updateLinesCanvas(label);\n\n        backgroundElement.attr(getRectangleBBox(textElement.getBBox()));\n      } else {\n        textElement.attr({\n          text: \"\"\n        });\n        backgroundElement.attr({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        });\n      }\n    });\n  },\n  hide: function () {\n    this._crosshairGroup.attr({\n      visibility: \"hidden\"\n    });\n  },\n  _updateLinesCanvas: function (label) {\n    var position = label.pos.side;\n    var labelCoord = label.pos.coord;\n    var coords = this._linesCanvas;\n    var canvas = this._canvas;\n    coords[position] = coords[position] !== canvas[position] && mathAbs(coords[position] - canvas[position]) < mathAbs(labelCoord - canvas[position]) ? coords[position] : labelCoord;\n  },\n  _updateLines: function (lines, x, y, r, isHorizontal) {\n    var coords = this._linesCanvas;\n    var canvas = this._canvas;\n    var points = isHorizontal ? [[mathMin(x - r, coords.left), canvas.top, x - r, canvas.top], [x + r, canvas.top, mathMax(coords.right, x + r), canvas.top]] : [[canvas.left, mathMin(coords.top, y - r), canvas.left, y - r], [canvas.left, y + r, canvas.left, mathMax(coords.bottom, y + r)]];\n\n    for (var i = 0; i < 2; i++) {\n      lines[i].attr({\n        points: points[i]\n      }).sharp(isHorizontal ? \"v\" : \"h\", isHorizontal ? y === canvas.bottom ? -1 : 1 : x === canvas.right ? -1 : 1);\n    }\n  },\n  _resetLinesCanvas: function () {\n    var canvas = this._canvas;\n    this._linesCanvas = {\n      left: canvas.left,\n      right: canvas.right,\n      top: canvas.top,\n      bottom: canvas.bottom\n    };\n  },\n  _getClipRectForPane: function (x, y) {\n    var panes = this._panes;\n    var i;\n    var coords;\n\n    for (i = 0; i < panes.length; i++) {\n      coords = panes[i].coords;\n\n      if (coords.left <= x && coords.right >= x && coords.top <= y && coords.bottom >= y) {\n        return panes[i].clipRect;\n      }\n    }\n\n    return {\n      id: null\n    };\n  },\n  show: function (data) {\n    var that = this;\n    var point = data.point;\n    var pointData = point.getCrosshairData(data.x, data.y);\n    var r = point.getPointRadius();\n    var horizontal = that._horizontal;\n    var vertical = that._vertical;\n    var rad = !r ? 0 : r + 3;\n    var canvas = that._canvas;\n    var x = mathFloor(pointData.x);\n    var y = mathFloor(pointData.y);\n\n    if (x >= canvas.left && x <= canvas.right && y >= canvas.top && y <= canvas.bottom) {\n      that._crosshairGroup.attr({\n        visibility: \"visible\"\n      });\n\n      that._resetLinesCanvas();\n\n      that._circle.attr({\n        cx: x,\n        cy: y,\n        r: rad,\n        \"clip-path\": that._getClipRectForPane(x, y).id\n      });\n\n      if (horizontal.lines) {\n        that._updateText(pointData.yValue, pointData.axis, horizontal.labels, point, getLabelCheckerPosition(x, y, true, canvas));\n\n        that._updateLines(horizontal.lines, x, y, rad, true);\n\n        that._horizontalGroup.attr({\n          translateY: y - canvas.top\n        });\n      }\n\n      if (vertical.lines) {\n        that._updateText(pointData.xValue, pointData.axis, vertical.labels, point, getLabelCheckerPosition(x, y, false, canvas));\n\n        that._updateLines(vertical.lines, x, y, rad, false);\n\n        that._verticalGroup.attr({\n          translateX: x - canvas.left\n        });\n      }\n    } else {\n      that.hide();\n    }\n  }\n};","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/chart_components/crosshair.js"],"names":["exports","getMargins","Crosshair","_utils","require","_extend","math","Math","mathAbs","abs","mathMin","min","mathMax","max","mathFloor","floor","HORIZONTAL","VERTICAL","LABEL_BACKGROUND_PADDING_X","LABEL_BACKGROUND_PADDING_Y","CENTER","RIGHT","LEFT","TOP","BOTTOM","x","y","getRectangleBBox","bBox","width","height","getLabelCheckerPosition","isHorizontal","canvas","params","position","coord","labelCoord","rectangleBBox","delta","renderer","options","group","that","_renderer","_crosshairGroup","_options","update","prototype","constructor","_canvas","top","bottom","left","right","_axes","axes","_panes","panes","_prepareOptions","dispose","_horizontalGroup","_verticalGroup","_horizontal","_vertical","_circle","direction","lineOptions","visible","line","stroke","color","dashStyle","opacity","label","extend","_createLines","sharpParam","lines","points","i","push","path","attr","sharp","append","render","verticalOptions","vertical","horizontalOptions","horizontal","extraOptions","circleOptions","circle","g","labels","_createLabels","hide","text","background","currentLabelPos","labelOptions","forEach","axis","getOptions","getTranslator","getBusinessRange","isEmpty","getLabelsPosition","align","rect","fill","backgroundColor","css","patchFontOptions","font","cssClass","pos","side","startXY","_updateText","value","axisName","point","func","textElement","backgroundElement","name","getFormattedValue","getBBox","_updateLinesCanvas","visibility","coords","_linesCanvas","_updateLines","r","_resetLinesCanvas","_getClipRectForPane","length","clipRect","id","show","data","pointData","getCrosshairData","getPointRadius","rad","cx","cy","yValue","translateY","xValue","translateX"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/crosshair.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getMargins = getMargins;\r\nexports.Crosshair = Crosshair;\r\nvar _utils = require(\"../core/utils\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar math = Math;\r\nvar mathAbs = math.abs;\r\nvar mathMin = math.min;\r\nvar mathMax = math.max;\r\nvar mathFloor = math.floor;\r\nvar HORIZONTAL = \"horizontal\";\r\nvar VERTICAL = \"vertical\";\r\nvar LABEL_BACKGROUND_PADDING_X = 8;\r\nvar LABEL_BACKGROUND_PADDING_Y = 4;\r\nvar CENTER = \"center\";\r\nvar RIGHT = \"right\";\r\nvar LEFT = \"left\";\r\nvar TOP = \"top\";\r\nvar BOTTOM = \"bottom\";\r\n\r\nfunction getMargins() {\r\n    return {\r\n        x: LABEL_BACKGROUND_PADDING_X,\r\n        y: LABEL_BACKGROUND_PADDING_Y\r\n    }\r\n}\r\n\r\nfunction getRectangleBBox(bBox) {\r\n    return {\r\n        x: bBox.x - LABEL_BACKGROUND_PADDING_X,\r\n        y: bBox.y - LABEL_BACKGROUND_PADDING_Y,\r\n        width: bBox.width + 2 * LABEL_BACKGROUND_PADDING_X,\r\n        height: bBox.height + 2 * LABEL_BACKGROUND_PADDING_Y\r\n    }\r\n}\r\n\r\nfunction getLabelCheckerPosition(x, y, isHorizontal, canvas) {\r\n    var params = isHorizontal ? [\"x\", \"width\", \"y\", \"height\", y, 0] : [\"y\", \"height\", \"x\", \"width\", x, 1];\r\n    return function(bBox, position, coord) {\r\n        var labelCoord = {\r\n            x: coord.x,\r\n            y: coord.y\r\n        };\r\n        var rectangleBBox = getRectangleBBox(bBox);\r\n        var delta = isHorizontal ? coord.y - bBox.y - bBox.height / 2 : coord.y - bBox.y;\r\n        labelCoord.y = isHorizontal || !isHorizontal && position === BOTTOM ? coord.y + delta : coord.y;\r\n        if (rectangleBBox[params[0]] < 0) {\r\n            labelCoord[params[0]] -= rectangleBBox[params[0]]\r\n        } else {\r\n            if (rectangleBBox[params[0]] + rectangleBBox[params[1]] + delta * params[5] > canvas[params[1]]) {\r\n                labelCoord[params[0]] -= rectangleBBox[params[0]] + rectangleBBox[params[1]] + delta * params[5] - canvas[params[1]]\r\n            }\r\n        }\r\n        if (params[4] - rectangleBBox[params[3]] / 2 < 0) {\r\n            labelCoord[params[2]] -= params[4] - rectangleBBox[params[3]] / 2\r\n        } else {\r\n            if (params[4] + rectangleBBox[params[3]] / 2 > canvas[params[3]]) {\r\n                labelCoord[params[2]] -= params[4] + rectangleBBox[params[3]] / 2 - canvas[params[3]]\r\n            }\r\n        }\r\n        return labelCoord\r\n    }\r\n}\r\n\r\nfunction Crosshair(renderer, options, params, group) {\r\n    var that = this;\r\n    that._renderer = renderer;\r\n    that._crosshairGroup = group;\r\n    that._options = {};\r\n    that.update(options, params)\r\n}\r\nCrosshair.prototype = {\r\n    constructor: Crosshair,\r\n    update: function(options, params) {\r\n        var that = this;\r\n        var canvas = params.canvas;\r\n        that._canvas = {\r\n            top: canvas.top,\r\n            bottom: canvas.height - canvas.bottom,\r\n            left: canvas.left,\r\n            right: canvas.width - canvas.right,\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        };\r\n        that._axes = params.axes;\r\n        that._panes = params.panes;\r\n        that._prepareOptions(options, HORIZONTAL);\r\n        that._prepareOptions(options, VERTICAL)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        that._renderer = that._crosshairGroup = that._options = that._axes = that._canvas = that._horizontalGroup = that._verticalGroup = that._horizontal = that._vertical = that._circle = that._panes = null\r\n    },\r\n    _prepareOptions: function(options, direction) {\r\n        var lineOptions = options[direction + \"Line\"];\r\n        this._options[direction] = {\r\n            visible: lineOptions.visible,\r\n            line: {\r\n                stroke: lineOptions.color || options.color,\r\n                \"stroke-width\": lineOptions.width || options.width,\r\n                dashStyle: lineOptions.dashStyle || options.dashStyle,\r\n                opacity: lineOptions.opacity || options.opacity,\r\n                \"stroke-linecap\": \"butt\"\r\n            },\r\n            label: (0, _extend.extend)(true, {}, options.label, lineOptions.label)\r\n        }\r\n    },\r\n    _createLines: function(options, sharpParam, group) {\r\n        var lines = [];\r\n        var canvas = this._canvas;\r\n        var points = [canvas.left, canvas.top, canvas.left, canvas.top];\r\n        for (var i = 0; i < 2; i++) {\r\n            lines.push(this._renderer.path(points, \"line\").attr(options).sharp(sharpParam).append(group))\r\n        }\r\n        return lines\r\n    },\r\n    render: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var options = that._options;\r\n        var verticalOptions = options.vertical;\r\n        var horizontalOptions = options.horizontal;\r\n        var extraOptions = horizontalOptions.visible ? horizontalOptions.line : verticalOptions.line;\r\n        var circleOptions = {\r\n            stroke: extraOptions.stroke,\r\n            \"stroke-width\": extraOptions[\"stroke-width\"],\r\n            dashStyle: extraOptions.dashStyle,\r\n            opacity: extraOptions.opacity\r\n        };\r\n        var canvas = that._canvas;\r\n        that._horizontal = {};\r\n        that._vertical = {};\r\n        that._circle = renderer.circle(canvas.left, canvas.top, 0).attr(circleOptions).append(that._crosshairGroup);\r\n        that._horizontalGroup = renderer.g().append(that._crosshairGroup);\r\n        that._verticalGroup = renderer.g().append(that._crosshairGroup);\r\n        if (verticalOptions.visible) {\r\n            that._vertical.lines = that._createLines(verticalOptions.line, \"h\", that._verticalGroup);\r\n            that._vertical.labels = that._createLabels(that._axes[0], verticalOptions, false, that._verticalGroup)\r\n        }\r\n        if (horizontalOptions.visible) {\r\n            that._horizontal.lines = that._createLines(horizontalOptions.line, \"v\", that._horizontalGroup);\r\n            that._horizontal.labels = that._createLabels(that._axes[1], horizontalOptions, true, that._horizontalGroup)\r\n        }\r\n        that.hide()\r\n    },\r\n    _createLabels: function(axes, options, isHorizontal, group) {\r\n        var that = this;\r\n        var canvas = that._canvas;\r\n        var renderer = that._renderer;\r\n        var x;\r\n        var y;\r\n        var text;\r\n        var labels = [];\r\n        var background;\r\n        var currentLabelPos;\r\n        var labelOptions = options.label;\r\n        if (labelOptions.visible) {\r\n            axes.forEach(function(axis) {\r\n                var position = axis.getOptions().position;\r\n                if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                    return\r\n                }\r\n                currentLabelPos = axis.getLabelsPosition();\r\n                if (isHorizontal) {\r\n                    y = canvas.top;\r\n                    x = currentLabelPos\r\n                } else {\r\n                    x = canvas.left;\r\n                    y = currentLabelPos\r\n                }\r\n                var align = position === TOP || position === BOTTOM ? CENTER : position === RIGHT ? LEFT : RIGHT;\r\n                background = renderer.rect(0, 0, 0, 0).attr({\r\n                    fill: labelOptions.backgroundColor || options.line.stroke\r\n                }).append(group);\r\n                text = renderer.text(\"0\", 0, 0).css((0, _utils.patchFontOptions)(options.label.font)).attr({\r\n                    align: align,\r\n                    \"class\": labelOptions.cssClass\r\n                }).append(group);\r\n                labels.push({\r\n                    text: text,\r\n                    background: background,\r\n                    axis: axis,\r\n                    options: labelOptions,\r\n                    pos: {\r\n                        coord: currentLabelPos,\r\n                        side: position\r\n                    },\r\n                    startXY: {\r\n                        x: x,\r\n                        y: y\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return labels\r\n    },\r\n    _updateText: function(value, axisName, labels, point, func) {\r\n        var that = this;\r\n        labels.forEach(function(label) {\r\n            var axis = label.axis;\r\n            var coord = label.startXY;\r\n            var textElement = label.text;\r\n            var backgroundElement = label.background;\r\n            var text = \"\";\r\n            if (!axis.name || axis.name === axisName) {\r\n                text = axis.getFormattedValue(value, label.options, point)\r\n            }\r\n            if (text) {\r\n                textElement.attr({\r\n                    text: text,\r\n                    x: coord.x,\r\n                    y: coord.y\r\n                });\r\n                textElement.attr(func(textElement.getBBox(), label.pos.side, coord));\r\n                that._updateLinesCanvas(label);\r\n                backgroundElement.attr(getRectangleBBox(textElement.getBBox()))\r\n            } else {\r\n                textElement.attr({\r\n                    text: \"\"\r\n                });\r\n                backgroundElement.attr({\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                })\r\n            }\r\n        })\r\n    },\r\n    hide: function() {\r\n        this._crosshairGroup.attr({\r\n            visibility: \"hidden\"\r\n        })\r\n    },\r\n    _updateLinesCanvas: function(label) {\r\n        var position = label.pos.side;\r\n        var labelCoord = label.pos.coord;\r\n        var coords = this._linesCanvas;\r\n        var canvas = this._canvas;\r\n        coords[position] = coords[position] !== canvas[position] && mathAbs(coords[position] - canvas[position]) < mathAbs(labelCoord - canvas[position]) ? coords[position] : labelCoord\r\n    },\r\n    _updateLines: function(lines, x, y, r, isHorizontal) {\r\n        var coords = this._linesCanvas;\r\n        var canvas = this._canvas;\r\n        var points = isHorizontal ? [\r\n            [mathMin(x - r, coords.left), canvas.top, x - r, canvas.top],\r\n            [x + r, canvas.top, mathMax(coords.right, x + r), canvas.top]\r\n        ] : [\r\n            [canvas.left, mathMin(coords.top, y - r), canvas.left, y - r],\r\n            [canvas.left, y + r, canvas.left, mathMax(coords.bottom, y + r)]\r\n        ];\r\n        for (var i = 0; i < 2; i++) {\r\n            lines[i].attr({\r\n                points: points[i]\r\n            }).sharp(isHorizontal ? \"v\" : \"h\", isHorizontal ? y === canvas.bottom ? -1 : 1 : x === canvas.right ? -1 : 1)\r\n        }\r\n    },\r\n    _resetLinesCanvas: function() {\r\n        var canvas = this._canvas;\r\n        this._linesCanvas = {\r\n            left: canvas.left,\r\n            right: canvas.right,\r\n            top: canvas.top,\r\n            bottom: canvas.bottom\r\n        }\r\n    },\r\n    _getClipRectForPane: function(x, y) {\r\n        var panes = this._panes;\r\n        var i;\r\n        var coords;\r\n        for (i = 0; i < panes.length; i++) {\r\n            coords = panes[i].coords;\r\n            if (coords.left <= x && coords.right >= x && coords.top <= y && coords.bottom >= y) {\r\n                return panes[i].clipRect\r\n            }\r\n        }\r\n        return {\r\n            id: null\r\n        }\r\n    },\r\n    show: function(data) {\r\n        var that = this;\r\n        var point = data.point;\r\n        var pointData = point.getCrosshairData(data.x, data.y);\r\n        var r = point.getPointRadius();\r\n        var horizontal = that._horizontal;\r\n        var vertical = that._vertical;\r\n        var rad = !r ? 0 : r + 3;\r\n        var canvas = that._canvas;\r\n        var x = mathFloor(pointData.x);\r\n        var y = mathFloor(pointData.y);\r\n        if (x >= canvas.left && x <= canvas.right && y >= canvas.top && y <= canvas.bottom) {\r\n            that._crosshairGroup.attr({\r\n                visibility: \"visible\"\r\n            });\r\n            that._resetLinesCanvas();\r\n            that._circle.attr({\r\n                cx: x,\r\n                cy: y,\r\n                r: rad,\r\n                \"clip-path\": that._getClipRectForPane(x, y).id\r\n            });\r\n            if (horizontal.lines) {\r\n                that._updateText(pointData.yValue, pointData.axis, horizontal.labels, point, getLabelCheckerPosition(x, y, true, canvas));\r\n                that._updateLines(horizontal.lines, x, y, rad, true);\r\n                that._horizontalGroup.attr({\r\n                    translateY: y - canvas.top\r\n                })\r\n            }\r\n            if (vertical.lines) {\r\n                that._updateText(pointData.xValue, pointData.axis, vertical.labels, point, getLabelCheckerPosition(x, y, false, canvas));\r\n                that._updateLines(vertical.lines, x, y, rad, false);\r\n                that._verticalGroup.attr({\r\n                    translateX: x - canvas.left\r\n                })\r\n            }\r\n        } else {\r\n            that.hide()\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}