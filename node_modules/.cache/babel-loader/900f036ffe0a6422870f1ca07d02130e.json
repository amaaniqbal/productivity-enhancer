{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _common = require(\"../core/utils/common\");\n\nvar _extend2 = require(\"../core/utils/extend\");\n\nvar _array = require(\"../core/utils/array\");\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = require(\"./core/utils\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _math = require(\"../core/utils/math\");\n\nvar _base_chart = require(\"./chart_components/base_chart\");\n\nvar _multi_axes_synchronizer = _interopRequireDefault(require(\"./chart_components/multi_axes_synchronizer\"));\n\nvar _advanced_chart = require(\"./chart_components/advanced_chart\");\n\nvar _scroll_bar = require(\"./chart_components/scroll_bar\");\n\nvar _crosshair = require(\"./chart_components/crosshair\");\n\nvar _range_data_calculator = _interopRequireDefault(require(\"./series/helpers/range_data_calculator\"));\n\nvar _layout_manager = require(\"./chart_components/layout_manager\");\n\nvar _range = require(\"./translators/range\");\n\nvar _shutter_zoom = _interopRequireDefault(require(\"./chart_components/shutter_zoom\"));\n\nvar _zoom_and_pan = _interopRequireDefault(require(\"./chart_components/zoom_and_pan\"));\n\nvar _annotations = require(\"./core/annotations\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DEFAULT_PANE_NAME = \"default\";\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\nvar DEFAULT_PANES = [{\n  name: DEFAULT_PANE_NAME,\n  border: {}\n}];\nvar DISCRETE = \"discrete\";\nvar _isArray = Array.isArray;\n\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\n  var result;\n\n  for (var i = 0; i < axes.length; i++) {\n    if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\n      result = axes[i].name;\n      break;\n    }\n  }\n\n  if (!result) {\n    result = axes[0].name;\n  }\n\n  return result;\n}\n\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\n  var gridOpt = axis.getOptions().grid;\n  var minorGridOpt = axis.getOptions().minorGrid;\n  gridOpt.visible = gridVisibility;\n  minorGridOpt && (minorGridOpt.visible = minorGridVisibility);\n}\n\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\n  var axisShown = false;\n  var hiddenStubAxis = [];\n  var minorGridVisibility = axesForPane.some(function (axis) {\n    var minorGridOptions = axis.getOptions().minorGrid;\n    return minorGridOptions && minorGridOptions.visible;\n  });\n  var gridVisibility = axesForPane.some(function (axis) {\n    var gridOptions = axis.getOptions().grid;\n    return gridOptions && gridOptions.visible;\n  });\n\n  if (axesForPane.length > 1) {\n    axesForPane.forEach(function (axis) {\n      var gridOpt = axis.getOptions().grid;\n\n      if (axisShown) {\n        changeVisibilityAxisGrids(axis, false, false);\n      } else {\n        if (gridOpt && gridOpt.visible) {\n          if (axis.getTranslator().getBusinessRange().isEmpty()) {\n            changeVisibilityAxisGrids(axis, false, false);\n            hiddenStubAxis.push(axis);\n          } else {\n            axisShown = true;\n            changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility);\n          }\n        }\n      }\n    });\n    !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility);\n  }\n}\n\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\n  var result;\n  var axInd;\n\n  for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\n    if (valueAxesOptions[axInd].name === axisName) {\n      result = valueAxesOptions[axInd];\n      result.priority = axInd;\n      break;\n    }\n  }\n\n  if (!result) {\n    for (axInd = 0; axInd < valueAxes.length; axInd++) {\n      if (valueAxes[axInd].name === axisName) {\n        result = valueAxes[axInd].getOptions();\n        result.priority = valueAxes[axInd].priority;\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction findAxis(paneName, axisName, axes) {\n  var axis;\n  var i;\n\n  for (i = 0; i < axes.length; i++) {\n    axis = axes[i];\n\n    if (axis.name === axisName && axis.pane === paneName) {\n      return axis;\n    }\n  }\n\n  if (paneName) {\n    return findAxis(void 0, axisName, axes);\n  }\n}\n\nfunction compareAxes(a, b) {\n  return a.priority - b.priority;\n}\n\nfunction doesPaneExist(panes, paneName) {\n  var found = false;\n  (0, _iterator.each)(panes, function (_, pane) {\n    if (pane.name === paneName) {\n      found = true;\n      return false;\n    }\n  });\n  return found;\n}\n\nfunction accumulate(field, src1, src2, auxSpacing) {\n  var val1 = src1[field] || 0;\n  var val2 = src2[field] || 0;\n  return val1 + val2 + (val1 && val2 ? auxSpacing : 0);\n}\n\nfunction pickMax(field, src1, src2) {\n  return pickMaxValue(src1[field], src2[field]);\n}\n\nfunction pickMaxValue(val1, val2) {\n  return Math.max(val1 || 0, val2 || 0);\n}\n\nfunction getAxisMargins(axis) {\n  return axis.getMargins();\n}\n\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\n  return axes.reduce(function (margins, axis) {\n    var axisMargins = getMarginsFunc(axis);\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\n    paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\n    paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\n    paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction getVerticalAxesMargins(axes) {\n  return axes.reduce(function (margins, axis) {\n    var axisMargins = axis.getMargins();\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\n    paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\n    paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\n    paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\n  axes.forEach(function (axis) {\n    axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3);\n  });\n}\n\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\n  function getMargin(side, margins, pane) {\n    var m = (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) === -1 ? margins : margins.panes[pane] || {};\n    return m[side];\n  }\n\n  function getMaxMargin(side, margins1, margins2, pane) {\n    return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane));\n  }\n\n  var getOriginalField = function (field) {\n    return \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\n  };\n\n  function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\n    paneNames = paneNames.sort(function (p1, p2) {\n      return canvases[p2][startMargin] - canvases[p1][startMargin];\n    });\n    paneNames.forEach(function (pane) {\n      var canvas = canvases[pane];\n      oppositeMargins.forEach(function (margin) {\n        canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane);\n      });\n    });\n    var firstPane = canvases[paneNames[0]];\n    var emptySpace = paneNames.reduce(function (space, paneName) {\n      space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\n      return space;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - _utils2.PANE_PADDING * (paneNames.length - 1);\n    var totalCustomSpace = Object.keys(sizes).reduce(function (prev, key) {\n      return prev + (sizes[key].unit ? sizes[key].height : 0);\n    }, 0);\n    emptySpace -= totalCustomSpace;\n    paneNames.reduce(function (offset, pane) {\n      var canvas = canvases[pane];\n      var paneSize = sizes[pane];\n      offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\n      canvas[endMargin] = firstPane[sizeField] - offset;\n      offset -= paneSize.unit ? paneSize.height : Math.floor(emptySpace * paneSize.height);\n      canvas[startMargin] = offset;\n      offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + _utils2.PANE_PADDING;\n      return offset;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0));\n  }\n\n  var paneNames = Object.keys(canvases);\n\n  if (!isRotated) {\n    shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"]);\n  } else {\n    shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"]);\n  }\n\n  return canvases;\n}\n\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\n  if (condition) {\n    performActionOnAxes(axes, \"createTicks\", canvases);\n\n    _multi_axes_synchronizer.default.synchronize(axes);\n  }\n\n  performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions);\n}\n\nfunction shiftAxis(side1, side2) {\n  var shifts = {};\n  return function (axis) {\n    if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\n      var shift = shifts[axis.pane] = shifts[axis.pane] || {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      };\n      var spacing = axis.getMultipleAxesSpacing();\n      var margins = axis.getMargins();\n      axis.shift(shift);\n      shift[side1] = accumulate(side1, shift, margins, spacing);\n      shift[side2] = accumulate(side2, shift, margins, spacing);\n    } else {\n      axis.shift({\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      });\n    }\n  };\n}\n\nfunction getCommonSize(side, margins) {\n  var size = 0;\n  var pane;\n  var paneMargins;\n\n  for (pane in margins.panes) {\n    paneMargins = margins.panes[pane];\n    size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right;\n  }\n\n  return size;\n}\n\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\n  var size = 0;\n\n  if (sizeShortage[side] > 0) {\n    size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n    performActionOnAxes(axes, \"hideTitle\");\n    sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n  }\n\n  if (sizeShortage[side] > 0) {\n    performActionOnAxes(axes, \"hideOuterElements\");\n  }\n}\n\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\n  var pointsCount = pointsToAnimation.reduce(function (sum, count) {\n    return sum + count;\n  }, 0) / pointsToAnimation.length;\n  return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit;\n}\n\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\n  var series = [];\n  var overloadedSeries = {};\n  var argVisualRange = argAxis.visualRange();\n  var argTranslator = argAxis.getTranslator();\n\n  var argViewPortFilter = _range_data_calculator.default.getViewPortFilter(argVisualRange || {});\n\n  filteredSeries.forEach(function (s) {\n    var valAxis = s.getValueAxis();\n    var valVisualRange = valAxis.getCanvasRange();\n    var valTranslator = valAxis.getTranslator();\n    var seriesIndex = allSeries.indexOf(s);\n\n    var valViewPortFilter = _range_data_calculator.default.getViewPortFilter(valVisualRange || {});\n\n    overloadedSeries[seriesIndex] = {};\n    filteredSeries.forEach(function (sr) {\n      return overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0;\n    });\n    var seriesPoints = [];\n    s.getPoints().filter(function (p) {\n      return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)));\n    }).forEach(function (p) {\n      var tp = {\n        seriesIndex: seriesIndex,\n        argument: p.argument,\n        value: p.getMaxValue(true),\n        size: p.bubbleSize || p.getOptions().size\n      };\n\n      if (p.getMinValue(true) !== p.getMaxValue(true)) {\n        var mp = (0, _extend2.extend)({}, tp);\n        mp.value = p.getMinValue(true);\n        mp.x = argTranslator.to(mp.argument, 1);\n        mp.y = valTranslator.to(mp.value, 1);\n        seriesPoints.push(mp);\n      }\n\n      tp.x = argTranslator.to(tp.argument, 1);\n      tp.y = valTranslator.to(tp.value, 1);\n      seriesPoints.push(tp);\n    });\n    overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\n    overloadedSeries[seriesIndex].total = 0;\n    overloadedSeries[seriesIndex].continuousSeries = 0;\n    series.push({\n      name: s.name,\n      index: seriesIndex,\n      points: seriesPoints\n    });\n  });\n  return {\n    series: series,\n    overloadedSeries: overloadedSeries\n  };\n}\n\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\n  var argAxisType = argAxis.getOptions().type;\n  filteredSeries.forEach(function (s) {\n    var seriesIndex = allSeries.indexOf(s);\n    s.autoHidePointMarkers = false;\n    var tickCount = argAxis.getTicksValues().majorTicksValues.length;\n\n    if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\n      for (var index in overloadedSeries[seriesIndex]) {\n        var i = parseInt(index);\n\n        if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\n          continue;\n        }\n\n        if (i === seriesIndex) {\n          if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\n            s.autoHidePointMarkers = true;\n            break;\n          }\n        } else {\n          if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\n            s.autoHidePointMarkers = true;\n            break;\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\n  var area = canvas.width * canvas.height;\n  var seriesPoints = markersInfo.series;\n\n  var _loop = function (i) {\n    var currentSeries = series.filter(function (s) {\n      return s.name === seriesPoints[i].name;\n    })[0];\n    var points = seriesPoints[i].points;\n    var pointSize = points.length ? points[0].size : 0;\n    var pointsArea = pointSize * pointSize * points.length;\n\n    if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\n      var index = seriesPoints[i].index;\n      currentSeries.autoHidePointMarkers = true;\n      seriesPoints.splice(i, 1);\n      series.splice(series.indexOf(currentSeries), 1);\n      delete markersInfo.overloadedSeries[index];\n    }\n  };\n\n  for (var i = seriesPoints.length - 1; i >= 0; i--) {\n    _loop(i);\n  }\n}\n\nfunction updateMarkersInfo(points, overloadedSeries) {\n  var isContinuousSeries = false;\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var curPoint = points[i];\n    var size = curPoint.size;\n\n    if ((0, _type.isDefined)(curPoint.x) && (0, _type.isDefined)(curPoint.y)) {\n      for (var j = i + 1; j < points.length; j++) {\n        var nextPoint = points[j];\n        var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\n        var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\n\n        if (!(0, _type.isDefined)(next_x) || Math.abs(curPoint.x - next_x) >= size) {\n          isContinuousSeries &= j !== i + 1;\n          break;\n        } else {\n          var distance = (0, _type.isDefined)(next_x) && (0, _type.isDefined)(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\n\n          if (distance && distance < size) {\n            overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\n            overloadedSeries[curPoint.seriesIndex].total++;\n\n            if (!isContinuousSeries) {\n              overloadedSeries[curPoint.seriesIndex].continuousSeries++;\n              isContinuousSeries = true;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nvar dxChart = _advanced_chart.AdvancedChart.inherit({\n  _themeSection: \"chart\",\n  _fontFields: [\"crosshair.label.font\"],\n  _initCore: function () {\n    this.paneAxis = {};\n    this.callBase();\n  },\n  _correctAxes: function () {\n    this._correctValueAxes(true);\n  },\n  _getExtraOptions: _common.noop,\n  _createPanes: function () {\n    var that = this;\n    var panes = that.option(\"panes\");\n    var panesNameCounter = 0;\n    var defaultPane;\n\n    if (!panes || _isArray(panes) && !panes.length) {\n      panes = DEFAULT_PANES;\n    }\n\n    that.callBase();\n    defaultPane = that.option(\"defaultPane\");\n    panes = (0, _extend2.extend)(true, [], _isArray(panes) ? panes : [panes]);\n    (0, _iterator.each)(panes, function (_, pane) {\n      pane.name = !(0, _type.isDefined)(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name;\n    });\n\n    if ((0, _type.isDefined)(defaultPane)) {\n      if (!doesPaneExist(panes, defaultPane)) {\n        that._incidentOccurred(\"W2101\", [defaultPane]);\n\n        defaultPane = panes[panes.length - 1].name;\n      }\n    } else {\n      defaultPane = panes[panes.length - 1].name;\n    }\n\n    that.defaultPane = defaultPane;\n    panes = that._isRotated() ? panes.reverse() : panes;\n    return panes;\n  },\n  _getAxisRenderingOptions: function () {\n    return {\n      axisType: \"xyAxes\",\n      drawingType: \"linear\"\n    };\n  },\n  _prepareAxisOptions: function (typeSelector, userOptions, rotated) {\n    return {\n      isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\n      containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\n    };\n  },\n  _checkPaneName: function (seriesTheme) {\n    var paneList = (0, _utils2.map)(this.panes, function (pane) {\n      return pane.name;\n    });\n    seriesTheme.pane = seriesTheme.pane || this.defaultPane;\n    return (0, _array.inArray)(seriesTheme.pane, paneList) !== -1;\n  },\n  _initCustomPositioningAxes: function () {\n    var that = this;\n    var argumentAxis = that.getArgumentAxis();\n    var valueAxisName = argumentAxis.getOptions().customPositionAxis;\n\n    var valueAxis = that._valueAxes.filter(function (v) {\n      return v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name);\n    })[0];\n\n    that._valueAxes.forEach(function (v) {\n      if (argumentAxis !== v.getOrthogonalAxis()) {\n        v.getOrthogonalAxis = function () {\n          return argumentAxis;\n        };\n\n        v.customPositionIsBoundaryOrthogonalAxis = function () {\n          return argumentAxis.customPositionIsBoundary();\n        };\n      }\n    });\n\n    if ((0, _type.isDefined)(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\n      argumentAxis.getOrthogonalAxis = function () {\n        return valueAxis;\n      };\n\n      argumentAxis.customPositionIsBoundaryOrthogonalAxis = function () {\n        return that._valueAxes.some(function (v) {\n          return v.customPositionIsBoundary();\n        });\n      };\n    } else {\n      if ((0, _type.isDefined)(argumentAxis.getOrthogonalAxis()) && !(0, _type.isDefined)(valueAxis)) {\n        argumentAxis.getOrthogonalAxis = _common.noop;\n      }\n    }\n  },\n  _getAllAxes: function () {\n    return this._argumentAxes.concat(this._valueAxes);\n  },\n  _resetAxesAnimation: function (isFirstDrawing) {\n    this._getAllAxes().forEach(function (a) {\n      a.resetApplyingAnimation(isFirstDrawing);\n    });\n  },\n  _cleanGroups: function () {\n    this._getAllAxes().forEach(function (a) {\n      return a.beforeCleanGroups();\n    });\n\n    this.callBase();\n\n    this._getAllAxes().forEach(function (a) {\n      return a.afterCleanGroups();\n    });\n  },\n  _axesBoundaryPositioning: function () {\n    var that = this;\n\n    var allAxes = that._getAllAxes();\n\n    var boundaryStateChanged = false;\n    allAxes.forEach(function (a) {\n      if (!a.customPositionIsAvailable()) {\n        return false;\n      }\n\n      var prevBoundaryState = a.customPositionIsBoundary();\n      a._customBoundaryPosition = a.getCustomBoundaryPosition();\n      boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary();\n    });\n    return boundaryStateChanged;\n  },\n  _getValueAxis: function (paneName, axisName) {\n    var that = this;\n    var valueAxes = that._valueAxes;\n    var valueAxisOptions = that.option(\"valueAxis\") || {};\n    var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\n\n    var rotated = that._isRotated();\n\n    var crosshairMargins = that._getCrosshairMargins();\n\n    var axisOptions;\n    var axis;\n    axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, that.defaultPane);\n    axis = findAxis(paneName, axisName, valueAxes);\n\n    if (!axis) {\n      axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\n\n      if (!axisOptions) {\n        that._incidentOccurred(\"W2102\", [axisName]);\n\n        axisOptions = {\n          name: axisName,\n          priority: valueAxes.length\n        };\n      }\n\n      axis = that._createAxis(false, that._populateAxesOptions(\"valueAxis\", axisOptions, {\n        pane: paneName,\n        name: axisName,\n        optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\n        crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\n      }, rotated));\n      axis.applyVisualRangeSetter(that._getVisualRangeSetter());\n      valueAxes.push(axis);\n    }\n\n    axis.setPane(paneName);\n    return axis;\n  },\n  _correctValueAxes: function (needHideGrids) {\n    var that = this;\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var valueAxes = that._valueAxes;\n    var paneWithAxis = {};\n    that.series.forEach(function (series) {\n      var axis = series.getValueAxis();\n      paneWithAxis[axis.pane] = true;\n    });\n    that.panes.forEach(function (pane) {\n      var paneName = pane.name;\n\n      if (!paneWithAxis[paneName]) {\n        that._getValueAxis(paneName);\n      }\n\n      if (needHideGrids && synchronizeMultiAxes) {\n        hideGridsOnNonFirstValueAxisForPane(valueAxes.filter(function (axis) {\n          return axis.pane === paneName;\n        }));\n      }\n    });\n    that._valueAxes = valueAxes.filter(function (axis) {\n      if (!axis.pane) {\n        axis.setPane(that.defaultPane);\n      }\n\n      return doesPaneExist(that.panes, axis.pane);\n    }).sort(compareAxes);\n    var defaultAxis = this.getValueAxis();\n\n    that._valueAxes.forEach(function (axis) {\n      var optionPath = axis.getOptions().optionPath;\n\n      if (optionPath) {\n        var axesWithSamePath = that._valueAxes.filter(function (a) {\n          return a.getOptions().optionPath === optionPath;\n        });\n\n        if (axesWithSamePath.length > 1) {\n          if (axesWithSamePath.some(function (a) {\n            return a === defaultAxis;\n          })) {\n            axesWithSamePath.forEach(function (a) {\n              if (a !== defaultAxis) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          } else {\n            axesWithSamePath.forEach(function (a, i) {\n              if (0 !== i) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          }\n        }\n      }\n    });\n  },\n  _getSeriesForPane: function (paneName) {\n    var paneSeries = [];\n    (0, _iterator.each)(this.series, function (_, oneSeries) {\n      if (oneSeries.pane === paneName) {\n        paneSeries.push(oneSeries);\n      }\n    });\n    return paneSeries;\n  },\n  _createPanesBorderOptions: function () {\n    var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\n\n    var panesBorderOptions = {};\n    this.panes.forEach(function (pane) {\n      return panesBorderOptions[pane.name] = (0, _extend2.extend)(true, {}, commonBorderOptions, pane.border);\n    });\n    return panesBorderOptions;\n  },\n  _createScrollBar: function () {\n    var that = this;\n    var scrollBarOptions = that._themeManager.getOptions(\"scrollBar\") || {};\n    var scrollBarGroup = that._scrollBarGroup;\n\n    if (scrollBarOptions.visible) {\n      scrollBarOptions.rotated = that._isRotated();\n      that._scrollBar = (that._scrollBar || new _scroll_bar.ScrollBar(that._renderer, scrollBarGroup)).update(scrollBarOptions);\n    } else {\n      scrollBarGroup.linkRemove();\n      that._scrollBar && that._scrollBar.dispose();\n      that._scrollBar = null;\n    }\n  },\n  _prepareToRender: function (drawOptions) {\n    var panesBorderOptions = this._createPanesBorderOptions();\n\n    this._createPanesBackground();\n\n    this._appendAxesGroups();\n\n    this._adjustViewport();\n\n    return panesBorderOptions;\n  },\n  _adjustViewport: function () {\n    var that = this;\n\n    var series = that._getVisibleSeries();\n\n    var argumentAxis = that.getArgumentAxis();\n    var useAggregation = series.some(function (s) {\n      return s.useAggregation();\n    });\n\n    var adjustOnZoom = that._themeManager.getOptions(\"adjustOnZoom\");\n\n    var alignToBounds = !argumentAxis.dataVisualRangeIsReduced();\n\n    if (!useAggregation && !adjustOnZoom) {\n      return;\n    }\n\n    that._valueAxes.forEach(function (axis) {\n      return axis.adjust(alignToBounds);\n    });\n  },\n  _recreateSizeDependentObjects: function (isCanvasChanged) {\n    var that = this;\n\n    var series = that._getVisibleSeries();\n\n    var useAggregation = series.some(function (s) {\n      return s.useAggregation();\n    });\n\n    var zoomChanged = that._isZooming();\n\n    if (!useAggregation) {\n      return;\n    }\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas, true);\n    });\n\n    series.forEach(function (series) {\n      if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\n        series.createPoints();\n      }\n    });\n\n    that._processSeriesFamilies();\n  },\n  _isZooming: function () {\n    var that = this;\n    var argumentAxis = that.getArgumentAxis();\n\n    if (!argumentAxis || !argumentAxis.getTranslator()) {\n      return false;\n    }\n\n    var businessRange = argumentAxis.getTranslator().getBusinessRange();\n    var zoomRange = argumentAxis.getViewport();\n    var min = zoomRange ? zoomRange.min : 0;\n    var max = zoomRange ? zoomRange.max : 0;\n\n    if (\"logarithmic\" === businessRange.axisType) {\n      min = (0, _utils2.getLog)(min, businessRange.base);\n      max = (0, _utils2.getLog)(max, businessRange.base);\n    }\n\n    var viewportDistance = businessRange.axisType === DISCRETE ? (0, _utils2.getCategoriesInfo)(businessRange.categories, min, max).categories.length : Math.abs(max - min);\n    var precision = (0, _math.getPrecision)(viewportDistance);\n    precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\n    var zoomChanged = Math.round((that._zoomLength - viewportDistance) * precision) / precision !== 0;\n    that._zoomLength = viewportDistance;\n    return zoomChanged;\n  },\n  _handleSeriesDataUpdated: function () {\n    var that = this;\n    var viewport = new _range.Range();\n    that.series.forEach(function (s) {\n      viewport.addRange(s.getArgumentRange());\n    });\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas, true);\n      axis.setBusinessRange(viewport, that._axesReinitialized);\n    });\n\n    that.callBase();\n  },\n  _isLegendInside: function () {\n    return this._legend && \"inside\" === this._legend.getPosition();\n  },\n  _isRotated: function () {\n    return this._themeManager.getOptions(\"rotated\");\n  },\n  _getLayoutTargets: function () {\n    return this.panes;\n  },\n  _applyClipRects: function (panesBorderOptions) {\n    var that = this;\n\n    that._drawPanesBorders(panesBorderOptions);\n\n    that._createClipRectsForPanes();\n\n    that._applyClipRectsForAxes();\n\n    that._fillPanesBackground();\n  },\n  _updateLegendPosition: function (drawOptions, legendHasInsidePosition) {\n    var that = this;\n\n    if (drawOptions.drawLegend && that._legend && legendHasInsidePosition) {\n      var panes = that.panes;\n      var newCanvas = (0, _extend2.extend)({}, panes[0].canvas);\n      var layoutManager = new _layout_manager.LayoutManager();\n      newCanvas.right = panes[panes.length - 1].canvas.right;\n      newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\n      layoutManager.layoutInsideLegend(that._legend, newCanvas);\n    }\n  },\n  _allowLegendInsidePosition: function () {\n    return true;\n  },\n  _applyExtraSettings: function (series) {\n    var that = this;\n\n    var paneIndex = that._getPaneIndex(series.pane);\n\n    var panesClipRects = that._panesClipRects;\n    var wideClipRect = panesClipRects.wide[paneIndex];\n    series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, that._getPaneBorderVisibility(paneIndex));\n  },\n  _updatePanesCanvases: function (drawOptions) {\n    if (!drawOptions.recreateCanvas) {\n      return;\n    }\n\n    (0, _utils2.updatePanesCanvases)(this.panes, this._canvas, this._isRotated());\n  },\n  _normalizePanesHeight: function () {\n    (0, _utils2.normalizePanesHeight)(this.panes);\n  },\n  _renderScaleBreaks: function () {\n    this._valueAxes.concat(this._argumentAxes).forEach(function (axis) {\n      axis.drawScaleBreaks();\n    });\n  },\n  _getArgFilter: function () {\n    return _range_data_calculator.default.getViewPortFilter(this.getArgumentAxis().visualRange() || {});\n  },\n  _applyPointMarkersAutoHiding: function () {\n    var that = this;\n    var allSeries = that.series;\n\n    if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\n      allSeries.forEach(function (s) {\n        return s.autoHidePointMarkers = false;\n      });\n      return;\n    }\n\n    that.panes.forEach(function (_ref) {\n      var borderCoords = _ref.borderCoords,\n          name = _ref.name;\n      var series = allSeries.filter(function (s) {\n        return s.pane === name && s.usePointsToDefineAutoHiding();\n      });\n      var argAxis = that.getArgumentAxis();\n      var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\n      fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\n\n      if (markersInfo.series.length) {\n        var argVisualRange = argAxis.visualRange();\n        var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\n        var sortingCallback = argAxisIsDiscrete ? function (p1, p2) {\n          return argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument);\n        } : function (p1, p2) {\n          return p1.argument - p2.argument;\n        };\n        var points = [];\n        markersInfo.series.forEach(function (s) {\n          return points = points.concat(s.points);\n        });\n        points.sort(sortingCallback);\n        updateMarkersInfo(points, markersInfo.overloadedSeries);\n        applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis);\n      }\n    });\n  },\n  _renderAxes: function (drawOptions, panesBorderOptions) {\n    function calculateTitlesWidth(axes) {\n      return axes.map(function (axis) {\n        if (!axis.getTitle) {\n          return 0;\n        }\n\n        var title = axis.getTitle();\n        return title ? title.bBox.width : 0;\n      });\n    }\n\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var scrollBar = that._scrollBar ? [that._scrollBar] : [];\n    var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\n    var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\n    var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\n    var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\n    var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n    var allElements = allAxes.concat(scrollBar);\n\n    that._normalizePanesHeight();\n\n    that._updatePanesCanvases(drawOptions);\n\n    var panesCanvases = that.panes.reduce(function (canvases, pane) {\n      canvases[pane.name] = (0, _extend2.extend)({}, pane.canvas);\n      return canvases;\n    }, {});\n    var paneSizes = that.panes.reduce(function (sizes, pane) {\n      sizes[pane.name] = {\n        height: pane.height,\n        unit: pane.unit\n      };\n      return sizes;\n    }, {});\n    var cleanPanesCanvases = (0, _extend2.extend)(true, {}, panesCanvases);\n\n    that._initCustomPositioningAxes();\n\n    var needCustomAdjustAxes = that._axesBoundaryPositioning();\n\n    if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\n      drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      performActionOnAxes(allAxes, \"prepareAnimation\");\n\n      that._renderScaleBreaks();\n\n      horizontalAxes.forEach(function (a) {\n        return a.resolveOverlappingForCustomPositioning(verticalAxes);\n      });\n      verticalAxes.forEach(function (a) {\n        return a.resolveOverlappingForCustomPositioning(horizontalAxes);\n      });\n      return false;\n    }\n\n    if (needCustomAdjustAxes) {\n      allAxes.forEach(function (a) {\n        return a.customPositionIsAvailable() && a.shift({\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        });\n      });\n    }\n\n    if (that._scrollBar) {\n      that._scrollBar.setPane(that.panes);\n    }\n\n    var vAxesMargins = {\n      panes: {}\n    };\n    var hAxesMargins = getHorizontalAxesMargins(horizontalElements, function (axis) {\n      return axis.estimateMargins(panesCanvases[axis.pane]);\n    });\n    panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n\n    var drawAxesAndSetCanvases = function (isHorizontal) {\n      var axes = isHorizontal ? horizontalAxes : verticalAxes;\n      var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\n      drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\n\n      if (isHorizontal) {\n        hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins);\n      } else {\n        vAxesMargins = getVerticalAxesMargins(verticalElements);\n      }\n\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n    };\n\n    drawAxesAndSetCanvases(false);\n    drawAxesAndSetCanvases(true);\n\n    if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\n      drawAxesAndSetCanvases(false);\n    }\n\n    var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n\n    var visibleSeries = that._getVisibleSeries();\n\n    var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\n\n    performActionOnAxes(allElements, \"updateSize\", panesCanvases, axisAnimationEnabled(drawOptions, pointsToAnimation));\n    horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\n    verticalElements.forEach(shiftAxis(\"left\", \"right\"));\n\n    that._renderScaleBreaks();\n\n    that.panes.forEach(function (pane) {\n      (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name]);\n    });\n\n    that._valueAxes.forEach(function (axis) {\n      axis.setInitRange();\n    });\n\n    verticalAxes.forEach(function (axis, i) {\n      if (axis.hasWrap && axis.hasWrap()) {\n        var title = axis.getTitle();\n        var newTitleWidth = title ? title.bBox.width : 0;\n        var offset = newTitleWidth - oldTitlesWidth[i];\n\n        if (\"right\" === axis.getOptions().position) {\n          vAxesMargins.right += offset;\n        } else {\n          vAxesMargins.left += offset;\n          that.panes.forEach(function (_ref2) {\n            var name = _ref2.name;\n            return vAxesMargins.panes[name].left += offset;\n          });\n        }\n\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\n        oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n      }\n    });\n\n    if (verticalAxes.some(function (v) {\n      return v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition;\n    })) {\n      performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, false);\n    }\n\n    horizontalAxes.forEach(function (a) {\n      return a.resolveOverlappingForCustomPositioning(verticalAxes);\n    });\n    verticalAxes.forEach(function (a) {\n      return a.resolveOverlappingForCustomPositioning(horizontalAxes);\n    });\n    return cleanPanesCanvases;\n  },\n  _getExtraTemplatesItems: function () {\n    var that = this;\n    var allAxes = (that._argumentAxes || []).concat(that._valueAxes || []);\n\n    var elements = that._collectTemplatesFromItems(allAxes);\n\n    return {\n      items: elements.items,\n      groups: elements.groups,\n      launchRequest: function () {\n        allAxes.forEach(function (a) {\n          a.setRenderedState(true);\n        });\n      },\n      doneRequest: function () {\n        allAxes.forEach(function (a) {\n          a.setRenderedState(false);\n        });\n      }\n    };\n  },\n  _estimateTickIntervals: function (axes, canvases) {\n    return axes.some(function (axis) {\n      return axis.estimateTickInterval(canvases[axis.pane]);\n    });\n  },\n  checkForMoreSpaceForPanesCanvas: function () {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var panesAreCustomSized = that.panes.filter(function (p) {\n      return p.unit;\n    }).length === that.panes.length;\n    var needSpace = false;\n\n    if (panesAreCustomSized) {\n      var needHorizontalSpace = 0;\n      var needVerticalSpace = 0;\n\n      if (rotated) {\n        var argAxisRightMargin = that.getArgumentAxis().getMargins().right;\n        var rightPanesIndent = Math.min.apply(Math, that.panes.map(function (p) {\n          return p.canvas.right;\n        }));\n        needHorizontalSpace = that._canvas.right + argAxisRightMargin - rightPanesIndent;\n      } else {\n        var argAxisBottomMargin = that.getArgumentAxis().getMargins().bottom;\n        var bottomPanesIndent = Math.min.apply(Math, that.panes.map(function (p) {\n          return p.canvas.bottom;\n        }));\n        needVerticalSpace = that._canvas.bottom + argAxisBottomMargin - bottomPanesIndent;\n      }\n\n      needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\n        width: needHorizontalSpace,\n        height: needVerticalSpace\n      } : false;\n\n      if (0 !== needVerticalSpace) {\n        var realSize = that.getSize();\n        var customSize = that.option(\"size\");\n        var container = that._$element[0];\n        var containerHasStyledHeight = !!container.style.height || (0, _utils2.checkElementHasPropertyFromStyleSheet)(container, \"height\");\n\n        if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\n          that._forceResize(realSize.width, realSize.height + needVerticalSpace);\n\n          needSpace = false;\n        }\n      }\n    } else {\n      needSpace = that.layoutManager.needMoreSpaceForPanesCanvas(that._getLayoutTargets(), rotated, function (pane) {\n        return {\n          width: rotated && !!pane.unit,\n          height: !rotated && !!pane.unit\n        };\n      });\n    }\n\n    return needSpace;\n  },\n  _forceResize: function (width, height) {\n    this._renderer.resize(width, height);\n\n    this._updateSize();\n\n    this._setContentSize();\n\n    this._preserveOriginalCanvas();\n\n    this._updateCanvasClipRect(this._canvas);\n  },\n  _shrinkAxes: function (sizeShortage, panesCanvases) {\n    if (!sizeShortage || !panesCanvases) {\n      return;\n    }\n\n    this._renderer.stopAllAnimations(true);\n\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var scrollBar = that._scrollBar ? [that._scrollBar] : [];\n    var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\n    var verticalAxes = rotated ? extendedArgAxes : that._valueAxes;\n    var horizontalAxes = rotated ? that._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n\n    if (sizeShortage.width || sizeShortage.height) {\n      checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\n      checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      var paneSizes = that.panes.reduce(function (sizes, pane) {\n        sizes[pane.name] = {\n          height: pane.height,\n          unit: pane.unit\n        };\n        return sizes;\n      }, {});\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\n      verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\n      that.panes.forEach(function (pane) {\n        return (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name]);\n      });\n    }\n  },\n  _isArgumentAxisBeforeScrollBar: function () {\n    var that = this;\n    var argumentAxis = that.getArgumentAxis();\n\n    if (that._scrollBar) {\n      var _argumentAxis$getOpti;\n\n      var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\n      var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\n\n      var scrollBarPosition = that._scrollBar.getOptions().position;\n\n      return argumentAxis.hasCustomPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition;\n    }\n\n    return false;\n  },\n  _getPanesParameters: function () {\n    var that = this;\n    var panes = that.panes;\n    var i;\n    var params = [];\n\n    for (i = 0; i < panes.length; i++) {\n      if (that._getPaneBorderVisibility(i)) {\n        params.push({\n          coords: panes[i].borderCoords,\n          clipRect: that._panesClipRects.fixed[i]\n        });\n      }\n    }\n\n    return params;\n  },\n  _createCrosshairCursor: function () {\n    var that = this;\n    var options = that._themeManager.getOptions(\"crosshair\") || {};\n    var argumentAxis = that.getArgumentAxis();\n    var axes = !that._isRotated() ? [[argumentAxis], that._valueAxes] : [that._valueAxes, [argumentAxis]];\n    var parameters = {\n      canvas: that._getCommonCanvas(),\n      panes: that._getPanesParameters(),\n      axes: axes\n    };\n\n    if (!options || !options.enabled) {\n      return;\n    }\n\n    if (!that._crosshair) {\n      that._crosshair = new _crosshair.Crosshair(that._renderer, options, parameters, that._crosshairCursorGroup);\n    } else {\n      that._crosshair.update(options, parameters);\n    }\n\n    that._crosshair.render();\n  },\n  _getCommonCanvas: function () {\n    var i;\n    var canvas;\n    var commonCanvas;\n    var panes = this.panes;\n\n    for (i = 0; i < panes.length; i++) {\n      canvas = panes[i].canvas;\n\n      if (!commonCanvas) {\n        commonCanvas = (0, _extend2.extend)({}, canvas);\n      } else {\n        commonCanvas.right = canvas.right;\n        commonCanvas.bottom = canvas.bottom;\n      }\n    }\n\n    return commonCanvas;\n  },\n  _createPanesBackground: function () {\n    var that = this;\n\n    var defaultBackgroundColor = that._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\n\n    var backgroundColor;\n    var renderer = that._renderer;\n    var rect;\n    var i;\n    var rects = [];\n\n    that._panesBackgroundGroup.clear();\n\n    for (i = 0; i < that.panes.length; i++) {\n      backgroundColor = that.panes[i].backgroundColor || defaultBackgroundColor;\n\n      if (!backgroundColor || \"none\" === backgroundColor) {\n        rects.push(null);\n        continue;\n      }\n\n      rect = renderer.rect(0, 0, 0, 0).attr({\n        fill: backgroundColor,\n        \"stroke-width\": 0\n      }).append(that._panesBackgroundGroup);\n      rects.push(rect);\n    }\n\n    that.panesBackground = rects;\n  },\n  _fillPanesBackground: function () {\n    var that = this;\n    var bc;\n    (0, _iterator.each)(that.panes, function (i, pane) {\n      bc = pane.borderCoords;\n\n      if (null !== that.panesBackground[i]) {\n        that.panesBackground[i].attr({\n          x: bc.left,\n          y: bc.top,\n          width: bc.width,\n          height: bc.height\n        });\n      }\n    });\n  },\n  _calcPaneBorderCoords: function (pane) {\n    var canvas = pane.canvas;\n    var bc = pane.borderCoords = pane.borderCoords || {};\n    bc.left = canvas.left;\n    bc.top = canvas.top;\n    bc.right = canvas.width - canvas.right;\n    bc.bottom = canvas.height - canvas.bottom;\n    bc.width = Math.max(bc.right - bc.left, 0);\n    bc.height = Math.max(bc.bottom - bc.top, 0);\n  },\n  _drawPanesBorders: function (panesBorderOptions) {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    that._panesBorderGroup.linkRemove().clear();\n\n    (0, _iterator.each)(that.panes, function (i, pane) {\n      var borderOptions = panesBorderOptions[pane.name];\n      var attr = {\n        fill: \"none\",\n        stroke: borderOptions.color,\n        \"stroke-opacity\": borderOptions.opacity,\n        \"stroke-width\": borderOptions.width,\n        dashStyle: borderOptions.dashStyle,\n        \"stroke-linecap\": \"square\"\n      };\n\n      that._calcPaneBorderCoords(pane, rotated);\n\n      if (!borderOptions.visible) {\n        return;\n      }\n\n      var bc = pane.borderCoords;\n      var segmentRectParams = (0, _utils.prepareSegmentRectPoints)(bc.left, bc.top, bc.width, bc.height, borderOptions);\n\n      that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup);\n    });\n\n    that._panesBorderGroup.linkAppend();\n  },\n  _createClipRect: function (clipArray, index, left, top, width, height) {\n    var that = this;\n    var clipRect = clipArray[index];\n\n    if (!clipRect) {\n      clipRect = that._renderer.clipRect(left, top, width, height);\n      clipArray[index] = clipRect;\n    } else {\n      clipRect.attr({\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      });\n    }\n  },\n  _createClipRectsForPanes: function () {\n    var that = this;\n    var canvas = that._canvas;\n    (0, _iterator.each)(that.panes, function (i, pane) {\n      var needWideClipRect = false;\n      var bc = pane.borderCoords;\n      var left = bc.left;\n      var top = bc.top;\n      var width = bc.width;\n      var height = bc.height;\n      var panesClipRects = that._panesClipRects;\n\n      that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\n\n      that._createClipRect(panesClipRects.base, i, left, top, width, height);\n\n      (0, _iterator.each)(that.series, function (_, series) {\n        if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\n          needWideClipRect = true;\n        }\n      });\n\n      if (needWideClipRect) {\n        if (that._isRotated()) {\n          top = 0;\n          height = canvas.height;\n        } else {\n          left = 0;\n          width = canvas.width;\n        }\n\n        that._createClipRect(panesClipRects.wide, i, left, top, width, height);\n      } else {\n        panesClipRects.wide[i] = null;\n      }\n    });\n  },\n  _applyClipRectsForAxes: function () {\n    var that = this;\n\n    var axes = that._getAllAxes();\n\n    var customPositionAxes = axes.filter(function (a) {\n      return a.hasCustomPosition();\n    });\n\n    var chartCanvasClipRectID = that._getCanvasClipRectID();\n\n    for (var i = 0; i < axes.length; i++) {\n      var elementsClipRectID = that._getElementsClipRectID(axes[i].pane);\n\n      var canvasClipRectID = customPositionAxes.indexOf(axes[i]) >= 0 ? elementsClipRectID : chartCanvasClipRectID;\n      axes[i].applyClipRects(elementsClipRectID, canvasClipRectID);\n    }\n  },\n  _getPaneBorderVisibility: function (paneIndex) {\n    var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\n\n    var pane = this.panes[paneIndex] || {};\n    var paneBorder = pane.border || {};\n    return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible;\n  },\n  _getCanvasForPane: function (paneName) {\n    var panes = this.panes;\n    var panesNumber = panes.length;\n    var i;\n\n    for (i = 0; i < panesNumber; i++) {\n      if (panes[i].name === paneName) {\n        return panes[i].canvas;\n      }\n    }\n  },\n  _getTrackerSettings: function () {\n    var that = this;\n    var themeManager = that._themeManager;\n    return (0, _extend2.extend)(this.callBase(), {\n      chart: that,\n      rotated: that._isRotated(),\n      crosshair: that._getCrosshairOptions().enabled ? that._crosshair : null,\n      stickyHovering: themeManager.getOptions(\"stickyHovering\")\n    });\n  },\n  _resolveLabelOverlappingStack: function () {\n    var that = this;\n\n    var isRotated = that._isRotated();\n\n    var shiftDirection = isRotated ? function (box, length) {\n      return {\n        x: box.x - length,\n        y: box.y\n      };\n    } : function (box, length) {\n      return {\n        x: box.x,\n        y: box.y - length\n      };\n    };\n    (0, _iterator.each)(that._getStackPoints(), function (_, stacks) {\n      (0, _iterator.each)(stacks, function (_, points) {\n        _base_chart.overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, shiftDirection, function (a, b) {\n          var coordPosition = isRotated ? 1 : 0;\n          var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\n          var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\n\n          if (figureCenter1 - figureCenter12 === 0) {\n            return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1);\n          }\n\n          return 0;\n        });\n      });\n    });\n  },\n  _getStackPoints: function () {\n    var stackPoints = {};\n\n    var visibleSeries = this._getVisibleSeries();\n\n    (0, _iterator.each)(visibleSeries, function (_, singleSeries) {\n      var points = singleSeries.getPoints();\n      var stackName = singleSeries.getStackName() || null;\n      (0, _iterator.each)(points, function (_, point) {\n        var argument = point.argument;\n\n        if (!stackPoints[argument]) {\n          stackPoints[argument] = {};\n        }\n\n        if (!stackPoints[argument][stackName]) {\n          stackPoints[argument][stackName] = [];\n        }\n\n        stackPoints[argument][stackName].push(point);\n      });\n    });\n    return stackPoints;\n  },\n  _getCrosshairOptions: function () {\n    return this._getOption(\"crosshair\");\n  },\n  zoomArgument: function (min, max) {\n    var that = this;\n\n    if (!that._initialized || !(0, _type.isDefined)(min) && !(0, _type.isDefined)(max)) {\n      return;\n    }\n\n    that.getArgumentAxis().visualRange([min, max]);\n  },\n  resetVisualRange: function () {\n    var that = this;\n    var axes = that._argumentAxes;\n    var nonVirtualArgumentAxis = that.getArgumentAxis();\n    axes.forEach(function (axis) {\n      axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\n\n      that._applyCustomVisualRangeOption(axis);\n    });\n    that.callBase();\n  },\n  getVisibleArgumentBounds: function () {\n    var translator = this._argumentAxes[0].getTranslator();\n\n    var range = translator.getBusinessRange();\n    var isDiscrete = range.axisType === DISCRETE;\n    var categories = range.categories;\n    return {\n      minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\n      maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\n    };\n  },\n  _change_FULL_RENDER: function () {\n    this.callBase();\n\n    if (this._changes.has(VISUAL_RANGE)) {\n      this._raiseZoomEndHandlers();\n    }\n  },\n  _getAxesForScaling: function () {\n    return [this.getArgumentAxis()].concat(this._valueAxes);\n  },\n  _applyVisualRangeByVirtualAxes: function (axis, range) {\n    var that = this;\n\n    if (axis.isArgumentAxis) {\n      if (axis !== that.getArgumentAxis()) {\n        return true;\n      }\n\n      that._argumentAxes.filter(function (a) {\n        return a !== axis;\n      }).forEach(function (a) {\n        return a.visualRange(range, {\n          start: true,\n          end: true\n        });\n      });\n    }\n\n    return false;\n  },\n  _raiseZoomEndHandlers: function () {\n    this._argumentAxes.forEach(function (axis) {\n      return axis.handleZoomEnd();\n    });\n\n    this.callBase();\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    (0, _extend2.extend)(this._optionsByReference, {\n      \"argumentAxis.visualRange\": true\n    });\n  },\n  option: function option() {\n    var option = this.callBase.apply(this, arguments);\n\n    var valueAxis = this._options.silent(\"valueAxis\");\n\n    if (\"array\" === (0, _type.type)(valueAxis)) {\n      for (var i = 0; i < valueAxis.length; i++) {\n        var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\n        this._optionsByReference[optionPath] = true;\n      }\n    }\n\n    return option;\n  },\n  _notifyVisualRange: function () {\n    var that = this;\n    var argAxis = that._argumentAxes[0];\n    var argumentVisualRange = (0, _utils2.convertVisualRangeObject)(argAxis.visualRange(), !_isArray(that.option(\"argumentAxis.visualRange\")));\n\n    if (!argAxis.skipEventRising || !(0, _utils2.rangesAreEqual)(argumentVisualRange, that.option(\"argumentAxis.visualRange\"))) {\n      that.option(\"argumentAxis.visualRange\", argumentVisualRange);\n    } else {\n      argAxis.skipEventRising = null;\n    }\n\n    that.callBase();\n  }\n});\n\ndxChart.addPlugin(_shutter_zoom.default);\ndxChart.addPlugin(_zoom_and_pan.default);\ndxChart.addPlugin(_annotations.plugins.core);\ndxChart.addPlugin(_annotations.plugins.chart);\n(0, _component_registrator.default)(\"dxChart\", dxChart);\nvar _default = dxChart;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/chart.js"],"names":["exports","default","_common","require","_extend2","_array","_iterator","_component_registrator","_interopRequireDefault","_utils","_utils2","_type","_math","_base_chart","_multi_axes_synchronizer","_advanced_chart","_scroll_bar","_crosshair","_range_data_calculator","_layout_manager","_range","_shutter_zoom","_zoom_and_pan","_annotations","obj","__esModule","DEFAULT_PANE_NAME","VISUAL_RANGE","DEFAULT_PANES","name","border","DISCRETE","_isArray","Array","isArray","getFirstAxisNameForPane","axes","paneName","defaultPane","result","i","length","pane","changeVisibilityAxisGrids","axis","gridVisibility","minorGridVisibility","gridOpt","getOptions","grid","minorGridOpt","minorGrid","visible","hideGridsOnNonFirstValueAxisForPane","axesForPane","axisShown","hiddenStubAxis","some","minorGridOptions","gridOptions","forEach","getTranslator","getBusinessRange","isEmpty","push","findAxisOptions","valueAxes","valueAxesOptions","axisName","axInd","priority","findAxis","compareAxes","a","b","doesPaneExist","panes","found","each","_","accumulate","field","src1","src2","auxSpacing","val1","val2","pickMax","pickMaxValue","Math","max","getAxisMargins","getMargins","getHorizontalAxesMargins","getMarginsFunc","reduce","margins","axisMargins","paneMargins","spacing","getMultipleAxesSpacing","top","bottom","left","right","getVerticalAxesMargins","performActionOnAxes","action","actionArgument1","actionArgument2","actionArgument3","shrinkCanvases","isRotated","canvases","sizes","verticalMargins","horizontalMargins","getMargin","side","m","indexOf","getMaxMargin","margins1","margins2","getOriginalField","concat","toUpperCase","slice","shrink","paneNames","sizeField","startMargin","endMargin","oppositeMargins","sort","p1","p2","canvas","margin","firstPane","emptySpace","space","PANE_PADDING","totalCustomSpace","Object","keys","prev","key","unit","height","offset","paneSize","floor","drawAxesWithTicks","condition","panesBorderOptions","synchronize","shiftAxis","side1","side2","shifts","customPositionIsAvailable","customPositionEqualsToPredefined","shift","getCommonSize","size","checkUsedSpace","sizeShortage","getMarginFunc","axisAnimationEnabled","drawOptions","pointsToAnimation","pointsCount","sum","count","animate","animationPointsLimit","collectMarkersInfoBySeries","allSeries","filteredSeries","argAxis","series","overloadedSeries","argVisualRange","visualRange","argTranslator","argViewPortFilter","getViewPortFilter","s","valAxis","getValueAxis","valVisualRange","getCanvasRange","valTranslator","seriesIndex","valViewPortFilter","sr","seriesPoints","getPoints","filter","p","argument","getMinValue","getMaxValue","tp","value","bubbleSize","mp","extend","x","to","y","total","continuousSeries","index","points","applyAutoHidePointMarkers","argAxisType","type","autoHidePointMarkers","tickCount","getTicksValues","majorTicksValues","autoHidePointMarkersEnabled","parseInt","isNaN","fastHidingPointMarkersByArea","markersInfo","area","width","_loop","currentSeries","pointSize","pointsArea","splice","updateMarkersInfo","isContinuousSeries","curPoint","isDefined","j","nextPoint","next_x","next_y","abs","distance","sqrt","pow","dxChart","AdvancedChart","inherit","_themeSection","_fontFields","_initCore","paneAxis","callBase","_correctAxes","_correctValueAxes","_getExtraOptions","noop","_createPanes","that","option","panesNameCounter","_incidentOccurred","_isRotated","reverse","_getAxisRenderingOptions","axisType","drawingType","_prepareAxisOptions","typeSelector","userOptions","rotated","isHorizontal","containerColor","_themeManager","_checkPaneName","seriesTheme","paneList","map","inArray","_initCustomPositioningAxes","argumentAxis","getArgumentAxis","valueAxisName","customPositionAxis","valueAxis","_valueAxes","v","getOrthogonalAxis","customPositionIsBoundaryOrthogonalAxis","customPositionIsBoundary","_getAllAxes","_argumentAxes","_resetAxesAnimation","isFirstDrawing","resetApplyingAnimation","_cleanGroups","beforeCleanGroups","afterCleanGroups","_axesBoundaryPositioning","allAxes","boundaryStateChanged","prevBoundaryState","_customBoundaryPosition","getCustomBoundaryPosition","_getValueAxis","valueAxisOptions","crosshairMargins","_getCrosshairMargins","axisOptions","_createAxis","_populateAxesOptions","optionPath","crosshairMargin","applyVisualRangeSetter","_getVisualRangeSetter","setPane","needHideGrids","synchronizeMultiAxes","paneWithAxis","defaultAxis","axesWithSamePath","_getSeriesForPane","paneSeries","oneSeries","_createPanesBorderOptions","commonBorderOptions","_createScrollBar","scrollBarOptions","scrollBarGroup","_scrollBarGroup","_scrollBar","ScrollBar","_renderer","update","linkRemove","dispose","_prepareToRender","_createPanesBackground","_appendAxesGroups","_adjustViewport","_getVisibleSeries","useAggregation","adjustOnZoom","alignToBounds","dataVisualRangeIsReduced","adjust","_recreateSizeDependentObjects","isCanvasChanged","zoomChanged","_isZooming","updateCanvas","_canvas","_useAllAggregatedPoints","createPoints","_processSeriesFamilies","businessRange","zoomRange","getViewport","min","getLog","base","viewportDistance","getCategoriesInfo","categories","precision","getPrecision","round","_zoomLength","_handleSeriesDataUpdated","viewport","Range","addRange","getArgumentRange","setBusinessRange","_axesReinitialized","_isLegendInside","_legend","getPosition","_getLayoutTargets","_applyClipRects","_drawPanesBorders","_createClipRectsForPanes","_applyClipRectsForAxes","_fillPanesBackground","_updateLegendPosition","legendHasInsidePosition","drawLegend","newCanvas","layoutManager","LayoutManager","layoutInsideLegend","_allowLegendInsidePosition","_applyExtraSettings","paneIndex","_getPaneIndex","panesClipRects","_panesClipRects","wideClipRect","wide","setClippingParams","id","_getPaneBorderVisibility","_updatePanesCanvases","recreateCanvas","updatePanesCanvases","_normalizePanesHeight","normalizePanesHeight","_renderScaleBreaks","drawScaleBreaks","_getArgFilter","_applyPointMarkersAutoHiding","_ref","borderCoords","usePointsToDefineAutoHiding","argAxisIsDiscrete","sortingCallback","_renderAxes","calculateTitlesWidth","getTitle","title","bBox","scrollBar","extendedArgAxes","_isArgumentAxisBeforeScrollBar","verticalAxes","verticalElements","horizontalAxes","horizontalElements","allElements","panesCanvases","paneSizes","cleanPanesCanvases","needCustomAdjustAxes","adjustAxes","resolveOverlappingForCustomPositioning","vAxesMargins","hAxesMargins","estimateMargins","drawAxesAndSetCanvases","_changesApplying","_estimateTickIntervals","oldTitlesWidth","visibleSeries","_getPointsToAnimation","setInitRange","hasWrap","newTitleWidth","position","_ref2","getCustomPosition","_axisPosition","_getExtraTemplatesItems","elements","_collectTemplatesFromItems","items","groups","launchRequest","setRenderedState","doneRequest","estimateTickInterval","checkForMoreSpaceForPanesCanvas","panesAreCustomSized","needSpace","needHorizontalSpace","needVerticalSpace","argAxisRightMargin","rightPanesIndent","apply","argAxisBottomMargin","bottomPanesIndent","realSize","getSize","customSize","container","_$element","containerHasStyledHeight","style","checkElementHasPropertyFromStyleSheet","_forceResize","needMoreSpaceForPanesCanvas","resize","_updateSize","_setContentSize","_preserveOriginalCanvas","_updateCanvasClipRect","_shrinkAxes","stopAllAnimations","_argumentAxis$getOpti","argAxisPosition","getResolvedBoundaryPosition","argAxisLabelPosition","label","scrollBarPosition","hasCustomPosition","_getPanesParameters","params","coords","clipRect","fixed","_createCrosshairCursor","options","parameters","_getCommonCanvas","enabled","Crosshair","_crosshairCursorGroup","render","commonCanvas","defaultBackgroundColor","backgroundColor","renderer","rect","rects","_panesBackgroundGroup","clear","attr","fill","append","panesBackground","bc","_calcPaneBorderCoords","_panesBorderGroup","borderOptions","stroke","color","opacity","dashStyle","segmentRectParams","prepareSegmentRectPoints","path","pathType","linkAppend","_createClipRect","clipArray","needWideClipRect","isFinancialSeries","areErrorBarsVisible","customPositionAxes","chartCanvasClipRectID","_getCanvasClipRectID","elementsClipRectID","_getElementsClipRectID","canvasClipRectID","applyClipRects","commonPaneBorderVisible","paneBorder","_getCanvasForPane","panesNumber","_getTrackerSettings","themeManager","chart","crosshair","_getCrosshairOptions","stickyHovering","_resolveLabelOverlappingStack","shiftDirection","box","_getStackPoints","stacks","overlapping","resolveLabelOverlappingInOneDirection","coordPosition","figureCenter1","labels","getFigureCenter","figureCenter12","getPoint","isInverted","stackPoints","singleSeries","stackName","getStackName","point","_getOption","zoomArgument","_initialized","resetVisualRange","nonVirtualArgumentAxis","_applyCustomVisualRangeOption","getVisibleArgumentBounds","translator","range","isDiscrete","minVisible","maxVisible","_change_FULL_RENDER","_changes","has","_raiseZoomEndHandlers","_getAxesForScaling","_applyVisualRangeByVirtualAxes","isArgumentAxis","start","end","handleZoomEnd","_setOptionsByReference","_optionsByReference","arguments","_options","silent","_notifyVisualRange","argumentVisualRange","convertVisualRangeObject","skipEventRising","rangesAreEqual","addPlugin","plugins","core","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend2 = require(\"../core/utils/extend\");\r\nvar _array = require(\"../core/utils/array\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _utils = require(\"./utils\");\r\nvar _utils2 = require(\"./core/utils\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _math = require(\"../core/utils/math\");\r\nvar _base_chart = require(\"./chart_components/base_chart\");\r\nvar _multi_axes_synchronizer = _interopRequireDefault(require(\"./chart_components/multi_axes_synchronizer\"));\r\nvar _advanced_chart = require(\"./chart_components/advanced_chart\");\r\nvar _scroll_bar = require(\"./chart_components/scroll_bar\");\r\nvar _crosshair = require(\"./chart_components/crosshair\");\r\nvar _range_data_calculator = _interopRequireDefault(require(\"./series/helpers/range_data_calculator\"));\r\nvar _layout_manager = require(\"./chart_components/layout_manager\");\r\nvar _range = require(\"./translators/range\");\r\nvar _shutter_zoom = _interopRequireDefault(require(\"./chart_components/shutter_zoom\"));\r\nvar _zoom_and_pan = _interopRequireDefault(require(\"./chart_components/zoom_and_pan\"));\r\nvar _annotations = require(\"./core/annotations\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\nvar DEFAULT_PANES = [{\r\n    name: DEFAULT_PANE_NAME,\r\n    border: {}\r\n}];\r\nvar DISCRETE = \"discrete\";\r\nvar _isArray = Array.isArray;\r\n\r\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\r\n    var result;\r\n    for (var i = 0; i < axes.length; i++) {\r\n        if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\r\n            result = axes[i].name;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = axes[0].name\r\n    }\r\n    return result\r\n}\r\n\r\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\r\n    var gridOpt = axis.getOptions().grid;\r\n    var minorGridOpt = axis.getOptions().minorGrid;\r\n    gridOpt.visible = gridVisibility;\r\n    minorGridOpt && (minorGridOpt.visible = minorGridVisibility)\r\n}\r\n\r\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\r\n    var axisShown = false;\r\n    var hiddenStubAxis = [];\r\n    var minorGridVisibility = axesForPane.some(function(axis) {\r\n        var minorGridOptions = axis.getOptions().minorGrid;\r\n        return minorGridOptions && minorGridOptions.visible\r\n    });\r\n    var gridVisibility = axesForPane.some(function(axis) {\r\n        var gridOptions = axis.getOptions().grid;\r\n        return gridOptions && gridOptions.visible\r\n    });\r\n    if (axesForPane.length > 1) {\r\n        axesForPane.forEach(function(axis) {\r\n            var gridOpt = axis.getOptions().grid;\r\n            if (axisShown) {\r\n                changeVisibilityAxisGrids(axis, false, false)\r\n            } else {\r\n                if (gridOpt && gridOpt.visible) {\r\n                    if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                        changeVisibilityAxisGrids(axis, false, false);\r\n                        hiddenStubAxis.push(axis)\r\n                    } else {\r\n                        axisShown = true;\r\n                        changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility)\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility)\r\n    }\r\n}\r\n\r\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\r\n    var result;\r\n    var axInd;\r\n    for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\r\n        if (valueAxesOptions[axInd].name === axisName) {\r\n            result = valueAxesOptions[axInd];\r\n            result.priority = axInd;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (axInd = 0; axInd < valueAxes.length; axInd++) {\r\n            if (valueAxes[axInd].name === axisName) {\r\n                result = valueAxes[axInd].getOptions();\r\n                result.priority = valueAxes[axInd].priority;\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction findAxis(paneName, axisName, axes) {\r\n    var axis;\r\n    var i;\r\n    for (i = 0; i < axes.length; i++) {\r\n        axis = axes[i];\r\n        if (axis.name === axisName && axis.pane === paneName) {\r\n            return axis\r\n        }\r\n    }\r\n    if (paneName) {\r\n        return findAxis(void 0, axisName, axes)\r\n    }\r\n}\r\n\r\nfunction compareAxes(a, b) {\r\n    return a.priority - b.priority\r\n}\r\n\r\nfunction doesPaneExist(panes, paneName) {\r\n    var found = false;\r\n    (0, _iterator.each)(panes, function(_, pane) {\r\n        if (pane.name === paneName) {\r\n            found = true;\r\n            return false\r\n        }\r\n    });\r\n    return found\r\n}\r\n\r\nfunction accumulate(field, src1, src2, auxSpacing) {\r\n    var val1 = src1[field] || 0;\r\n    var val2 = src2[field] || 0;\r\n    return val1 + val2 + (val1 && val2 ? auxSpacing : 0)\r\n}\r\n\r\nfunction pickMax(field, src1, src2) {\r\n    return pickMaxValue(src1[field], src2[field])\r\n}\r\n\r\nfunction pickMaxValue(val1, val2) {\r\n    return Math.max(val1 || 0, val2 || 0)\r\n}\r\n\r\nfunction getAxisMargins(axis) {\r\n    return axis.getMargins()\r\n}\r\n\r\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\r\n    return axes.reduce(function(margins, axis) {\r\n        var axisMargins = getMarginsFunc(axis);\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\r\n        paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\r\n        paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\r\n        paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }, {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction getVerticalAxesMargins(axes) {\r\n    return axes.reduce(function(margins, axis) {\r\n        var axisMargins = axis.getMargins();\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\r\n        paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\r\n        paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\r\n        paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }, {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\r\n    axes.forEach(function(axis) {\r\n        axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3)\r\n    })\r\n}\r\n\r\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\r\n    function getMargin(side, margins, pane) {\r\n        var m = (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) === -1 ? margins : margins.panes[pane] || {};\r\n        return m[side]\r\n    }\r\n\r\n    function getMaxMargin(side, margins1, margins2, pane) {\r\n        return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane))\r\n    }\r\n    var getOriginalField = function(field) {\r\n        return \"original\".concat(field[0].toUpperCase()).concat(field.slice(1))\r\n    };\r\n\r\n    function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\r\n        paneNames = paneNames.sort(function(p1, p2) {\r\n            return canvases[p2][startMargin] - canvases[p1][startMargin]\r\n        });\r\n        paneNames.forEach(function(pane) {\r\n            var canvas = canvases[pane];\r\n            oppositeMargins.forEach(function(margin) {\r\n                canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane)\r\n            })\r\n        });\r\n        var firstPane = canvases[paneNames[0]];\r\n        var emptySpace = paneNames.reduce(function(space, paneName) {\r\n            space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\r\n            return space\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - _utils2.PANE_PADDING * (paneNames.length - 1);\r\n        var totalCustomSpace = Object.keys(sizes).reduce(function(prev, key) {\r\n            return prev + (sizes[key].unit ? sizes[key].height : 0)\r\n        }, 0);\r\n        emptySpace -= totalCustomSpace;\r\n        paneNames.reduce(function(offset, pane) {\r\n            var canvas = canvases[pane];\r\n            var paneSize = sizes[pane];\r\n            offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\r\n            canvas[endMargin] = firstPane[sizeField] - offset;\r\n            offset -= paneSize.unit ? paneSize.height : Math.floor(emptySpace * paneSize.height);\r\n            canvas[startMargin] = offset;\r\n            offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + _utils2.PANE_PADDING;\r\n            return offset\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0))\r\n    }\r\n    var paneNames = Object.keys(canvases);\r\n    if (!isRotated) {\r\n        shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"])\r\n    } else {\r\n        shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"])\r\n    }\r\n    return canvases\r\n}\r\n\r\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\r\n    if (condition) {\r\n        performActionOnAxes(axes, \"createTicks\", canvases);\r\n        _multi_axes_synchronizer.default.synchronize(axes)\r\n    }\r\n    performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions)\r\n}\r\n\r\nfunction shiftAxis(side1, side2) {\r\n    var shifts = {};\r\n    return function(axis) {\r\n        if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\r\n            var shift = shifts[axis.pane] = shifts[axis.pane] || {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            };\r\n            var spacing = axis.getMultipleAxesSpacing();\r\n            var margins = axis.getMargins();\r\n            axis.shift(shift);\r\n            shift[side1] = accumulate(side1, shift, margins, spacing);\r\n            shift[side2] = accumulate(side2, shift, margins, spacing)\r\n        } else {\r\n            axis.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCommonSize(side, margins) {\r\n    var size = 0;\r\n    var pane;\r\n    var paneMargins;\r\n    for (pane in margins.panes) {\r\n        paneMargins = margins.panes[pane];\r\n        size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right\r\n    }\r\n    return size\r\n}\r\n\r\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\r\n    var size = 0;\r\n    if (sizeShortage[side] > 0) {\r\n        size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\r\n        performActionOnAxes(axes, \"hideTitle\");\r\n        sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins))\r\n    }\r\n    if (sizeShortage[side] > 0) {\r\n        performActionOnAxes(axes, \"hideOuterElements\")\r\n    }\r\n}\r\n\r\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\r\n    var pointsCount = pointsToAnimation.reduce(function(sum, count) {\r\n        return sum + count\r\n    }, 0) / pointsToAnimation.length;\r\n    return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit\r\n}\r\n\r\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\r\n    var series = [];\r\n    var overloadedSeries = {};\r\n    var argVisualRange = argAxis.visualRange();\r\n    var argTranslator = argAxis.getTranslator();\r\n    var argViewPortFilter = _range_data_calculator.default.getViewPortFilter(argVisualRange || {});\r\n    filteredSeries.forEach(function(s) {\r\n        var valAxis = s.getValueAxis();\r\n        var valVisualRange = valAxis.getCanvasRange();\r\n        var valTranslator = valAxis.getTranslator();\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        var valViewPortFilter = _range_data_calculator.default.getViewPortFilter(valVisualRange || {});\r\n        overloadedSeries[seriesIndex] = {};\r\n        filteredSeries.forEach(function(sr) {\r\n            return overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0\r\n        });\r\n        var seriesPoints = [];\r\n        s.getPoints().filter(function(p) {\r\n            return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))\r\n        }).forEach(function(p) {\r\n            var tp = {\r\n                seriesIndex: seriesIndex,\r\n                argument: p.argument,\r\n                value: p.getMaxValue(true),\r\n                size: p.bubbleSize || p.getOptions().size\r\n            };\r\n            if (p.getMinValue(true) !== p.getMaxValue(true)) {\r\n                var mp = (0, _extend2.extend)({}, tp);\r\n                mp.value = p.getMinValue(true);\r\n                mp.x = argTranslator.to(mp.argument, 1);\r\n                mp.y = valTranslator.to(mp.value, 1);\r\n                seriesPoints.push(mp)\r\n            }\r\n            tp.x = argTranslator.to(tp.argument, 1);\r\n            tp.y = valTranslator.to(tp.value, 1);\r\n            seriesPoints.push(tp)\r\n        });\r\n        overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\r\n        overloadedSeries[seriesIndex].total = 0;\r\n        overloadedSeries[seriesIndex].continuousSeries = 0;\r\n        series.push({\r\n            name: s.name,\r\n            index: seriesIndex,\r\n            points: seriesPoints\r\n        })\r\n    });\r\n    return {\r\n        series: series,\r\n        overloadedSeries: overloadedSeries\r\n    }\r\n}\r\n\r\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\r\n    var argAxisType = argAxis.getOptions().type;\r\n    filteredSeries.forEach(function(s) {\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        s.autoHidePointMarkers = false;\r\n        var tickCount = argAxis.getTicksValues().majorTicksValues.length;\r\n        if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\r\n            for (var index in overloadedSeries[seriesIndex]) {\r\n                var i = parseInt(index);\r\n                if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\r\n                    continue\r\n                }\r\n                if (i === seriesIndex) {\r\n                    if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\r\n                        s.autoHidePointMarkers = true;\r\n                        break\r\n                    }\r\n                } else {\r\n                    if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\r\n                        s.autoHidePointMarkers = true;\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\r\n    var area = canvas.width * canvas.height;\r\n    var seriesPoints = markersInfo.series;\r\n    var _loop = function(i) {\r\n        var currentSeries = series.filter(function(s) {\r\n            return s.name === seriesPoints[i].name\r\n        })[0];\r\n        var points = seriesPoints[i].points;\r\n        var pointSize = points.length ? points[0].size : 0;\r\n        var pointsArea = pointSize * pointSize * points.length;\r\n        if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\r\n            var index = seriesPoints[i].index;\r\n            currentSeries.autoHidePointMarkers = true;\r\n            seriesPoints.splice(i, 1);\r\n            series.splice(series.indexOf(currentSeries), 1);\r\n            delete markersInfo.overloadedSeries[index]\r\n        }\r\n    };\r\n    for (var i = seriesPoints.length - 1; i >= 0; i--) {\r\n        _loop(i)\r\n    }\r\n}\r\n\r\nfunction updateMarkersInfo(points, overloadedSeries) {\r\n    var isContinuousSeries = false;\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var curPoint = points[i];\r\n        var size = curPoint.size;\r\n        if ((0, _type.isDefined)(curPoint.x) && (0, _type.isDefined)(curPoint.y)) {\r\n            for (var j = i + 1; j < points.length; j++) {\r\n                var nextPoint = points[j];\r\n                var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\r\n                var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\r\n                if (!(0, _type.isDefined)(next_x) || Math.abs(curPoint.x - next_x) >= size) {\r\n                    isContinuousSeries &= j !== i + 1;\r\n                    break\r\n                } else {\r\n                    var distance = (0, _type.isDefined)(next_x) && (0, _type.isDefined)(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\r\n                    if (distance && distance < size) {\r\n                        overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\r\n                        overloadedSeries[curPoint.seriesIndex].total++;\r\n                        if (!isContinuousSeries) {\r\n                            overloadedSeries[curPoint.seriesIndex].continuousSeries++;\r\n                            isContinuousSeries = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nvar dxChart = _advanced_chart.AdvancedChart.inherit({\r\n    _themeSection: \"chart\",\r\n    _fontFields: [\"crosshair.label.font\"],\r\n    _initCore: function() {\r\n        this.paneAxis = {};\r\n        this.callBase()\r\n    },\r\n    _correctAxes: function() {\r\n        this._correctValueAxes(true)\r\n    },\r\n    _getExtraOptions: _common.noop,\r\n    _createPanes: function() {\r\n        var that = this;\r\n        var panes = that.option(\"panes\");\r\n        var panesNameCounter = 0;\r\n        var defaultPane;\r\n        if (!panes || _isArray(panes) && !panes.length) {\r\n            panes = DEFAULT_PANES\r\n        }\r\n        that.callBase();\r\n        defaultPane = that.option(\"defaultPane\");\r\n        panes = (0, _extend2.extend)(true, [], _isArray(panes) ? panes : [panes]);\r\n        (0, _iterator.each)(panes, function(_, pane) {\r\n            pane.name = !(0, _type.isDefined)(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name\r\n        });\r\n        if ((0, _type.isDefined)(defaultPane)) {\r\n            if (!doesPaneExist(panes, defaultPane)) {\r\n                that._incidentOccurred(\"W2101\", [defaultPane]);\r\n                defaultPane = panes[panes.length - 1].name\r\n            }\r\n        } else {\r\n            defaultPane = panes[panes.length - 1].name\r\n        }\r\n        that.defaultPane = defaultPane;\r\n        panes = that._isRotated() ? panes.reverse() : panes;\r\n        return panes\r\n    },\r\n    _getAxisRenderingOptions: function() {\r\n        return {\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        }\r\n    },\r\n    _prepareAxisOptions: function(typeSelector, userOptions, rotated) {\r\n        return {\r\n            isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\r\n            containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\r\n        }\r\n    },\r\n    _checkPaneName: function(seriesTheme) {\r\n        var paneList = (0, _utils2.map)(this.panes, function(pane) {\r\n            return pane.name\r\n        });\r\n        seriesTheme.pane = seriesTheme.pane || this.defaultPane;\r\n        return (0, _array.inArray)(seriesTheme.pane, paneList) !== -1\r\n    },\r\n    _initCustomPositioningAxes: function() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var valueAxisName = argumentAxis.getOptions().customPositionAxis;\r\n        var valueAxis = that._valueAxes.filter(function(v) {\r\n            return v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name)\r\n        })[0];\r\n        that._valueAxes.forEach(function(v) {\r\n            if (argumentAxis !== v.getOrthogonalAxis()) {\r\n                v.getOrthogonalAxis = function() {\r\n                    return argumentAxis\r\n                };\r\n                v.customPositionIsBoundaryOrthogonalAxis = function() {\r\n                    return argumentAxis.customPositionIsBoundary()\r\n                }\r\n            }\r\n        });\r\n        if ((0, _type.isDefined)(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\r\n            argumentAxis.getOrthogonalAxis = function() {\r\n                return valueAxis\r\n            };\r\n            argumentAxis.customPositionIsBoundaryOrthogonalAxis = function() {\r\n                return that._valueAxes.some(function(v) {\r\n                    return v.customPositionIsBoundary()\r\n                })\r\n            }\r\n        } else {\r\n            if ((0, _type.isDefined)(argumentAxis.getOrthogonalAxis()) && !(0, _type.isDefined)(valueAxis)) {\r\n                argumentAxis.getOrthogonalAxis = _common.noop\r\n            }\r\n        }\r\n    },\r\n    _getAllAxes: function() {\r\n        return this._argumentAxes.concat(this._valueAxes)\r\n    },\r\n    _resetAxesAnimation: function(isFirstDrawing) {\r\n        this._getAllAxes().forEach(function(a) {\r\n            a.resetApplyingAnimation(isFirstDrawing)\r\n        })\r\n    },\r\n    _cleanGroups: function() {\r\n        this._getAllAxes().forEach(function(a) {\r\n            return a.beforeCleanGroups()\r\n        });\r\n        this.callBase();\r\n        this._getAllAxes().forEach(function(a) {\r\n            return a.afterCleanGroups()\r\n        })\r\n    },\r\n    _axesBoundaryPositioning: function() {\r\n        var that = this;\r\n        var allAxes = that._getAllAxes();\r\n        var boundaryStateChanged = false;\r\n        allAxes.forEach(function(a) {\r\n            if (!a.customPositionIsAvailable()) {\r\n                return false\r\n            }\r\n            var prevBoundaryState = a.customPositionIsBoundary();\r\n            a._customBoundaryPosition = a.getCustomBoundaryPosition();\r\n            boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary()\r\n        });\r\n        return boundaryStateChanged\r\n    },\r\n    _getValueAxis: function(paneName, axisName) {\r\n        var that = this;\r\n        var valueAxes = that._valueAxes;\r\n        var valueAxisOptions = that.option(\"valueAxis\") || {};\r\n        var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\r\n        var rotated = that._isRotated();\r\n        var crosshairMargins = that._getCrosshairMargins();\r\n        var axisOptions;\r\n        var axis;\r\n        axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, that.defaultPane);\r\n        axis = findAxis(paneName, axisName, valueAxes);\r\n        if (!axis) {\r\n            axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\r\n            if (!axisOptions) {\r\n                that._incidentOccurred(\"W2102\", [axisName]);\r\n                axisOptions = {\r\n                    name: axisName,\r\n                    priority: valueAxes.length\r\n                }\r\n            }\r\n            axis = that._createAxis(false, that._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                pane: paneName,\r\n                name: axisName,\r\n                optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n            }, rotated));\r\n            axis.applyVisualRangeSetter(that._getVisualRangeSetter());\r\n            valueAxes.push(axis)\r\n        }\r\n        axis.setPane(paneName);\r\n        return axis\r\n    },\r\n    _correctValueAxes: function(needHideGrids) {\r\n        var that = this;\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var valueAxes = that._valueAxes;\r\n        var paneWithAxis = {};\r\n        that.series.forEach(function(series) {\r\n            var axis = series.getValueAxis();\r\n            paneWithAxis[axis.pane] = true\r\n        });\r\n        that.panes.forEach(function(pane) {\r\n            var paneName = pane.name;\r\n            if (!paneWithAxis[paneName]) {\r\n                that._getValueAxis(paneName)\r\n            }\r\n            if (needHideGrids && synchronizeMultiAxes) {\r\n                hideGridsOnNonFirstValueAxisForPane(valueAxes.filter(function(axis) {\r\n                    return axis.pane === paneName\r\n                }))\r\n            }\r\n        });\r\n        that._valueAxes = valueAxes.filter(function(axis) {\r\n            if (!axis.pane) {\r\n                axis.setPane(that.defaultPane)\r\n            }\r\n            return doesPaneExist(that.panes, axis.pane)\r\n        }).sort(compareAxes);\r\n        var defaultAxis = this.getValueAxis();\r\n        that._valueAxes.forEach(function(axis) {\r\n            var optionPath = axis.getOptions().optionPath;\r\n            if (optionPath) {\r\n                var axesWithSamePath = that._valueAxes.filter(function(a) {\r\n                    return a.getOptions().optionPath === optionPath\r\n                });\r\n                if (axesWithSamePath.length > 1) {\r\n                    if (axesWithSamePath.some(function(a) {\r\n                            return a === defaultAxis\r\n                        })) {\r\n                        axesWithSamePath.forEach(function(a) {\r\n                            if (a !== defaultAxis) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    } else {\r\n                        axesWithSamePath.forEach(function(a, i) {\r\n                            if (0 !== i) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSeriesForPane: function(paneName) {\r\n        var paneSeries = [];\r\n        (0, _iterator.each)(this.series, function(_, oneSeries) {\r\n            if (oneSeries.pane === paneName) {\r\n                paneSeries.push(oneSeries)\r\n            }\r\n        });\r\n        return paneSeries\r\n    },\r\n    _createPanesBorderOptions: function() {\r\n        var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\r\n        var panesBorderOptions = {};\r\n        this.panes.forEach(function(pane) {\r\n            return panesBorderOptions[pane.name] = (0, _extend2.extend)(true, {}, commonBorderOptions, pane.border)\r\n        });\r\n        return panesBorderOptions\r\n    },\r\n    _createScrollBar: function() {\r\n        var that = this;\r\n        var scrollBarOptions = that._themeManager.getOptions(\"scrollBar\") || {};\r\n        var scrollBarGroup = that._scrollBarGroup;\r\n        if (scrollBarOptions.visible) {\r\n            scrollBarOptions.rotated = that._isRotated();\r\n            that._scrollBar = (that._scrollBar || new _scroll_bar.ScrollBar(that._renderer, scrollBarGroup)).update(scrollBarOptions)\r\n        } else {\r\n            scrollBarGroup.linkRemove();\r\n            that._scrollBar && that._scrollBar.dispose();\r\n            that._scrollBar = null\r\n        }\r\n    },\r\n    _prepareToRender: function(drawOptions) {\r\n        var panesBorderOptions = this._createPanesBorderOptions();\r\n        this._createPanesBackground();\r\n        this._appendAxesGroups();\r\n        this._adjustViewport();\r\n        return panesBorderOptions\r\n    },\r\n    _adjustViewport: function() {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var useAggregation = series.some(function(s) {\r\n            return s.useAggregation()\r\n        });\r\n        var adjustOnZoom = that._themeManager.getOptions(\"adjustOnZoom\");\r\n        var alignToBounds = !argumentAxis.dataVisualRangeIsReduced();\r\n        if (!useAggregation && !adjustOnZoom) {\r\n            return\r\n        }\r\n        that._valueAxes.forEach(function(axis) {\r\n            return axis.adjust(alignToBounds)\r\n        })\r\n    },\r\n    _recreateSizeDependentObjects: function(isCanvasChanged) {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var useAggregation = series.some(function(s) {\r\n            return s.useAggregation()\r\n        });\r\n        var zoomChanged = that._isZooming();\r\n        if (!useAggregation) {\r\n            return\r\n        }\r\n        that._argumentAxes.forEach(function(axis) {\r\n            axis.updateCanvas(that._canvas, true)\r\n        });\r\n        series.forEach(function(series) {\r\n            if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\r\n                series.createPoints()\r\n            }\r\n        });\r\n        that._processSeriesFamilies()\r\n    },\r\n    _isZooming: function() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        if (!argumentAxis || !argumentAxis.getTranslator()) {\r\n            return false\r\n        }\r\n        var businessRange = argumentAxis.getTranslator().getBusinessRange();\r\n        var zoomRange = argumentAxis.getViewport();\r\n        var min = zoomRange ? zoomRange.min : 0;\r\n        var max = zoomRange ? zoomRange.max : 0;\r\n        if (\"logarithmic\" === businessRange.axisType) {\r\n            min = (0, _utils2.getLog)(min, businessRange.base);\r\n            max = (0, _utils2.getLog)(max, businessRange.base)\r\n        }\r\n        var viewportDistance = businessRange.axisType === DISCRETE ? (0, _utils2.getCategoriesInfo)(businessRange.categories, min, max).categories.length : Math.abs(max - min);\r\n        var precision = (0, _math.getPrecision)(viewportDistance);\r\n        precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\r\n        var zoomChanged = Math.round((that._zoomLength - viewportDistance) * precision) / precision !== 0;\r\n        that._zoomLength = viewportDistance;\r\n        return zoomChanged\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var that = this;\r\n        var viewport = new _range.Range;\r\n        that.series.forEach(function(s) {\r\n            viewport.addRange(s.getArgumentRange())\r\n        });\r\n        that._argumentAxes.forEach(function(axis) {\r\n            axis.updateCanvas(that._canvas, true);\r\n            axis.setBusinessRange(viewport, that._axesReinitialized)\r\n        });\r\n        that.callBase()\r\n    },\r\n    _isLegendInside: function() {\r\n        return this._legend && \"inside\" === this._legend.getPosition()\r\n    },\r\n    _isRotated: function() {\r\n        return this._themeManager.getOptions(\"rotated\")\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return this.panes\r\n    },\r\n    _applyClipRects: function(panesBorderOptions) {\r\n        var that = this;\r\n        that._drawPanesBorders(panesBorderOptions);\r\n        that._createClipRectsForPanes();\r\n        that._applyClipRectsForAxes();\r\n        that._fillPanesBackground()\r\n    },\r\n    _updateLegendPosition: function(drawOptions, legendHasInsidePosition) {\r\n        var that = this;\r\n        if (drawOptions.drawLegend && that._legend && legendHasInsidePosition) {\r\n            var panes = that.panes;\r\n            var newCanvas = (0, _extend2.extend)({}, panes[0].canvas);\r\n            var layoutManager = new _layout_manager.LayoutManager;\r\n            newCanvas.right = panes[panes.length - 1].canvas.right;\r\n            newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\r\n            layoutManager.layoutInsideLegend(that._legend, newCanvas)\r\n        }\r\n    },\r\n    _allowLegendInsidePosition: function() {\r\n        return true\r\n    },\r\n    _applyExtraSettings: function(series) {\r\n        var that = this;\r\n        var paneIndex = that._getPaneIndex(series.pane);\r\n        var panesClipRects = that._panesClipRects;\r\n        var wideClipRect = panesClipRects.wide[paneIndex];\r\n        series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, that._getPaneBorderVisibility(paneIndex))\r\n    },\r\n    _updatePanesCanvases: function(drawOptions) {\r\n        if (!drawOptions.recreateCanvas) {\r\n            return\r\n        }(0, _utils2.updatePanesCanvases)(this.panes, this._canvas, this._isRotated())\r\n    },\r\n    _normalizePanesHeight: function() {\r\n        (0, _utils2.normalizePanesHeight)(this.panes)\r\n    },\r\n    _renderScaleBreaks: function() {\r\n        this._valueAxes.concat(this._argumentAxes).forEach(function(axis) {\r\n            axis.drawScaleBreaks()\r\n        })\r\n    },\r\n    _getArgFilter: function() {\r\n        return _range_data_calculator.default.getViewPortFilter(this.getArgumentAxis().visualRange() || {})\r\n    },\r\n    _applyPointMarkersAutoHiding: function() {\r\n        var that = this;\r\n        var allSeries = that.series;\r\n        if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\r\n            allSeries.forEach(function(s) {\r\n                return s.autoHidePointMarkers = false\r\n            });\r\n            return\r\n        }\r\n        that.panes.forEach(function(_ref) {\r\n            var borderCoords = _ref.borderCoords,\r\n                name = _ref.name;\r\n            var series = allSeries.filter(function(s) {\r\n                return s.pane === name && s.usePointsToDefineAutoHiding()\r\n            });\r\n            var argAxis = that.getArgumentAxis();\r\n            var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\r\n            fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\r\n            if (markersInfo.series.length) {\r\n                var argVisualRange = argAxis.visualRange();\r\n                var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\r\n                var sortingCallback = argAxisIsDiscrete ? function(p1, p2) {\r\n                    return argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument)\r\n                } : function(p1, p2) {\r\n                    return p1.argument - p2.argument\r\n                };\r\n                var points = [];\r\n                markersInfo.series.forEach(function(s) {\r\n                    return points = points.concat(s.points)\r\n                });\r\n                points.sort(sortingCallback);\r\n                updateMarkersInfo(points, markersInfo.overloadedSeries);\r\n                applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis)\r\n            }\r\n        })\r\n    },\r\n    _renderAxes: function(drawOptions, panesBorderOptions) {\r\n        function calculateTitlesWidth(axes) {\r\n            return axes.map(function(axis) {\r\n                if (!axis.getTitle) {\r\n                    return 0\r\n                }\r\n                var title = axis.getTitle();\r\n                return title ? title.bBox.width : 0\r\n            })\r\n        }\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var scrollBar = that._scrollBar ? [that._scrollBar] : [];\r\n        var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\r\n        var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\r\n        var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        var allElements = allAxes.concat(scrollBar);\r\n        that._normalizePanesHeight();\r\n        that._updatePanesCanvases(drawOptions);\r\n        var panesCanvases = that.panes.reduce(function(canvases, pane) {\r\n            canvases[pane.name] = (0, _extend2.extend)({}, pane.canvas);\r\n            return canvases\r\n        }, {});\r\n        var paneSizes = that.panes.reduce(function(sizes, pane) {\r\n            sizes[pane.name] = {\r\n                height: pane.height,\r\n                unit: pane.unit\r\n            };\r\n            return sizes\r\n        }, {});\r\n        var cleanPanesCanvases = (0, _extend2.extend)(true, {}, panesCanvases);\r\n        that._initCustomPositioningAxes();\r\n        var needCustomAdjustAxes = that._axesBoundaryPositioning();\r\n        if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\r\n            drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            performActionOnAxes(allAxes, \"prepareAnimation\");\r\n            that._renderScaleBreaks();\r\n            horizontalAxes.forEach(function(a) {\r\n                return a.resolveOverlappingForCustomPositioning(verticalAxes)\r\n            });\r\n            verticalAxes.forEach(function(a) {\r\n                return a.resolveOverlappingForCustomPositioning(horizontalAxes)\r\n            });\r\n            return false\r\n        }\r\n        if (needCustomAdjustAxes) {\r\n            allAxes.forEach(function(a) {\r\n                return a.customPositionIsAvailable() && a.shift({\r\n                    top: 0,\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 0\r\n                })\r\n            })\r\n        }\r\n        if (that._scrollBar) {\r\n            that._scrollBar.setPane(that.panes)\r\n        }\r\n        var vAxesMargins = {\r\n            panes: {}\r\n        };\r\n        var hAxesMargins = getHorizontalAxesMargins(horizontalElements, function(axis) {\r\n            return axis.estimateMargins(panesCanvases[axis.pane])\r\n        });\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        var drawAxesAndSetCanvases = function(isHorizontal) {\r\n            var axes = isHorizontal ? horizontalAxes : verticalAxes;\r\n            var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\r\n            drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\r\n            if (isHorizontal) {\r\n                hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins)\r\n            } else {\r\n                vAxesMargins = getVerticalAxesMargins(verticalElements)\r\n            }\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins)\r\n        };\r\n        drawAxesAndSetCanvases(false);\r\n        drawAxesAndSetCanvases(true);\r\n        if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\r\n            drawAxesAndSetCanvases(false)\r\n        }\r\n        var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\r\n        var visibleSeries = that._getVisibleSeries();\r\n        var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\r\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, axisAnimationEnabled(drawOptions, pointsToAnimation));\r\n        horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\r\n        verticalElements.forEach(shiftAxis(\"left\", \"right\"));\r\n        that._renderScaleBreaks();\r\n        that.panes.forEach(function(pane) {\r\n            (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name])\r\n        });\r\n        that._valueAxes.forEach(function(axis) {\r\n            axis.setInitRange()\r\n        });\r\n        verticalAxes.forEach(function(axis, i) {\r\n            if (axis.hasWrap && axis.hasWrap()) {\r\n                var title = axis.getTitle();\r\n                var newTitleWidth = title ? title.bBox.width : 0;\r\n                var offset = newTitleWidth - oldTitlesWidth[i];\r\n                if (\"right\" === axis.getOptions().position) {\r\n                    vAxesMargins.right += offset\r\n                } else {\r\n                    vAxesMargins.left += offset;\r\n                    that.panes.forEach(function(_ref2) {\r\n                        var name = _ref2.name;\r\n                        return vAxesMargins.panes[name].left += offset\r\n                    })\r\n                }\r\n                panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n                performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\r\n                oldTitlesWidth = calculateTitlesWidth(verticalAxes)\r\n            }\r\n        });\r\n        if (verticalAxes.some(function(v) {\r\n                return v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition\r\n            })) {\r\n            performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, false)\r\n        }\r\n        horizontalAxes.forEach(function(a) {\r\n            return a.resolveOverlappingForCustomPositioning(verticalAxes)\r\n        });\r\n        verticalAxes.forEach(function(a) {\r\n            return a.resolveOverlappingForCustomPositioning(horizontalAxes)\r\n        });\r\n        return cleanPanesCanvases\r\n    },\r\n    _getExtraTemplatesItems: function() {\r\n        var that = this;\r\n        var allAxes = (that._argumentAxes || []).concat(that._valueAxes || []);\r\n        var elements = that._collectTemplatesFromItems(allAxes);\r\n        return {\r\n            items: elements.items,\r\n            groups: elements.groups,\r\n            launchRequest: function() {\r\n                allAxes.forEach(function(a) {\r\n                    a.setRenderedState(true)\r\n                })\r\n            },\r\n            doneRequest: function() {\r\n                allAxes.forEach(function(a) {\r\n                    a.setRenderedState(false)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _estimateTickIntervals: function(axes, canvases) {\r\n        return axes.some(function(axis) {\r\n            return axis.estimateTickInterval(canvases[axis.pane])\r\n        })\r\n    },\r\n    checkForMoreSpaceForPanesCanvas: function() {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var panesAreCustomSized = that.panes.filter(function(p) {\r\n            return p.unit\r\n        }).length === that.panes.length;\r\n        var needSpace = false;\r\n        if (panesAreCustomSized) {\r\n            var needHorizontalSpace = 0;\r\n            var needVerticalSpace = 0;\r\n            if (rotated) {\r\n                var argAxisRightMargin = that.getArgumentAxis().getMargins().right;\r\n                var rightPanesIndent = Math.min.apply(Math, that.panes.map(function(p) {\r\n                    return p.canvas.right\r\n                }));\r\n                needHorizontalSpace = that._canvas.right + argAxisRightMargin - rightPanesIndent\r\n            } else {\r\n                var argAxisBottomMargin = that.getArgumentAxis().getMargins().bottom;\r\n                var bottomPanesIndent = Math.min.apply(Math, that.panes.map(function(p) {\r\n                    return p.canvas.bottom\r\n                }));\r\n                needVerticalSpace = that._canvas.bottom + argAxisBottomMargin - bottomPanesIndent\r\n            }\r\n            needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n                width: needHorizontalSpace,\r\n                height: needVerticalSpace\r\n            } : false;\r\n            if (0 !== needVerticalSpace) {\r\n                var realSize = that.getSize();\r\n                var customSize = that.option(\"size\");\r\n                var container = that._$element[0];\r\n                var containerHasStyledHeight = !!container.style.height || (0, _utils2.checkElementHasPropertyFromStyleSheet)(container, \"height\");\r\n                if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\r\n                    that._forceResize(realSize.width, realSize.height + needVerticalSpace);\r\n                    needSpace = false\r\n                }\r\n            }\r\n        } else {\r\n            needSpace = that.layoutManager.needMoreSpaceForPanesCanvas(that._getLayoutTargets(), rotated, function(pane) {\r\n                return {\r\n                    width: rotated && !!pane.unit,\r\n                    height: !rotated && !!pane.unit\r\n                }\r\n            })\r\n        }\r\n        return needSpace\r\n    },\r\n    _forceResize: function(width, height) {\r\n        this._renderer.resize(width, height);\r\n        this._updateSize();\r\n        this._setContentSize();\r\n        this._preserveOriginalCanvas();\r\n        this._updateCanvasClipRect(this._canvas)\r\n    },\r\n    _shrinkAxes: function(sizeShortage, panesCanvases) {\r\n        if (!sizeShortage || !panesCanvases) {\r\n            return\r\n        }\r\n        this._renderer.stopAllAnimations(true);\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var scrollBar = that._scrollBar ? [that._scrollBar] : [];\r\n        var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        if (sizeShortage.width || sizeShortage.height) {\r\n            checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\r\n            checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            var paneSizes = that.panes.reduce(function(sizes, pane) {\r\n                sizes[pane.name] = {\r\n                    height: pane.height,\r\n                    unit: pane.unit\r\n                };\r\n                return sizes\r\n            }, {});\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\r\n            verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\r\n            that.panes.forEach(function(pane) {\r\n                return (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name])\r\n            })\r\n        }\r\n    },\r\n    _isArgumentAxisBeforeScrollBar: function() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        if (that._scrollBar) {\r\n            var _argumentAxis$getOpti;\r\n            var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\r\n            var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\r\n            var scrollBarPosition = that._scrollBar.getOptions().position;\r\n            return argumentAxis.hasCustomPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition\r\n        }\r\n        return false\r\n    },\r\n    _getPanesParameters: function() {\r\n        var that = this;\r\n        var panes = that.panes;\r\n        var i;\r\n        var params = [];\r\n        for (i = 0; i < panes.length; i++) {\r\n            if (that._getPaneBorderVisibility(i)) {\r\n                params.push({\r\n                    coords: panes[i].borderCoords,\r\n                    clipRect: that._panesClipRects.fixed[i]\r\n                })\r\n            }\r\n        }\r\n        return params\r\n    },\r\n    _createCrosshairCursor: function() {\r\n        var that = this;\r\n        var options = that._themeManager.getOptions(\"crosshair\") || {};\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var axes = !that._isRotated() ? [\r\n            [argumentAxis], that._valueAxes\r\n        ] : [that._valueAxes, [argumentAxis]];\r\n        var parameters = {\r\n            canvas: that._getCommonCanvas(),\r\n            panes: that._getPanesParameters(),\r\n            axes: axes\r\n        };\r\n        if (!options || !options.enabled) {\r\n            return\r\n        }\r\n        if (!that._crosshair) {\r\n            that._crosshair = new _crosshair.Crosshair(that._renderer, options, parameters, that._crosshairCursorGroup)\r\n        } else {\r\n            that._crosshair.update(options, parameters)\r\n        }\r\n        that._crosshair.render()\r\n    },\r\n    _getCommonCanvas: function() {\r\n        var i;\r\n        var canvas;\r\n        var commonCanvas;\r\n        var panes = this.panes;\r\n        for (i = 0; i < panes.length; i++) {\r\n            canvas = panes[i].canvas;\r\n            if (!commonCanvas) {\r\n                commonCanvas = (0, _extend2.extend)({}, canvas)\r\n            } else {\r\n                commonCanvas.right = canvas.right;\r\n                commonCanvas.bottom = canvas.bottom\r\n            }\r\n        }\r\n        return commonCanvas\r\n    },\r\n    _createPanesBackground: function() {\r\n        var that = this;\r\n        var defaultBackgroundColor = that._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\r\n        var backgroundColor;\r\n        var renderer = that._renderer;\r\n        var rect;\r\n        var i;\r\n        var rects = [];\r\n        that._panesBackgroundGroup.clear();\r\n        for (i = 0; i < that.panes.length; i++) {\r\n            backgroundColor = that.panes[i].backgroundColor || defaultBackgroundColor;\r\n            if (!backgroundColor || \"none\" === backgroundColor) {\r\n                rects.push(null);\r\n                continue\r\n            }\r\n            rect = renderer.rect(0, 0, 0, 0).attr({\r\n                fill: backgroundColor,\r\n                \"stroke-width\": 0\r\n            }).append(that._panesBackgroundGroup);\r\n            rects.push(rect)\r\n        }\r\n        that.panesBackground = rects\r\n    },\r\n    _fillPanesBackground: function() {\r\n        var that = this;\r\n        var bc;\r\n        (0, _iterator.each)(that.panes, function(i, pane) {\r\n            bc = pane.borderCoords;\r\n            if (null !== that.panesBackground[i]) {\r\n                that.panesBackground[i].attr({\r\n                    x: bc.left,\r\n                    y: bc.top,\r\n                    width: bc.width,\r\n                    height: bc.height\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _calcPaneBorderCoords: function(pane) {\r\n        var canvas = pane.canvas;\r\n        var bc = pane.borderCoords = pane.borderCoords || {};\r\n        bc.left = canvas.left;\r\n        bc.top = canvas.top;\r\n        bc.right = canvas.width - canvas.right;\r\n        bc.bottom = canvas.height - canvas.bottom;\r\n        bc.width = Math.max(bc.right - bc.left, 0);\r\n        bc.height = Math.max(bc.bottom - bc.top, 0)\r\n    },\r\n    _drawPanesBorders: function(panesBorderOptions) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        that._panesBorderGroup.linkRemove().clear();\r\n        (0, _iterator.each)(that.panes, function(i, pane) {\r\n            var borderOptions = panesBorderOptions[pane.name];\r\n            var attr = {\r\n                fill: \"none\",\r\n                stroke: borderOptions.color,\r\n                \"stroke-opacity\": borderOptions.opacity,\r\n                \"stroke-width\": borderOptions.width,\r\n                dashStyle: borderOptions.dashStyle,\r\n                \"stroke-linecap\": \"square\"\r\n            };\r\n            that._calcPaneBorderCoords(pane, rotated);\r\n            if (!borderOptions.visible) {\r\n                return\r\n            }\r\n            var bc = pane.borderCoords;\r\n            var segmentRectParams = (0, _utils.prepareSegmentRectPoints)(bc.left, bc.top, bc.width, bc.height, borderOptions);\r\n            that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup)\r\n        });\r\n        that._panesBorderGroup.linkAppend()\r\n    },\r\n    _createClipRect: function(clipArray, index, left, top, width, height) {\r\n        var that = this;\r\n        var clipRect = clipArray[index];\r\n        if (!clipRect) {\r\n            clipRect = that._renderer.clipRect(left, top, width, height);\r\n            clipArray[index] = clipRect\r\n        } else {\r\n            clipRect.attr({\r\n                x: left,\r\n                y: top,\r\n                width: width,\r\n                height: height\r\n            })\r\n        }\r\n    },\r\n    _createClipRectsForPanes: function() {\r\n        var that = this;\r\n        var canvas = that._canvas;\r\n        (0, _iterator.each)(that.panes, function(i, pane) {\r\n            var needWideClipRect = false;\r\n            var bc = pane.borderCoords;\r\n            var left = bc.left;\r\n            var top = bc.top;\r\n            var width = bc.width;\r\n            var height = bc.height;\r\n            var panesClipRects = that._panesClipRects;\r\n            that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\r\n            that._createClipRect(panesClipRects.base, i, left, top, width, height);\r\n            (0, _iterator.each)(that.series, function(_, series) {\r\n                if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\r\n                    needWideClipRect = true\r\n                }\r\n            });\r\n            if (needWideClipRect) {\r\n                if (that._isRotated()) {\r\n                    top = 0;\r\n                    height = canvas.height\r\n                } else {\r\n                    left = 0;\r\n                    width = canvas.width\r\n                }\r\n                that._createClipRect(panesClipRects.wide, i, left, top, width, height)\r\n            } else {\r\n                panesClipRects.wide[i] = null\r\n            }\r\n        })\r\n    },\r\n    _applyClipRectsForAxes: function() {\r\n        var that = this;\r\n        var axes = that._getAllAxes();\r\n        var customPositionAxes = axes.filter(function(a) {\r\n            return a.hasCustomPosition()\r\n        });\r\n        var chartCanvasClipRectID = that._getCanvasClipRectID();\r\n        for (var i = 0; i < axes.length; i++) {\r\n            var elementsClipRectID = that._getElementsClipRectID(axes[i].pane);\r\n            var canvasClipRectID = customPositionAxes.indexOf(axes[i]) >= 0 ? elementsClipRectID : chartCanvasClipRectID;\r\n            axes[i].applyClipRects(elementsClipRectID, canvasClipRectID)\r\n        }\r\n    },\r\n    _getPaneBorderVisibility: function(paneIndex) {\r\n        var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\r\n        var pane = this.panes[paneIndex] || {};\r\n        var paneBorder = pane.border || {};\r\n        return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible\r\n    },\r\n    _getCanvasForPane: function(paneName) {\r\n        var panes = this.panes;\r\n        var panesNumber = panes.length;\r\n        var i;\r\n        for (i = 0; i < panesNumber; i++) {\r\n            if (panes[i].name === paneName) {\r\n                return panes[i].canvas\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        return (0, _extend2.extend)(this.callBase(), {\r\n            chart: that,\r\n            rotated: that._isRotated(),\r\n            crosshair: that._getCrosshairOptions().enabled ? that._crosshair : null,\r\n            stickyHovering: themeManager.getOptions(\"stickyHovering\")\r\n        })\r\n    },\r\n    _resolveLabelOverlappingStack: function() {\r\n        var that = this;\r\n        var isRotated = that._isRotated();\r\n        var shiftDirection = isRotated ? function(box, length) {\r\n            return {\r\n                x: box.x - length,\r\n                y: box.y\r\n            }\r\n        } : function(box, length) {\r\n            return {\r\n                x: box.x,\r\n                y: box.y - length\r\n            }\r\n        };\r\n        (0, _iterator.each)(that._getStackPoints(), function(_, stacks) {\r\n            (0, _iterator.each)(stacks, function(_, points) {\r\n                _base_chart.overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, shiftDirection, function(a, b) {\r\n                    var coordPosition = isRotated ? 1 : 0;\r\n                    var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\r\n                    var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\r\n                    if (figureCenter1 - figureCenter12 === 0) {\r\n                        return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1)\r\n                    }\r\n                    return 0\r\n                })\r\n            })\r\n        })\r\n    },\r\n    _getStackPoints: function() {\r\n        var stackPoints = {};\r\n        var visibleSeries = this._getVisibleSeries();\r\n        (0, _iterator.each)(visibleSeries, function(_, singleSeries) {\r\n            var points = singleSeries.getPoints();\r\n            var stackName = singleSeries.getStackName() || null;\r\n            (0, _iterator.each)(points, function(_, point) {\r\n                var argument = point.argument;\r\n                if (!stackPoints[argument]) {\r\n                    stackPoints[argument] = {}\r\n                }\r\n                if (!stackPoints[argument][stackName]) {\r\n                    stackPoints[argument][stackName] = []\r\n                }\r\n                stackPoints[argument][stackName].push(point)\r\n            })\r\n        });\r\n        return stackPoints\r\n    },\r\n    _getCrosshairOptions: function() {\r\n        return this._getOption(\"crosshair\")\r\n    },\r\n    zoomArgument: function(min, max) {\r\n        var that = this;\r\n        if (!that._initialized || !(0, _type.isDefined)(min) && !(0, _type.isDefined)(max)) {\r\n            return\r\n        }\r\n        that.getArgumentAxis().visualRange([min, max])\r\n    },\r\n    resetVisualRange: function() {\r\n        var that = this;\r\n        var axes = that._argumentAxes;\r\n        var nonVirtualArgumentAxis = that.getArgumentAxis();\r\n        axes.forEach(function(axis) {\r\n            axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that.callBase()\r\n    },\r\n    getVisibleArgumentBounds: function() {\r\n        var translator = this._argumentAxes[0].getTranslator();\r\n        var range = translator.getBusinessRange();\r\n        var isDiscrete = range.axisType === DISCRETE;\r\n        var categories = range.categories;\r\n        return {\r\n            minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\r\n            maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\r\n        }\r\n    },\r\n    _change_FULL_RENDER: function() {\r\n        this.callBase();\r\n        if (this._changes.has(VISUAL_RANGE)) {\r\n            this._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    _getAxesForScaling: function() {\r\n        return [this.getArgumentAxis()].concat(this._valueAxes)\r\n    },\r\n    _applyVisualRangeByVirtualAxes: function(axis, range) {\r\n        var that = this;\r\n        if (axis.isArgumentAxis) {\r\n            if (axis !== that.getArgumentAxis()) {\r\n                return true\r\n            }\r\n            that._argumentAxes.filter(function(a) {\r\n                return a !== axis\r\n            }).forEach(function(a) {\r\n                return a.visualRange(range, {\r\n                    start: true,\r\n                    end: true\r\n                })\r\n            })\r\n        }\r\n        return false\r\n    },\r\n    _raiseZoomEndHandlers: function() {\r\n        this._argumentAxes.forEach(function(axis) {\r\n            return axis.handleZoomEnd()\r\n        });\r\n        this.callBase()\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend2.extend)(this._optionsByReference, {\r\n            \"argumentAxis.visualRange\": true\r\n        })\r\n    },\r\n    option: function option() {\r\n        var option = this.callBase.apply(this, arguments);\r\n        var valueAxis = this._options.silent(\"valueAxis\");\r\n        if (\"array\" === (0, _type.type)(valueAxis)) {\r\n            for (var i = 0; i < valueAxis.length; i++) {\r\n                var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\r\n                this._optionsByReference[optionPath] = true\r\n            }\r\n        }\r\n        return option\r\n    },\r\n    _notifyVisualRange: function() {\r\n        var that = this;\r\n        var argAxis = that._argumentAxes[0];\r\n        var argumentVisualRange = (0, _utils2.convertVisualRangeObject)(argAxis.visualRange(), !_isArray(that.option(\"argumentAxis.visualRange\")));\r\n        if (!argAxis.skipEventRising || !(0, _utils2.rangesAreEqual)(argumentVisualRange, that.option(\"argumentAxis.visualRange\"))) {\r\n            that.option(\"argumentAxis.visualRange\", argumentVisualRange)\r\n        } else {\r\n            argAxis.skipEventRising = null\r\n        }\r\n        that.callBase()\r\n    }\r\n});\r\ndxChart.addPlugin(_shutter_zoom.default);\r\ndxChart.addPlugin(_zoom_and_pan.default);\r\ndxChart.addPlugin(_annotations.plugins.core);\r\ndxChart.addPlugin(_annotations.plugins.chart);\r\n(0, _component_registrator.default)(\"dxChart\", dxChart);\r\nvar _default = dxChart;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}