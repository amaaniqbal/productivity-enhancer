{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/range_series.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.chart = void 0;\n\nvar _extend2 = require(\"../../core/utils/extend\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _scatter_series = require(\"./scatter_series\");\n\nvar _bar_series = require(\"./bar_series\");\n\nvar _area_series = require(\"./area_series\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _extend = _extend2.extend;\nvar barSeries = _bar_series.chart.bar;\nvar areaSeries = _area_series.chart.area;\nvar chart = {};\nexports.chart = chart;\nvar baseRangeSeries = {\n  areErrorBarsVisible: _common.noop,\n  _createErrorBarGroup: _common.noop,\n  _checkData: function _checkData(data, skippedFields) {\n    var valueFields = this.getValueFields();\n    return _scatter_series.chart._checkData.call(this, data, skippedFields, {\n      minValue: valueFields[0],\n      value: valueFields[1]\n    }) && data.minValue === data.minValue;\n  },\n  getValueRangeInitialValue: _scatter_series.chart.getValueRangeInitialValue,\n  _getPointDataSelector: function _getPointDataSelector(data) {\n    var _this = this;\n\n    var valueFields = this.getValueFields();\n    var val1Field = valueFields[0];\n    var val2Field = valueFields[1];\n    var tagField = this.getTagField();\n    var argumentField = this.getArgumentField();\n    return function (data) {\n      return {\n        tag: data[tagField],\n        minValue: _this._processEmptyValue(data[val1Field]),\n        value: _this._processEmptyValue(data[val2Field]),\n        argument: data[argumentField],\n        data: data\n      };\n    };\n  },\n  _defaultAggregator: \"range\",\n  _aggregators: {\n    range: function range(_ref, series) {\n      var _data$reduce;\n\n      var intervalStart = _ref.intervalStart,\n          data = _ref.data;\n\n      if (!data.length) {\n        return;\n      }\n\n      var valueFields = series.getValueFields();\n      var val1Field = valueFields[0];\n      var val2Field = valueFields[1];\n      var result = data.reduce(function (result, item) {\n        var val1 = item[val1Field];\n        var val2 = item[val2Field];\n\n        if (!(0, _type.isDefined)(val1) || !(0, _type.isDefined)(val2)) {\n          return result;\n        }\n\n        result[val1Field] = Math.min(result[val1Field], Math.min(val1, val2));\n        result[val2Field] = Math.max(result[val2Field], Math.max(val1, val2));\n        return result;\n      }, (_data$reduce = {}, _defineProperty(_data$reduce, val1Field, 1 / 0), _defineProperty(_data$reduce, val2Field, -(1 / 0)), _defineProperty(_data$reduce, series.getArgumentField(), intervalStart), _data$reduce));\n\n      if (!isFinite(result[val1Field]) || !isFinite(result[val2Field])) {\n        if (data.filter(function (i) {\n          return null === i[val1Field] && null === i[val2Field];\n        }).length === data.length) {\n          result[val1Field] = result[val2Field] = null;\n        } else {\n          return;\n        }\n      }\n\n      return result;\n    }\n  },\n  getValueFields: function getValueFields() {\n    return [this._options.rangeValue1Field || \"val1\", this._options.rangeValue2Field || \"val2\"];\n  },\n  getSeriesPairCoord: function getSeriesPairCoord(coord, isArgument) {\n    var oppositeCoord = null;\n    var rotated = this._options.rotated;\n    var isOpposite = !isArgument && !rotated || isArgument && rotated;\n    var coordName = isOpposite ? \"vy\" : \"vx\";\n    var minCoordName = rotated ? \"minX\" : \"minY\";\n    var oppositeCoordName = isOpposite ? \"vx\" : \"vy\";\n    var points = this.getPoints();\n\n    for (var i = 0; i < points.length; i++) {\n      var p = points[i];\n      var tmpCoord = void 0;\n\n      if (isArgument) {\n        tmpCoord = p.getCenterCoord()[coordName[1]] === coord ? p[oppositeCoordName] : void 0;\n      } else {\n        var coords = [Math.min(p[coordName], p[minCoordName]), Math.max(p[coordName], p[minCoordName])];\n        tmpCoord = coord >= coords[0] && coord <= coords[1] ? p[oppositeCoordName] : void 0;\n      }\n\n      if (this._checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\n        oppositeCoord = tmpCoord;\n        break;\n      }\n    }\n\n    return oppositeCoord;\n  }\n};\nchart.rangebar = _extend({}, barSeries, baseRangeSeries);\nchart.rangearea = _extend({}, areaSeries, {\n  _drawPoint: function _drawPoint(options) {\n    var point = options.point;\n\n    if (point.isInVisibleArea()) {\n      point.clearVisibility();\n      point.draw(this._renderer, options.groups);\n\n      this._drawnPoints.push(point);\n\n      if (!point.visibleTopMarker) {\n        point.hideMarker(\"top\");\n      }\n\n      if (!point.visibleBottomMarker) {\n        point.hideMarker(\"bottom\");\n      }\n    } else {\n      point.setInvisibility();\n    }\n  },\n  _prepareSegment: function _prepareSegment(points, rotated) {\n    var processedPoints = this._processSinglePointsAreaSegment(points, rotated);\n\n    var processedMinPointsCoords = (0, _utils.map)(processedPoints, function (pt) {\n      return pt.getCoords(true);\n    });\n    return {\n      line: processedPoints,\n      bottomLine: processedMinPointsCoords,\n      area: (0, _utils.map)(processedPoints, function (pt) {\n        return pt.getCoords();\n      }).concat(processedMinPointsCoords.slice().reverse()),\n      singlePointSegment: processedPoints !== points\n    };\n  },\n  _getDefaultSegment: function _getDefaultSegment(segment) {\n    var defaultSegment = areaSeries._getDefaultSegment.call(this, segment);\n\n    defaultSegment.bottomLine = defaultSegment.line;\n    return defaultSegment;\n  },\n  _removeElement: function _removeElement(element) {\n    areaSeries._removeElement.call(this, element);\n\n    element.bottomLine && element.bottomLine.remove();\n  },\n  _drawElement: function _drawElement(segment, group) {\n    var that = this;\n\n    var drawnElement = areaSeries._drawElement.call(that, segment, group);\n\n    drawnElement.bottomLine = that._bordersGroup && that._createBorderElement(segment.bottomLine, {\n      \"stroke-width\": that._styles.normal.border[\"stroke-width\"]\n    }).append(that._bordersGroup);\n    return drawnElement;\n  },\n  _applyStyle: function _applyStyle(style) {\n    var that = this;\n    var elementsGroup = that._elementsGroup;\n    var bordersGroup = that._bordersGroup;\n    elementsGroup && elementsGroup.smartAttr(style.elements);\n    bordersGroup && bordersGroup.attr(style.border);\n    (that._graphics || []).forEach(function (graphic) {\n      graphic.line && graphic.line.attr({\n        \"stroke-width\": style.border[\"stroke-width\"]\n      });\n      graphic.bottomLine && graphic.bottomLine.attr({\n        \"stroke-width\": style.border[\"stroke-width\"]\n      });\n    });\n  },\n  _updateElement: function _updateElement(element, segment, animate, complete) {\n    var bottomLineParams = {\n      points: segment.bottomLine\n    };\n    var bottomBorderElement = element.bottomLine;\n\n    areaSeries._updateElement.apply(this, arguments);\n\n    if (bottomBorderElement) {\n      animate ? bottomBorderElement.animate(bottomLineParams) : bottomBorderElement.attr(bottomLineParams);\n    }\n  }\n}, baseRangeSeries);","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/range_series.js"],"names":["exports","chart","_extend2","require","_type","_utils","_common","_scatter_series","_bar_series","_area_series","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extend","extend","barSeries","bar","areaSeries","area","baseRangeSeries","areErrorBarsVisible","noop","_createErrorBarGroup","_checkData","data","skippedFields","valueFields","getValueFields","call","minValue","getValueRangeInitialValue","_getPointDataSelector","_this","val1Field","val2Field","tagField","getTagField","argumentField","getArgumentField","tag","_processEmptyValue","argument","_defaultAggregator","_aggregators","range","_ref","series","_data$reduce","intervalStart","length","result","reduce","item","val1","val2","isDefined","Math","min","max","isFinite","filter","i","_options","rangeValue1Field","rangeValue2Field","getSeriesPairCoord","coord","isArgument","oppositeCoord","rotated","isOpposite","coordName","minCoordName","oppositeCoordName","points","getPoints","p","tmpCoord","getCenterCoord","coords","_checkAxisVisibleAreaCoord","rangebar","rangearea","_drawPoint","options","point","isInVisibleArea","clearVisibility","draw","_renderer","groups","_drawnPoints","push","visibleTopMarker","hideMarker","visibleBottomMarker","setInvisibility","_prepareSegment","processedPoints","_processSinglePointsAreaSegment","processedMinPointsCoords","map","pt","getCoords","line","bottomLine","concat","slice","reverse","singlePointSegment","_getDefaultSegment","segment","defaultSegment","_removeElement","element","remove","_drawElement","group","that","drawnElement","_bordersGroup","_createBorderElement","_styles","normal","border","append","_applyStyle","style","elementsGroup","_elementsGroup","bordersGroup","smartAttr","elements","attr","_graphics","forEach","graphic","_updateElement","animate","complete","bottomLineParams","bottomBorderElement","apply","arguments"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/range_series.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.chart = void 0;\r\nvar _extend2 = require(\"../../core/utils/extend\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _scatter_series = require(\"./scatter_series\");\r\nvar _bar_series = require(\"./bar_series\");\r\nvar _area_series = require(\"./area_series\");\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar _extend = _extend2.extend;\r\nvar barSeries = _bar_series.chart.bar;\r\nvar areaSeries = _area_series.chart.area;\r\nvar chart = {};\r\nexports.chart = chart;\r\nvar baseRangeSeries = {\r\n    areErrorBarsVisible: _common.noop,\r\n    _createErrorBarGroup: _common.noop,\r\n    _checkData: function(data, skippedFields) {\r\n        var valueFields = this.getValueFields();\r\n        return _scatter_series.chart._checkData.call(this, data, skippedFields, {\r\n            minValue: valueFields[0],\r\n            value: valueFields[1]\r\n        }) && data.minValue === data.minValue\r\n    },\r\n    getValueRangeInitialValue: _scatter_series.chart.getValueRangeInitialValue,\r\n    _getPointDataSelector: function(data) {\r\n        var _this = this;\r\n        var valueFields = this.getValueFields();\r\n        var val1Field = valueFields[0];\r\n        var val2Field = valueFields[1];\r\n        var tagField = this.getTagField();\r\n        var argumentField = this.getArgumentField();\r\n        return function(data) {\r\n            return {\r\n                tag: data[tagField],\r\n                minValue: _this._processEmptyValue(data[val1Field]),\r\n                value: _this._processEmptyValue(data[val2Field]),\r\n                argument: data[argumentField],\r\n                data: data\r\n            }\r\n        }\r\n    },\r\n    _defaultAggregator: \"range\",\r\n    _aggregators: {\r\n        range: function(_ref, series) {\r\n            var _data$reduce;\r\n            var intervalStart = _ref.intervalStart,\r\n                data = _ref.data;\r\n            if (!data.length) {\r\n                return\r\n            }\r\n            var valueFields = series.getValueFields();\r\n            var val1Field = valueFields[0];\r\n            var val2Field = valueFields[1];\r\n            var result = data.reduce(function(result, item) {\r\n                var val1 = item[val1Field];\r\n                var val2 = item[val2Field];\r\n                if (!(0, _type.isDefined)(val1) || !(0, _type.isDefined)(val2)) {\r\n                    return result\r\n                }\r\n                result[val1Field] = Math.min(result[val1Field], Math.min(val1, val2));\r\n                result[val2Field] = Math.max(result[val2Field], Math.max(val1, val2));\r\n                return result\r\n            }, (_data$reduce = {}, _defineProperty(_data$reduce, val1Field, 1 / 0), _defineProperty(_data$reduce, val2Field, -(1 / 0)), _defineProperty(_data$reduce, series.getArgumentField(), intervalStart), _data$reduce));\r\n            if (!isFinite(result[val1Field]) || !isFinite(result[val2Field])) {\r\n                if (data.filter(function(i) {\r\n                        return null === i[val1Field] && null === i[val2Field]\r\n                    }).length === data.length) {\r\n                    result[val1Field] = result[val2Field] = null\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    },\r\n    getValueFields: function() {\r\n        return [this._options.rangeValue1Field || \"val1\", this._options.rangeValue2Field || \"val2\"]\r\n    },\r\n    getSeriesPairCoord: function(coord, isArgument) {\r\n        var oppositeCoord = null;\r\n        var rotated = this._options.rotated;\r\n        var isOpposite = !isArgument && !rotated || isArgument && rotated;\r\n        var coordName = isOpposite ? \"vy\" : \"vx\";\r\n        var minCoordName = rotated ? \"minX\" : \"minY\";\r\n        var oppositeCoordName = isOpposite ? \"vx\" : \"vy\";\r\n        var points = this.getPoints();\r\n        for (var i = 0; i < points.length; i++) {\r\n            var p = points[i];\r\n            var tmpCoord = void 0;\r\n            if (isArgument) {\r\n                tmpCoord = p.getCenterCoord()[coordName[1]] === coord ? p[oppositeCoordName] : void 0\r\n            } else {\r\n                var coords = [Math.min(p[coordName], p[minCoordName]), Math.max(p[coordName], p[minCoordName])];\r\n                tmpCoord = coord >= coords[0] && coord <= coords[1] ? p[oppositeCoordName] : void 0\r\n            }\r\n            if (this._checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\r\n                oppositeCoord = tmpCoord;\r\n                break\r\n            }\r\n        }\r\n        return oppositeCoord\r\n    }\r\n};\r\nchart.rangebar = _extend({}, barSeries, baseRangeSeries);\r\nchart.rangearea = _extend({}, areaSeries, {\r\n    _drawPoint: function(options) {\r\n        var point = options.point;\r\n        if (point.isInVisibleArea()) {\r\n            point.clearVisibility();\r\n            point.draw(this._renderer, options.groups);\r\n            this._drawnPoints.push(point);\r\n            if (!point.visibleTopMarker) {\r\n                point.hideMarker(\"top\")\r\n            }\r\n            if (!point.visibleBottomMarker) {\r\n                point.hideMarker(\"bottom\")\r\n            }\r\n        } else {\r\n            point.setInvisibility()\r\n        }\r\n    },\r\n    _prepareSegment: function(points, rotated) {\r\n        var processedPoints = this._processSinglePointsAreaSegment(points, rotated);\r\n        var processedMinPointsCoords = (0, _utils.map)(processedPoints, function(pt) {\r\n            return pt.getCoords(true)\r\n        });\r\n        return {\r\n            line: processedPoints,\r\n            bottomLine: processedMinPointsCoords,\r\n            area: (0, _utils.map)(processedPoints, function(pt) {\r\n                return pt.getCoords()\r\n            }).concat(processedMinPointsCoords.slice().reverse()),\r\n            singlePointSegment: processedPoints !== points\r\n        }\r\n    },\r\n    _getDefaultSegment: function(segment) {\r\n        var defaultSegment = areaSeries._getDefaultSegment.call(this, segment);\r\n        defaultSegment.bottomLine = defaultSegment.line;\r\n        return defaultSegment\r\n    },\r\n    _removeElement: function(element) {\r\n        areaSeries._removeElement.call(this, element);\r\n        element.bottomLine && element.bottomLine.remove()\r\n    },\r\n    _drawElement: function(segment, group) {\r\n        var that = this;\r\n        var drawnElement = areaSeries._drawElement.call(that, segment, group);\r\n        drawnElement.bottomLine = that._bordersGroup && that._createBorderElement(segment.bottomLine, {\r\n            \"stroke-width\": that._styles.normal.border[\"stroke-width\"]\r\n        }).append(that._bordersGroup);\r\n        return drawnElement\r\n    },\r\n    _applyStyle: function(style) {\r\n        var that = this;\r\n        var elementsGroup = that._elementsGroup;\r\n        var bordersGroup = that._bordersGroup;\r\n        elementsGroup && elementsGroup.smartAttr(style.elements);\r\n        bordersGroup && bordersGroup.attr(style.border);\r\n        (that._graphics || []).forEach(function(graphic) {\r\n            graphic.line && graphic.line.attr({\r\n                \"stroke-width\": style.border[\"stroke-width\"]\r\n            });\r\n            graphic.bottomLine && graphic.bottomLine.attr({\r\n                \"stroke-width\": style.border[\"stroke-width\"]\r\n            })\r\n        })\r\n    },\r\n    _updateElement: function(element, segment, animate, complete) {\r\n        var bottomLineParams = {\r\n            points: segment.bottomLine\r\n        };\r\n        var bottomBorderElement = element.bottomLine;\r\n        areaSeries._updateElement.apply(this, arguments);\r\n        if (bottomBorderElement) {\r\n            animate ? bottomBorderElement.animate(bottomLineParams) : bottomBorderElement.attr(bottomLineParams)\r\n        }\r\n    }\r\n}, baseRangeSeries);\r\n"]},"metadata":{},"sourceType":"script"}