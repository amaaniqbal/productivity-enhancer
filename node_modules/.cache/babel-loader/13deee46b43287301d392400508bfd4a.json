{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/polar_axes.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.linearSpider = exports.linear = exports.circularSpider = exports.circular = void 0;\n\nvar _utils = require(\"../core/utils\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _axes_constants = _interopRequireDefault(require(\"./axes_constants\"));\n\nvar _xy_axes = _interopRequireDefault(require(\"./xy_axes\"));\n\nvar _tick = require(\"./tick\");\n\nvar _base_axis = require(\"./base_axis\");\n\nvar _common = require(\"../../core/utils/common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar PI = Math.PI,\n    abs = Math.abs,\n    atan = Math.atan,\n    round = Math.round;\nvar _min = Math.min;\nvar _max = Math.max;\nvar xyAxesLinear = _xy_axes.default.linear;\nvar HALF_PI_ANGLE = 90;\n\nfunction getPolarQuarter(angle) {\n  var quarter;\n  angle = (0, _utils.normalizeAngle)(angle);\n\n  if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\n    quarter = 1;\n  } else {\n    if (angle >= 45 && angle < 135) {\n      quarter = 2;\n    } else {\n      if (angle >= 135 && angle < 225) {\n        quarter = 3;\n      } else {\n        if (angle >= 225 && angle < 315) {\n          quarter = 4;\n        }\n      }\n    }\n  }\n\n  return quarter;\n}\n\nvar circularAxes = {\n  _calculateValueMargins: function _calculateValueMargins(ticks) {\n    var _this$_getViewportRan = this._getViewportRange(),\n        minVisible = _this$_getViewportRan.minVisible,\n        maxVisible = _this$_getViewportRan.maxVisible;\n\n    if (ticks && ticks.length > 1) {\n      minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\n      maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value;\n    }\n\n    return {\n      minValue: minVisible,\n      maxValue: maxVisible\n    };\n  },\n  applyMargins: function applyMargins() {\n    var margins = this._calculateValueMargins(this._majorTicks);\n\n    var br = this._translator.getBusinessRange();\n\n    br.addRange({\n      minVisible: margins.minValue,\n      maxVisible: margins.maxValue,\n      interval: this._calculateRangeInterval(br.interval)\n    });\n\n    this._translator.updateBusinessRange(br);\n  },\n  _getTranslatorOptions: function _getTranslatorOptions() {\n    return {\n      isHorizontal: true,\n      conversionValue: true,\n      addSpiderCategory: this._getSpiderCategoryOption(),\n      stick: this._getStick()\n    };\n  },\n  getCenter: function getCenter() {\n    return this._center;\n  },\n  getRadius: function getRadius() {\n    return this._radius;\n  },\n  getAngles: function getAngles() {\n    var options = this._options;\n    return [options.startAngle, options.endAngle];\n  },\n  _updateRadius: function _updateRadius(canvas) {\n    var rad = _min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\n    this._radius = rad < 0 ? 0 : rad;\n  },\n  _updateCenter: function _updateCenter(canvas) {\n    this._center = {\n      x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\n      y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\n    };\n  },\n  _processCanvas: function _processCanvas(canvas) {\n    this._updateRadius(canvas);\n\n    this._updateCenter(canvas);\n\n    return {\n      left: 0,\n      right: 0,\n      width: this._getScreenDelta()\n    };\n  },\n  _createAxisElement: function _createAxisElement() {\n    return this._renderer.circle();\n  },\n  _updateAxisElementPosition: function _updateAxisElementPosition() {\n    var center = this.getCenter();\n\n    this._axisElement.attr({\n      cx: center.x,\n      cy: center.y,\n      r: this.getRadius()\n    });\n  },\n  _boundaryTicksVisibility: {\n    min: true\n  },\n  _getSpiderCategoryOption: function _getSpiderCategoryOption() {\n    return this._options.firstPointOnStartAngle;\n  },\n  _validateOptions: function _validateOptions(options) {\n    var that = this;\n    var originValue = options.originValue;\n    var wholeRange = options.wholeRange = {};\n    var period = options.period;\n\n    if ((0, _type.isDefined)(originValue)) {\n      originValue = that.validateUnit(originValue);\n    }\n\n    if (period > 0 && options.argumentType === _axes_constants.default.numeric) {\n      originValue = originValue || 0;\n      wholeRange.endValue = originValue + period;\n      that._viewport = (0, _utils.getVizRangeObject)([originValue, wholeRange.endValue]);\n    }\n\n    if ((0, _type.isDefined)(originValue)) {\n      wholeRange.startValue = originValue;\n    }\n  },\n  getMargins: function getMargins() {\n    var tickOptions = this._options.tick;\n\n    var tickOuterLength = _max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\n\n    var radius = this.getRadius();\n    var _this$_center = this._center,\n        x = _this$_center.x,\n        y = _this$_center.y;\n\n    var labelBoxes = this._majorTicks.map(function (t) {\n      return t.label && t.label.getBBox();\n    }).filter(function (b) {\n      return b;\n    });\n\n    var canvas = (0, _extend.extend)({}, this._canvas, {\n      left: x - radius,\n      top: y - radius,\n      right: this._canvas.width - (x + radius),\n      bottom: this._canvas.height - (y + radius)\n    });\n    var margins = (0, _base_axis.calculateCanvasMargins)(labelBoxes, canvas);\n    Object.keys(margins).forEach(function (k) {\n      return margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k];\n    });\n    return margins;\n  },\n  updateSize: function updateSize() {\n    var that = this;\n\n    _base_axis.Axis.prototype.updateSize.apply(that, arguments);\n\n    (0, _base_axis.measureLabels)(that._majorTicks);\n\n    that._adjustLabelsCoord(0, 0, true);\n\n    this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(function (t) {\n      return t.labelBBox;\n    }));\n  },\n  _setVisualRange: _common.noop,\n  applyVisualRangeSetter: _common.noop,\n  _getStick: function _getStick() {\n    return this._options.firstPointOnStartAngle || this._options.type !== _axes_constants.default.discrete;\n  },\n  _getTranslatedCoord: function _getTranslatedCoord(value, offset) {\n    return this._translator.translate(value, offset) - HALF_PI_ANGLE;\n  },\n  _getCanvasStartEnd: function _getCanvasStartEnd() {\n    return {\n      start: 0 - HALF_PI_ANGLE,\n      end: 360 - HALF_PI_ANGLE\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromAngle, toAngle) {\n    var center = this.getCenter();\n    var angle = this.getAngles()[0];\n    var r = this.getRadius();\n    return {\n      x: center.x,\n      y: center.y,\n      innerRadius: 0,\n      outerRadius: r,\n      startAngle: -toAngle - angle,\n      endAngle: -fromAngle - angle\n    };\n  },\n  _createStrip: function _createStrip(coords) {\n    return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle);\n  },\n  _getStripLabelCoords: function _getStripLabelCoords(from, to) {\n    var that = this;\n\n    var coords = that._getStripGraphicAttributes(from, to);\n\n    var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\n    var cosSin = (0, _utils.getCosAndSin)(angle);\n    var halfRad = that.getRadius() / 2;\n    var center = that.getCenter();\n    var x = round(center.x + halfRad * cosSin.cos);\n    var y = round(center.y - halfRad * cosSin.sin);\n    return {\n      x: x,\n      y: y,\n      align: _axes_constants.default.center\n    };\n  },\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    var center = this.getCenter();\n    var r = this.getRadius();\n    return {\n      points: [center.x, center.y, center.x + r, center.y]\n    };\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr);\n  },\n  _rotateConstantLine: function _rotateConstantLine(line, value) {\n    var _this$getCenter = this.getCenter(),\n        x = _this$getCenter.x,\n        y = _this$getCenter.y;\n\n    line.rotate(value + this.getAngles()[0], x, y);\n  },\n  _getConstantLineLabelsCoords: function _getConstantLineLabelsCoords(value) {\n    var that = this;\n    var cosSin = (0, _utils.getCosAndSin)(-value - that.getAngles()[0]);\n    var halfRad = that.getRadius() / 2;\n    var center = that.getCenter();\n    var x = round(center.x + halfRad * cosSin.cos);\n    var y = round(center.y - halfRad * cosSin.sin);\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _checkAlignmentConstantLineLabels: _common.noop,\n  _adjustDivisionFactor: function _adjustDivisionFactor(val) {\n    return 180 * val / (this.getRadius() * PI);\n  },\n  _getScreenDelta: function _getScreenDelta() {\n    var angles = this.getAngles();\n    return abs(angles[0] - angles[1]);\n  },\n  _getTickMarkPoints: function _getTickMarkPoints(coords, length, _ref) {\n    var _ref$shift = _ref.shift,\n        shift = void 0 === _ref$shift ? 0 : _ref$shift;\n    var center = this.getCenter();\n    var corrections = {\n      inside: -1,\n      center: -.5,\n      outside: 0\n    };\n    var radiusWithTicks = this.getRadius() + length * corrections[this._options.tickOrientation || \"center\"];\n    return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y];\n  },\n  _getLabelAdjustedCoord: function _getLabelAdjustedCoord(tick, _offset, _maxWidth, checkCanvas) {\n    var that = this;\n    var labelCoords = tick.labelCoords;\n    var labelY = labelCoords.y;\n    var labelAngle = labelCoords.angle;\n    var cosSin = (0, _utils.getCosAndSin)(labelAngle);\n    var cos = cosSin.cos;\n    var sin = cosSin.sin;\n    var box = tick.labelBBox;\n    var halfWidth = box.width / 2;\n    var halfHeight = box.height / 2;\n    var indentFromAxis = that._options.label.indentFromAxis || 0;\n    var x = labelCoords.x + indentFromAxis * cos;\n    var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\n    var shiftX = 0;\n    var shiftY = 0;\n\n    switch (getPolarQuarter(labelAngle)) {\n      case 1:\n        shiftX = halfWidth;\n        shiftY = halfHeight * sin;\n        break;\n\n      case 2:\n        shiftX = halfWidth * cos;\n        shiftY = halfHeight;\n        break;\n\n      case 3:\n        shiftX = -halfWidth;\n        shiftY = halfHeight * sin;\n        break;\n\n      case 4:\n        shiftX = halfWidth * cos;\n        shiftY = -halfHeight;\n    }\n\n    if (checkCanvas) {\n      var canvas = that._canvas;\n      var boxShiftX = x - labelCoords.x + shiftX;\n      var boxShiftY = y - labelCoords.y + shiftY;\n\n      if (box.x + boxShiftX < canvas.originalLeft) {\n        shiftX -= box.x + boxShiftX - canvas.originalLeft;\n      }\n\n      if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\n        shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight);\n      }\n\n      if (box.y + boxShiftY < canvas.originalTop) {\n        shiftY -= box.y + boxShiftY - canvas.originalTop;\n      }\n\n      if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\n        shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom);\n      }\n    }\n\n    return {\n      x: x + shiftX,\n      y: y + shiftY\n    };\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      var center = that.getCenter();\n      return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y);\n    };\n  },\n  _getGridPoints: function _getGridPoints() {\n    var r = this.getRadius();\n    var center = this.getCenter();\n    return {\n      points: [center.x, center.y, center.x + r, center.y]\n    };\n  },\n  _getTranslatedValue: function _getTranslatedValue(value, offset) {\n    var startAngle = this.getAngles()[0];\n\n    var angle = this._translator.translate(value, -offset);\n\n    var coords = (0, _utils.convertPolarToXY)(this.getCenter(), startAngle, angle, this.getRadius());\n    return {\n      x: coords.x,\n      y: coords.y,\n      angle: this.getTranslatedAngle(angle)\n    };\n  },\n  _getAdjustedStripLabelCoords: function _getAdjustedStripLabelCoords(strip) {\n    var box = strip.labelBBox;\n    return {\n      translateY: strip.label.attr(\"y\") - box.y - box.height / 2\n    };\n  },\n  coordsIn: function coordsIn(x, y) {\n    return (0, _utils.convertXYToPolar)(this.getCenter(), x, y).r > this.getRadius();\n  },\n  _rotateTick: function _rotateTick(element, coords) {\n    var center = this.getCenter();\n    element.rotate(coords.angle, center.x, center.y);\n  },\n  _validateOverlappingMode: function _validateOverlappingMode(mode) {\n    return _axes_constants.default.validateOverlappingMode(mode);\n  },\n  _validateDisplayMode: function _validateDisplayMode() {\n    return \"standard\";\n  },\n  _getStep: function _getStep(boxes) {\n    var that = this;\n    var radius = that.getRadius() + (that._options.label.indentFromAxis || 0);\n    var maxLabelBox = boxes.reduce(function (prevValue, box) {\n      var curValue = prevValue;\n\n      if (prevValue.width < box.width) {\n        curValue.width = box.width;\n      }\n\n      if (prevValue.height < box.height) {\n        curValue.height = box.height;\n      }\n\n      return curValue;\n    }, {\n      width: 0,\n      height: 0\n    });\n    var angle1 = abs(2 * atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / PI);\n    var angle2 = abs(2 * atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / PI);\n    return _axes_constants.default.getTicksCountInRange(that._majorTicks, \"angle\", _max(angle1, angle2));\n  },\n  _checkBoundedLabelsOverlapping: function _checkBoundedLabelsOverlapping(majorTicks, boxes, mode) {\n    var labelOpt = this._options.label;\n    mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\n\n    if (\"hide\" !== mode) {\n      return;\n    }\n\n    var lastVisibleLabelIndex = majorTicks.reduce(function (lastVisibleLabelIndex, tick, index) {\n      return tick.label ? index : lastVisibleLabelIndex;\n    }, null);\n\n    if (!lastVisibleLabelIndex) {\n      return;\n    }\n\n    if (_axes_constants.default.areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, _axes_constants.default.center)) {\n      \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].label.remove() : majorTicks[lastVisibleLabelIndex].label.remove();\n    }\n  },\n  shift: function shift(margins) {\n    this._axisGroup.attr({\n      translateX: margins.right,\n      translateY: margins.bottom\n    });\n  },\n  getTranslatedAngle: function getTranslatedAngle(angle) {\n    var startAngle = this.getAngles()[0];\n    return angle + startAngle - HALF_PI_ANGLE;\n  }\n};\nvar circular = circularAxes;\nexports.circular = circular;\nvar circularSpider = (0, _extend.extend)({}, circularAxes, {\n  _createAxisElement: function _createAxisElement() {\n    return this._renderer.path([], \"area\");\n  },\n  _updateAxisElementPosition: function _updateAxisElementPosition() {\n    this._axisElement.attr({\n      points: (0, _utils.map)(this.getSpiderTicks(), function (tick) {\n        return {\n          x: tick.coords.x,\n          y: tick.coords.y\n        };\n      })\n    });\n  },\n  _getStick: function _getStick() {\n    return true;\n  },\n  _getSpiderCategoryOption: function _getSpiderCategoryOption() {\n    return true;\n  },\n  getSpiderTicks: function getSpiderTicks() {\n    var that = this;\n    var ticks = that.getFullTicks();\n    that._spiderTicks = ticks.map((0, _tick.tick)(that, that.renderer, {}, {}, that._getSkippedCategory(ticks), true));\n\n    that._spiderTicks.forEach(function (tick) {\n      tick.initCoords();\n    });\n\n    return that._spiderTicks;\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromAngle, toAngle) {\n    var center = this.getCenter();\n    var spiderTicks = this.getSpiderTicks();\n    var firstTick;\n    var lastTick;\n    var nextTick;\n    var tick;\n    var points = [];\n    var i = 0;\n    var len = spiderTicks.length;\n\n    while (i < len) {\n      tick = spiderTicks[i].coords;\n\n      if (tick.angle >= fromAngle && tick.angle <= toAngle) {\n        if (!firstTick) {\n          firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\n          points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2);\n        }\n\n        points.push(tick.x, tick.y);\n        nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\n        lastTick = {\n          x: (tick.x + nextTick.x) / 2,\n          y: (tick.y + nextTick.y) / 2\n        };\n      }\n\n      i++;\n    }\n\n    points.push(lastTick.x, lastTick.y);\n    points.push(center.x, center.y);\n    return {\n      points: points\n    };\n  },\n  _createStrip: function _createStrip(_ref2) {\n    var points = _ref2.points;\n    return this._renderer.path(points, \"area\");\n  },\n  _getTranslatedCoord: function _getTranslatedCoord(value, offset) {\n    return this._translator.translate(value, offset) - HALF_PI_ANGLE;\n  },\n  _setTickOffset: function _setTickOffset() {\n    this._tickOffset = false;\n  }\n});\nexports.circularSpider = circularSpider;\nvar linear = {\n  _resetMargins: function _resetMargins() {\n    this._reinitTranslator(this._getViewportRange());\n  },\n  _getStick: xyAxesLinear._getStick,\n  _getSpiderCategoryOption: _common.noop,\n  _getTranslatorOptions: function _getTranslatorOptions() {\n    return {\n      isHorizontal: true,\n      stick: this._getStick()\n    };\n  },\n  getRadius: circularAxes.getRadius,\n  getCenter: circularAxes.getCenter,\n  getAngles: circularAxes.getAngles,\n  _updateRadius: circularAxes._updateRadius,\n  _updateCenter: circularAxes._updateCenter,\n  _processCanvas: function _processCanvas(canvas) {\n    this._updateRadius(canvas);\n\n    this._updateCenter(canvas);\n\n    return {\n      left: 0,\n      right: 0,\n      startPadding: canvas.startPadding,\n      endPadding: canvas.endPadding,\n      width: this.getRadius()\n    };\n  },\n  _createAxisElement: xyAxesLinear._createAxisElement,\n  _updateAxisElementPosition: function _updateAxisElementPosition() {\n    var centerCoord = this.getCenter();\n\n    this._axisElement.attr({\n      points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\n    }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y);\n  },\n  _getScreenDelta: function _getScreenDelta() {\n    return this.getRadius();\n  },\n  _getTickMarkPoints: function _getTickMarkPoints(coords, length) {\n    return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y];\n  },\n  _getLabelAdjustedCoord: function _getLabelAdjustedCoord(tick) {\n    var that = this;\n    var labelCoords = tick.labelCoords;\n    var labelY = labelCoords.y;\n    var cosSin = (0, _utils.getCosAndSin)(labelCoords.angle);\n    var indentFromAxis = that._options.label.indentFromAxis || 0;\n    var box = tick.labelBBox;\n    var x = labelCoords.x - abs(indentFromAxis * cosSin.sin) + abs(box.width / 2 * cosSin.cos) - box.width / 2;\n    var y = labelY + (labelY - box.y) - abs(box.height / 2 * cosSin.sin) + abs(indentFromAxis * cosSin.cos);\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      var grid = that._getGridPoints(tick.coords);\n\n      return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp();\n    };\n  },\n  _getGridPoints: function _getGridPoints(coords) {\n    var pos = this.getCenter();\n    var radius = (0, _utils.getDistance)(pos.x, pos.y, coords.x, coords.y);\n\n    if (radius > this.getRadius()) {\n      return {\n        cx: null,\n        cy: null,\n        r: null\n      };\n    }\n\n    return {\n      cx: pos.x,\n      cy: pos.y,\n      r: radius\n    };\n  },\n  _getTranslatedValue: function _getTranslatedValue(value, offset) {\n    var startAngle = this.getAngles()[0];\n    var xy = (0, _utils.convertPolarToXY)(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\n    return {\n      x: xy.x,\n      y: xy.y,\n      angle: startAngle - HALF_PI_ANGLE\n    };\n  },\n  _getTranslatedCoord: function _getTranslatedCoord(value, offset) {\n    return this._translator.translate(value, offset);\n  },\n  _getCanvasStartEnd: function _getCanvasStartEnd() {\n    var invert = this.getTranslator().getBusinessRange().invert;\n    var coords = [0, this.getRadius()];\n    invert && coords.reverse();\n    return {\n      start: coords[0],\n      end: coords[1]\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromPoint, toPoint) {\n    var center = this.getCenter();\n    return {\n      x: center.x,\n      y: center.y,\n      innerRadius: fromPoint,\n      outerRadius: toPoint\n    };\n  },\n  _createStrip: function _createStrip(attrs) {\n    return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360);\n  },\n  _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\n  _getStripLabelCoords: function _getStripLabelCoords(from, to) {\n    var that = this;\n    var labelPos = from + (to - from) / 2;\n    var center = that.getCenter();\n    var y = round(center.y - labelPos);\n    return {\n      x: center.x,\n      y: y,\n      align: _axes_constants.default.center\n    };\n  },\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    var center = this.getCenter();\n    return {\n      cx: center.x,\n      cy: center.y,\n      r: value\n    };\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    var attrs = this._getConstantLineGraphicAttributes(value);\n\n    return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp();\n  },\n  _getConstantLineLabelsCoords: function _getConstantLineLabelsCoords(value) {\n    var that = this;\n    var center = that.getCenter();\n    var y = round(center.y - value);\n    return {\n      x: center.x,\n      y: y\n    };\n  },\n  _checkAlignmentConstantLineLabels: _common.noop,\n  _rotateTick: function _rotateTick(element, coords, isGridLine) {\n    !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y);\n  },\n  _validateOverlappingMode: circularAxes._validateOverlappingMode,\n  _validateDisplayMode: circularAxes._validateDisplayMode,\n  _getStep: function _getStep(boxes) {\n    var quarter = getPolarQuarter(this.getAngles()[0]);\n    var spacing = this._options.label.minSpacing;\n    var func = 2 === quarter || 4 === quarter ? function (box) {\n      return box.width + spacing;\n    } : function (box) {\n      return box.height;\n    };\n    var maxLabelLength = boxes.reduce(function (prevValue, box) {\n      return _max(prevValue, func(box));\n    }, 0);\n    return _axes_constants.default.getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength);\n  }\n};\nexports.linear = linear;\nvar linearSpider = (0, _extend.extend)({}, linear, {\n  _createPathElement: function _createPathElement(points, attr) {\n    return this._renderer.path(points, \"area\").attr(attr).sharp();\n  },\n  setSpiderTicks: function setSpiderTicks(ticks) {\n    this._spiderTicks = ticks;\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle);\n    };\n  },\n  _getGridPoints: function _getGridPoints(coords) {\n    var pos = this.getCenter();\n    var radius = (0, _utils.getDistance)(pos.x, pos.y, coords.x, coords.y);\n    return this._getGridPointsByRadius(radius);\n  },\n  _getGridPointsByRadius: function _getGridPointsByRadius(radius) {\n    var pos = this.getCenter();\n\n    if (radius > this.getRadius()) {\n      return {\n        points: null\n      };\n    }\n\n    return {\n      points: (0, _utils.map)(this._spiderTicks, function (tick) {\n        var cosSin = (0, _utils.getCosAndSin)(tick.coords.angle);\n        return {\n          x: round(pos.x + radius * cosSin.cos),\n          y: round(pos.y + radius * cosSin.sin)\n        };\n      })\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromPoint, toPoint) {\n    var innerPoints = this._getGridPointsByRadius(toPoint).points;\n\n    var outerPoints = this._getGridPointsByRadius(fromPoint).points;\n\n    return {\n      points: [outerPoints, innerPoints.reverse()]\n    };\n  },\n  _createStrip: circularSpider._createStrip,\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    return this._getGridPointsByRadius(value);\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr);\n  }\n});\nexports.linearSpider = linearSpider;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/axes/polar_axes.js"],"names":["exports","linearSpider","linear","circularSpider","circular","_utils","require","_type","_extend","_axes_constants","_interopRequireDefault","_xy_axes","_tick","_base_axis","_common","obj","__esModule","PI","Math","abs","atan","round","_min","min","_max","max","xyAxesLinear","default","HALF_PI_ANGLE","getPolarQuarter","angle","quarter","normalizeAngle","circularAxes","_calculateValueMargins","ticks","_this$_getViewportRan","_getViewportRange","minVisible","maxVisible","length","value","minValue","maxValue","applyMargins","margins","_majorTicks","br","_translator","getBusinessRange","addRange","interval","_calculateRangeInterval","updateBusinessRange","_getTranslatorOptions","isHorizontal","conversionValue","addSpiderCategory","_getSpiderCategoryOption","stick","_getStick","getCenter","_center","getRadius","_radius","getAngles","options","_options","startAngle","endAngle","_updateRadius","canvas","rad","width","left","right","height","top","bottom","_updateCenter","x","y","_processCanvas","_getScreenDelta","_createAxisElement","_renderer","circle","_updateAxisElementPosition","center","_axisElement","attr","cx","cy","r","_boundaryTicksVisibility","firstPointOnStartAngle","_validateOptions","that","originValue","wholeRange","period","isDefined","validateUnit","argumentType","numeric","endValue","_viewport","getVizRangeObject","startValue","getMargins","tickOptions","tick","tickOuterLength","visible","shift","radius","_this$_center","labelBoxes","map","t","label","getBBox","filter","b","extend","_canvas","calculateCanvasMargins","Object","keys","forEach","k","updateSize","Axis","prototype","apply","arguments","measureLabels","_adjustLabelsCoord","_checkBoundedLabelsOverlapping","labelBBox","_setVisualRange","noop","applyVisualRangeSetter","type","discrete","_getTranslatedCoord","offset","translate","_getCanvasStartEnd","start","end","_getStripGraphicAttributes","fromAngle","toAngle","innerRadius","outerRadius","_createStrip","coords","arc","_getStripLabelCoords","from","to","cosSin","getCosAndSin","halfRad","cos","sin","align","_getConstantLineGraphicAttributes","points","_createConstantLine","_createPathElement","_rotateConstantLine","line","_this$getCenter","rotate","_getConstantLineLabelsCoords","_checkAlignmentConstantLineLabels","_adjustDivisionFactor","val","angles","_getTickMarkPoints","_ref","_ref$shift","corrections","inside","outside","radiusWithTicks","tickOrientation","_getLabelAdjustedCoord","_offset","_maxWidth","checkCanvas","labelCoords","labelY","labelAngle","box","halfWidth","halfHeight","indentFromAxis","shiftX","shiftY","boxShiftX","boxShiftY","originalLeft","originalRight","originalTop","originalBottom","_getGridLineDrawer","gridStyle","_getGridPoints","_getTranslatedValue","convertPolarToXY","getTranslatedAngle","_getAdjustedStripLabelCoords","strip","translateY","coordsIn","convertXYToPolar","_rotateTick","element","_validateOverlappingMode","mode","validateOverlappingMode","_validateDisplayMode","_getStep","boxes","maxLabelBox","reduce","prevValue","curValue","angle1","angle2","getTicksCountInRange","majorTicks","labelOpt","overlappingBehavior","lastVisibleLabelIndex","index","areLabelsOverlap","minSpacing","hideFirstOrLast","remove","_axisGroup","translateX","path","getSpiderTicks","getFullTicks","_spiderTicks","renderer","_getSkippedCategory","initCoords","spiderTicks","firstTick","lastTick","nextTick","i","len","push","_ref2","_setTickOffset","_tickOffset","_resetMargins","_reinitTranslator","startPadding","endPadding","centerCoord","grid","sharp","pos","getDistance","xy","invert","getTranslator","reverse","fromPoint","toPoint","attrs","labelPos","isGridLine","spacing","func","maxLabelLength","setSpiderTicks","_getGridPointsByRadius","innerPoints","outerPoints"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/polar_axes.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.linearSpider = exports.linear = exports.circularSpider = exports.circular = void 0;\r\nvar _utils = require(\"../core/utils\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _axes_constants = _interopRequireDefault(require(\"./axes_constants\"));\r\nvar _xy_axes = _interopRequireDefault(require(\"./xy_axes\"));\r\nvar _tick = require(\"./tick\");\r\nvar _base_axis = require(\"./base_axis\");\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PI = Math.PI,\r\n    abs = Math.abs,\r\n    atan = Math.atan,\r\n    round = Math.round;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar xyAxesLinear = _xy_axes.default.linear;\r\nvar HALF_PI_ANGLE = 90;\r\n\r\nfunction getPolarQuarter(angle) {\r\n    var quarter;\r\n    angle = (0, _utils.normalizeAngle)(angle);\r\n    if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\r\n        quarter = 1\r\n    } else {\r\n        if (angle >= 45 && angle < 135) {\r\n            quarter = 2\r\n        } else {\r\n            if (angle >= 135 && angle < 225) {\r\n                quarter = 3\r\n            } else {\r\n                if (angle >= 225 && angle < 315) {\r\n                    quarter = 4\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return quarter\r\n}\r\nvar circularAxes = {\r\n    _calculateValueMargins: function(ticks) {\r\n        var _this$_getViewportRan = this._getViewportRange(),\r\n            minVisible = _this$_getViewportRan.minVisible,\r\n            maxVisible = _this$_getViewportRan.maxVisible;\r\n        if (ticks && ticks.length > 1) {\r\n            minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\r\n            maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value\r\n        }\r\n        return {\r\n            minValue: minVisible,\r\n            maxValue: maxVisible\r\n        }\r\n    },\r\n    applyMargins: function() {\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var br = this._translator.getBusinessRange();\r\n        br.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            interval: this._calculateRangeInterval(br.interval)\r\n        });\r\n        this._translator.updateBusinessRange(br)\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            conversionValue: true,\r\n            addSpiderCategory: this._getSpiderCategoryOption(),\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getCenter: function() {\r\n        return this._center\r\n    },\r\n    getRadius: function() {\r\n        return this._radius\r\n    },\r\n    getAngles: function() {\r\n        var options = this._options;\r\n        return [options.startAngle, options.endAngle]\r\n    },\r\n    _updateRadius: function(canvas) {\r\n        var rad = _min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\r\n        this._radius = rad < 0 ? 0 : rad\r\n    },\r\n    _updateCenter: function(canvas) {\r\n        this._center = {\r\n            x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\r\n            y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\r\n        }\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            width: this._getScreenDelta()\r\n        }\r\n    },\r\n    _createAxisElement: function() {\r\n        return this._renderer.circle()\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        var center = this.getCenter();\r\n        this._axisElement.attr({\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: this.getRadius()\r\n        })\r\n    },\r\n    _boundaryTicksVisibility: {\r\n        min: true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return this._options.firstPointOnStartAngle\r\n    },\r\n    _validateOptions: function(options) {\r\n        var that = this;\r\n        var originValue = options.originValue;\r\n        var wholeRange = options.wholeRange = {};\r\n        var period = options.period;\r\n        if ((0, _type.isDefined)(originValue)) {\r\n            originValue = that.validateUnit(originValue)\r\n        }\r\n        if (period > 0 && options.argumentType === _axes_constants.default.numeric) {\r\n            originValue = originValue || 0;\r\n            wholeRange.endValue = originValue + period;\r\n            that._viewport = (0, _utils.getVizRangeObject)([originValue, wholeRange.endValue])\r\n        }\r\n        if ((0, _type.isDefined)(originValue)) {\r\n            wholeRange.startValue = originValue\r\n        }\r\n    },\r\n    getMargins: function() {\r\n        var tickOptions = this._options.tick;\r\n        var tickOuterLength = _max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\r\n        var radius = this.getRadius();\r\n        var _this$_center = this._center,\r\n            x = _this$_center.x,\r\n            y = _this$_center.y;\r\n        var labelBoxes = this._majorTicks.map(function(t) {\r\n            return t.label && t.label.getBBox()\r\n        }).filter(function(b) {\r\n            return b\r\n        });\r\n        var canvas = (0, _extend.extend)({}, this._canvas, {\r\n            left: x - radius,\r\n            top: y - radius,\r\n            right: this._canvas.width - (x + radius),\r\n            bottom: this._canvas.height - (y + radius)\r\n        });\r\n        var margins = (0, _base_axis.calculateCanvasMargins)(labelBoxes, canvas);\r\n        Object.keys(margins).forEach(function(k) {\r\n            return margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k]\r\n        });\r\n        return margins\r\n    },\r\n    updateSize: function() {\r\n        var that = this;\r\n        _base_axis.Axis.prototype.updateSize.apply(that, arguments);\r\n        (0, _base_axis.measureLabels)(that._majorTicks);\r\n        that._adjustLabelsCoord(0, 0, true);\r\n        this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(function(t) {\r\n            return t.labelBBox\r\n        }))\r\n    },\r\n    _setVisualRange: _common.noop,\r\n    applyVisualRangeSetter: _common.noop,\r\n    _getStick: function() {\r\n        return this._options.firstPointOnStartAngle || this._options.type !== _axes_constants.default.discrete\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        return {\r\n            start: 0 - HALF_PI_ANGLE,\r\n            end: 360 - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var angle = this.getAngles()[0];\r\n        var r = this.getRadius();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: 0,\r\n            outerRadius: r,\r\n            startAngle: -toAngle - angle,\r\n            endAngle: -fromAngle - angle\r\n        }\r\n    },\r\n    _createStrip: function(coords) {\r\n        return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle)\r\n    },\r\n    _getStripLabelCoords: function(from, to) {\r\n        var that = this;\r\n        var coords = that._getStripGraphicAttributes(from, to);\r\n        var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\r\n        var cosSin = (0, _utils.getCosAndSin)(angle);\r\n        var halfRad = that.getRadius() / 2;\r\n        var center = that.getCenter();\r\n        var x = round(center.x + halfRad * cosSin.cos);\r\n        var y = round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            align: _axes_constants.default.center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        var r = this.getRadius();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    },\r\n    _rotateConstantLine: function(line, value) {\r\n        var _this$getCenter = this.getCenter(),\r\n            x = _this$getCenter.x,\r\n            y = _this$getCenter.y;\r\n        line.rotate(value + this.getAngles()[0], x, y)\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var that = this;\r\n        var cosSin = (0, _utils.getCosAndSin)(-value - that.getAngles()[0]);\r\n        var halfRad = that.getRadius() / 2;\r\n        var center = that.getCenter();\r\n        var x = round(center.x + halfRad * cosSin.cos);\r\n        var y = round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _common.noop,\r\n    _adjustDivisionFactor: function(val) {\r\n        return 180 * val / (this.getRadius() * PI)\r\n    },\r\n    _getScreenDelta: function() {\r\n        var angles = this.getAngles();\r\n        return abs(angles[0] - angles[1])\r\n    },\r\n    _getTickMarkPoints: function(coords, length, _ref) {\r\n        var _ref$shift = _ref.shift,\r\n            shift = void 0 === _ref$shift ? 0 : _ref$shift;\r\n        var center = this.getCenter();\r\n        var corrections = {\r\n            inside: -1,\r\n            center: -.5,\r\n            outside: 0\r\n        };\r\n        var radiusWithTicks = this.getRadius() + length * corrections[this._options.tickOrientation || \"center\"];\r\n        return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, _offset, _maxWidth, checkCanvas) {\r\n        var that = this;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var labelAngle = labelCoords.angle;\r\n        var cosSin = (0, _utils.getCosAndSin)(labelAngle);\r\n        var cos = cosSin.cos;\r\n        var sin = cosSin.sin;\r\n        var box = tick.labelBBox;\r\n        var halfWidth = box.width / 2;\r\n        var halfHeight = box.height / 2;\r\n        var indentFromAxis = that._options.label.indentFromAxis || 0;\r\n        var x = labelCoords.x + indentFromAxis * cos;\r\n        var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\r\n        var shiftX = 0;\r\n        var shiftY = 0;\r\n        switch (getPolarQuarter(labelAngle)) {\r\n            case 1:\r\n                shiftX = halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 2:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = halfHeight;\r\n                break;\r\n            case 3:\r\n                shiftX = -halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 4:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = -halfHeight\r\n        }\r\n        if (checkCanvas) {\r\n            var canvas = that._canvas;\r\n            var boxShiftX = x - labelCoords.x + shiftX;\r\n            var boxShiftY = y - labelCoords.y + shiftY;\r\n            if (box.x + boxShiftX < canvas.originalLeft) {\r\n                shiftX -= box.x + boxShiftX - canvas.originalLeft\r\n            }\r\n            if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\r\n                shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight)\r\n            }\r\n            if (box.y + boxShiftY < canvas.originalTop) {\r\n                shiftY -= box.y + boxShiftY - canvas.originalTop\r\n            }\r\n            if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\r\n                shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom)\r\n            }\r\n        }\r\n        return {\r\n            x: x + shiftX,\r\n            y: y + shiftY\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var center = that.getCenter();\r\n            return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y)\r\n        }\r\n    },\r\n    _getGridPoints: function() {\r\n        var r = this.getRadius();\r\n        var center = this.getCenter();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var angle = this._translator.translate(value, -offset);\r\n        var coords = (0, _utils.convertPolarToXY)(this.getCenter(), startAngle, angle, this.getRadius());\r\n        return {\r\n            x: coords.x,\r\n            y: coords.y,\r\n            angle: this.getTranslatedAngle(angle)\r\n        }\r\n    },\r\n    _getAdjustedStripLabelCoords: function(strip) {\r\n        var box = strip.labelBBox;\r\n        return {\r\n            translateY: strip.label.attr(\"y\") - box.y - box.height / 2\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        return (0, _utils.convertXYToPolar)(this.getCenter(), x, y).r > this.getRadius()\r\n    },\r\n    _rotateTick: function(element, coords) {\r\n        var center = this.getCenter();\r\n        element.rotate(coords.angle, center.x, center.y)\r\n    },\r\n    _validateOverlappingMode: function(mode) {\r\n        return _axes_constants.default.validateOverlappingMode(mode)\r\n    },\r\n    _validateDisplayMode: function() {\r\n        return \"standard\"\r\n    },\r\n    _getStep: function(boxes) {\r\n        var that = this;\r\n        var radius = that.getRadius() + (that._options.label.indentFromAxis || 0);\r\n        var maxLabelBox = boxes.reduce(function(prevValue, box) {\r\n            var curValue = prevValue;\r\n            if (prevValue.width < box.width) {\r\n                curValue.width = box.width\r\n            }\r\n            if (prevValue.height < box.height) {\r\n                curValue.height = box.height\r\n            }\r\n            return curValue\r\n        }, {\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        var angle1 = abs(2 * atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / PI);\r\n        var angle2 = abs(2 * atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / PI);\r\n        return _axes_constants.default.getTicksCountInRange(that._majorTicks, \"angle\", _max(angle1, angle2))\r\n    },\r\n    _checkBoundedLabelsOverlapping: function(majorTicks, boxes, mode) {\r\n        var labelOpt = this._options.label;\r\n        mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\r\n        if (\"hide\" !== mode) {\r\n            return\r\n        }\r\n        var lastVisibleLabelIndex = majorTicks.reduce(function(lastVisibleLabelIndex, tick, index) {\r\n            return tick.label ? index : lastVisibleLabelIndex\r\n        }, null);\r\n        if (!lastVisibleLabelIndex) {\r\n            return\r\n        }\r\n        if (_axes_constants.default.areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, _axes_constants.default.center)) {\r\n            \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].label.remove() : majorTicks[lastVisibleLabelIndex].label.remove()\r\n        }\r\n    },\r\n    shift: function(margins) {\r\n        this._axisGroup.attr({\r\n            translateX: margins.right,\r\n            translateY: margins.bottom\r\n        })\r\n    },\r\n    getTranslatedAngle: function(angle) {\r\n        var startAngle = this.getAngles()[0];\r\n        return angle + startAngle - HALF_PI_ANGLE\r\n    }\r\n};\r\nvar circular = circularAxes;\r\nexports.circular = circular;\r\nvar circularSpider = (0, _extend.extend)({}, circularAxes, {\r\n    _createAxisElement: function() {\r\n        return this._renderer.path([], \"area\")\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        this._axisElement.attr({\r\n            points: (0, _utils.map)(this.getSpiderTicks(), function(tick) {\r\n                return {\r\n                    x: tick.coords.x,\r\n                    y: tick.coords.y\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _getStick: function() {\r\n        return true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return true\r\n    },\r\n    getSpiderTicks: function() {\r\n        var that = this;\r\n        var ticks = that.getFullTicks();\r\n        that._spiderTicks = ticks.map((0, _tick.tick)(that, that.renderer, {}, {}, that._getSkippedCategory(ticks), true));\r\n        that._spiderTicks.forEach(function(tick) {\r\n            tick.initCoords()\r\n        });\r\n        return that._spiderTicks\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var spiderTicks = this.getSpiderTicks();\r\n        var firstTick;\r\n        var lastTick;\r\n        var nextTick;\r\n        var tick;\r\n        var points = [];\r\n        var i = 0;\r\n        var len = spiderTicks.length;\r\n        while (i < len) {\r\n            tick = spiderTicks[i].coords;\r\n            if (tick.angle >= fromAngle && tick.angle <= toAngle) {\r\n                if (!firstTick) {\r\n                    firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\r\n                    points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2)\r\n                }\r\n                points.push(tick.x, tick.y);\r\n                nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\r\n                lastTick = {\r\n                    x: (tick.x + nextTick.x) / 2,\r\n                    y: (tick.y + nextTick.y) / 2\r\n                }\r\n            }\r\n            i++\r\n        }\r\n        points.push(lastTick.x, lastTick.y);\r\n        points.push(center.x, center.y);\r\n        return {\r\n            points: points\r\n        }\r\n    },\r\n    _createStrip: function(_ref2) {\r\n        var points = _ref2.points;\r\n        return this._renderer.path(points, \"area\")\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _setTickOffset: function() {\r\n        this._tickOffset = false\r\n    }\r\n});\r\nexports.circularSpider = circularSpider;\r\nvar linear = {\r\n    _resetMargins: function() {\r\n        this._reinitTranslator(this._getViewportRange())\r\n    },\r\n    _getStick: xyAxesLinear._getStick,\r\n    _getSpiderCategoryOption: _common.noop,\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getRadius: circularAxes.getRadius,\r\n    getCenter: circularAxes.getCenter,\r\n    getAngles: circularAxes.getAngles,\r\n    _updateRadius: circularAxes._updateRadius,\r\n    _updateCenter: circularAxes._updateCenter,\r\n    _processCanvas: function(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            startPadding: canvas.startPadding,\r\n            endPadding: canvas.endPadding,\r\n            width: this.getRadius()\r\n        }\r\n    },\r\n    _createAxisElement: xyAxesLinear._createAxisElement,\r\n    _updateAxisElementPosition: function() {\r\n        var centerCoord = this.getCenter();\r\n        this._axisElement.attr({\r\n            points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\r\n        }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y)\r\n    },\r\n    _getScreenDelta: function() {\r\n        return this.getRadius()\r\n    },\r\n    _getTickMarkPoints: function(coords, length) {\r\n        return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick) {\r\n        var that = this;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var cosSin = (0, _utils.getCosAndSin)(labelCoords.angle);\r\n        var indentFromAxis = that._options.label.indentFromAxis || 0;\r\n        var box = tick.labelBBox;\r\n        var x = labelCoords.x - abs(indentFromAxis * cosSin.sin) + abs(box.width / 2 * cosSin.cos) - box.width / 2;\r\n        var y = labelY + (labelY - box.y) - abs(box.height / 2 * cosSin.sin) + abs(indentFromAxis * cosSin.cos);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp()\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = (0, _utils.getDistance)(pos.x, pos.y, coords.x, coords.y);\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                cx: null,\r\n                cy: null,\r\n                r: null\r\n            }\r\n        }\r\n        return {\r\n            cx: pos.x,\r\n            cy: pos.y,\r\n            r: radius\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var xy = (0, _utils.convertPolarToXY)(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\r\n        return {\r\n            x: xy.x,\r\n            y: xy.y,\r\n            angle: startAngle - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset)\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        var invert = this.getTranslator().getBusinessRange().invert;\r\n        var coords = [0, this.getRadius()];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var center = this.getCenter();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: fromPoint,\r\n            outerRadius: toPoint\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360)\r\n    },\r\n    _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\r\n    _getStripLabelCoords: function(from, to) {\r\n        var that = this;\r\n        var labelPos = from + (to - from) / 2;\r\n        var center = that.getCenter();\r\n        var y = round(center.y - labelPos);\r\n        return {\r\n            x: center.x,\r\n            y: y,\r\n            align: _axes_constants.default.center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        return {\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: value\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        var attrs = this._getConstantLineGraphicAttributes(value);\r\n        return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp()\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var that = this;\r\n        var center = that.getCenter();\r\n        var y = round(center.y - value);\r\n        return {\r\n            x: center.x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _common.noop,\r\n    _rotateTick: function(element, coords, isGridLine) {\r\n        !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y)\r\n    },\r\n    _validateOverlappingMode: circularAxes._validateOverlappingMode,\r\n    _validateDisplayMode: circularAxes._validateDisplayMode,\r\n    _getStep: function(boxes) {\r\n        var quarter = getPolarQuarter(this.getAngles()[0]);\r\n        var spacing = this._options.label.minSpacing;\r\n        var func = 2 === quarter || 4 === quarter ? function(box) {\r\n            return box.width + spacing\r\n        } : function(box) {\r\n            return box.height\r\n        };\r\n        var maxLabelLength = boxes.reduce(function(prevValue, box) {\r\n            return _max(prevValue, func(box))\r\n        }, 0);\r\n        return _axes_constants.default.getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength)\r\n    }\r\n};\r\nexports.linear = linear;\r\nvar linearSpider = (0, _extend.extend)({}, linear, {\r\n    _createPathElement: function(points, attr) {\r\n        return this._renderer.path(points, \"area\").attr(attr).sharp()\r\n    },\r\n    setSpiderTicks: function(ticks) {\r\n        this._spiderTicks = ticks\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle)\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = (0, _utils.getDistance)(pos.x, pos.y, coords.x, coords.y);\r\n        return this._getGridPointsByRadius(radius)\r\n    },\r\n    _getGridPointsByRadius: function(radius) {\r\n        var pos = this.getCenter();\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: (0, _utils.map)(this._spiderTicks, function(tick) {\r\n                var cosSin = (0, _utils.getCosAndSin)(tick.coords.angle);\r\n                return {\r\n                    x: round(pos.x + radius * cosSin.cos),\r\n                    y: round(pos.y + radius * cosSin.sin)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var innerPoints = this._getGridPointsByRadius(toPoint).points;\r\n        var outerPoints = this._getGridPointsByRadius(fromPoint).points;\r\n        return {\r\n            points: [outerPoints, innerPoints.reverse()]\r\n        }\r\n    },\r\n    _createStrip: circularSpider._createStrip,\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        return this._getGridPointsByRadius(value)\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    }\r\n});\r\nexports.linearSpider = linearSpider;\r\n"]},"metadata":{},"sourceType":"script"}