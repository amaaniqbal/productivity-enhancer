{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/inflector.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.captionize = exports.titleize = exports.humanize = exports.camelize = exports.underscore = exports.dasherize = void 0;\n\nvar _iterator = require(\"./iterator\");\n\nvar _normalize = function _normalize(text) {\n  if (void 0 === text || null === text) {\n    return \"\";\n  }\n\n  return String(text);\n};\n\nvar _upperCaseFirst = function _upperCaseFirst(text) {\n  return _normalize(text).charAt(0).toUpperCase() + text.substr(1);\n};\n\nvar _chop = function _chop(text) {\n  return _normalize(text).replace(/([a-z\\d])([A-Z])/g, \"$1 $2\").split(/[\\s_-]+/);\n};\n\nvar dasherize = function dasherize(text) {\n  return (0, _iterator.map)(_chop(text), function (p) {\n    return p.toLowerCase();\n  }).join(\"-\");\n};\n\nexports.dasherize = dasherize;\n\nvar underscore = function underscore(text) {\n  return dasherize(text).replace(/-/g, \"_\");\n};\n\nexports.underscore = underscore;\n\nvar camelize = function camelize(text, upperFirst) {\n  return (0, _iterator.map)(_chop(text), function (p, i) {\n    p = p.toLowerCase();\n\n    if (upperFirst || i > 0) {\n      p = _upperCaseFirst(p);\n    }\n\n    return p;\n  }).join(\"\");\n};\n\nexports.camelize = camelize;\n\nvar humanize = function humanize(text) {\n  return _upperCaseFirst(dasherize(text).replace(/-/g, \" \"));\n};\n\nexports.humanize = humanize;\n\nvar titleize = function titleize(text) {\n  return (0, _iterator.map)(_chop(text), function (p) {\n    return _upperCaseFirst(p.toLowerCase());\n  }).join(\" \");\n};\n\nexports.titleize = titleize;\nvar DIGIT_CHARS = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nvar captionize = function captionize(name) {\n  var captionList = [];\n  var i;\n  var char;\n  var isPrevCharNewWord = false;\n  var isNewWord = false;\n\n  for (i = 0; i < name.length; i++) {\n    char = name.charAt(i);\n    isNewWord = char === char.toUpperCase() && \"-\" !== char && \")\" !== char && \"/\" !== char || char in DIGIT_CHARS;\n\n    if (\"_\" === char || \".\" === char) {\n      char = \" \";\n      isNewWord = true;\n    } else {\n      if (0 === i) {\n        char = char.toUpperCase();\n        isNewWord = true;\n      } else {\n        if (!isPrevCharNewWord && isNewWord) {\n          if (captionList.length > 0) {\n            captionList.push(\" \");\n          }\n        }\n      }\n    }\n\n    captionList.push(char);\n    isPrevCharNewWord = isNewWord;\n  }\n\n  return captionList.join(\"\");\n};\n\nexports.captionize = captionize;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/core/utils/inflector.js"],"names":["exports","captionize","titleize","humanize","camelize","underscore","dasherize","_iterator","require","_normalize","text","String","_upperCaseFirst","charAt","toUpperCase","substr","_chop","replace","split","map","p","toLowerCase","join","upperFirst","i","DIGIT_CHARS","name","captionList","char","isPrevCharNewWord","isNewWord","length","push"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/inflector.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.captionize = exports.titleize = exports.humanize = exports.camelize = exports.underscore = exports.dasherize = void 0;\r\nvar _iterator = require(\"./iterator\");\r\nvar _normalize = function(text) {\r\n    if (void 0 === text || null === text) {\r\n        return \"\"\r\n    }\r\n    return String(text)\r\n};\r\nvar _upperCaseFirst = function(text) {\r\n    return _normalize(text).charAt(0).toUpperCase() + text.substr(1)\r\n};\r\nvar _chop = function(text) {\r\n    return _normalize(text).replace(/([a-z\\d])([A-Z])/g, \"$1 $2\").split(/[\\s_-]+/)\r\n};\r\nvar dasherize = function(text) {\r\n    return (0, _iterator.map)(_chop(text), function(p) {\r\n        return p.toLowerCase()\r\n    }).join(\"-\")\r\n};\r\nexports.dasherize = dasherize;\r\nvar underscore = function(text) {\r\n    return dasherize(text).replace(/-/g, \"_\")\r\n};\r\nexports.underscore = underscore;\r\nvar camelize = function(text, upperFirst) {\r\n    return (0, _iterator.map)(_chop(text), function(p, i) {\r\n        p = p.toLowerCase();\r\n        if (upperFirst || i > 0) {\r\n            p = _upperCaseFirst(p)\r\n        }\r\n        return p\r\n    }).join(\"\")\r\n};\r\nexports.camelize = camelize;\r\nvar humanize = function(text) {\r\n    return _upperCaseFirst(dasherize(text).replace(/-/g, \" \"))\r\n};\r\nexports.humanize = humanize;\r\nvar titleize = function(text) {\r\n    return (0, _iterator.map)(_chop(text), function(p) {\r\n        return _upperCaseFirst(p.toLowerCase())\r\n    }).join(\" \")\r\n};\r\nexports.titleize = titleize;\r\nvar DIGIT_CHARS = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\nvar captionize = function(name) {\r\n    var captionList = [];\r\n    var i;\r\n    var char;\r\n    var isPrevCharNewWord = false;\r\n    var isNewWord = false;\r\n    for (i = 0; i < name.length; i++) {\r\n        char = name.charAt(i);\r\n        isNewWord = char === char.toUpperCase() && \"-\" !== char && \")\" !== char && \"/\" !== char || char in DIGIT_CHARS;\r\n        if (\"_\" === char || \".\" === char) {\r\n            char = \" \";\r\n            isNewWord = true\r\n        } else {\r\n            if (0 === i) {\r\n                char = char.toUpperCase();\r\n                isNewWord = true\r\n            } else {\r\n                if (!isPrevCharNewWord && isNewWord) {\r\n                    if (captionList.length > 0) {\r\n                        captionList.push(\" \")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        captionList.push(char);\r\n        isPrevCharNewWord = isNewWord\r\n    }\r\n    return captionList.join(\"\")\r\n};\r\nexports.captionize = captionize;\r\n"]},"metadata":{},"sourceType":"script"}