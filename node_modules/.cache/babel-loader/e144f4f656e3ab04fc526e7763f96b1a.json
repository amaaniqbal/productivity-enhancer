{"ast":null,"code":"/**\r\n * DevExtreme (localization/ldml/date.formatter.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.getFormatter = void 0;\n\nfunction leftPad(text, length) {\n  while (text.length < length) {\n    text = \"0\" + text;\n  }\n\n  return text;\n}\n\nvar FORMAT_TYPES = {\n  3: \"abbreviated\",\n  4: \"wide\",\n  5: \"narrow\"\n};\nvar LDML_FORMATTERS = {\n  y: function y(date, count, useUtc) {\n    var year = date[useUtc ? \"getUTCFullYear\" : \"getFullYear\"]();\n\n    if (2 === count) {\n      year %= 100;\n    }\n\n    return leftPad(year.toString(), count);\n  },\n  M: function M(date, count, useUtc, dateParts) {\n    var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\n    var formatType = FORMAT_TYPES[count];\n\n    if (formatType) {\n      return dateParts.getMonthNames(formatType, \"format\")[month];\n    }\n\n    return leftPad((month + 1).toString(), Math.min(count, 2));\n  },\n  L: function L(date, count, useUtc, dateParts) {\n    var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\n    var formatType = FORMAT_TYPES[count];\n\n    if (formatType) {\n      return dateParts.getMonthNames(formatType, \"standalone\")[month];\n    }\n\n    return leftPad((month + 1).toString(), Math.min(count, 2));\n  },\n  Q: function Q(date, count, useUtc, dateParts) {\n    var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\n    var quarter = Math.floor(month / 3);\n    var formatType = FORMAT_TYPES[count];\n\n    if (formatType) {\n      return dateParts.getQuarterNames(formatType)[quarter];\n    }\n\n    return leftPad((quarter + 1).toString(), Math.min(count, 2));\n  },\n  E: function E(date, count, useUtc, dateParts) {\n    var day = date[useUtc ? \"getUTCDay\" : \"getDay\"]();\n    var formatType = FORMAT_TYPES[count < 3 ? 3 : count];\n    return dateParts.getDayNames(formatType)[day];\n  },\n  a: function a(date, count, useUtc, dateParts) {\n    var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"]();\n    var period = hours < 12 ? 0 : 1;\n    var formatType = FORMAT_TYPES[count];\n    return dateParts.getPeriodNames(formatType)[period];\n  },\n  d: function d(date, count, useUtc) {\n    return leftPad(date[useUtc ? \"getUTCDate\" : \"getDate\"]().toString(), Math.min(count, 2));\n  },\n  H: function H(date, count, useUtc) {\n    return leftPad(date[useUtc ? \"getUTCHours\" : \"getHours\"]().toString(), Math.min(count, 2));\n  },\n  h: function h(date, count, useUtc) {\n    var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"]();\n    return leftPad((hours % 12 || 12).toString(), Math.min(count, 2));\n  },\n  m: function m(date, count, useUtc) {\n    return leftPad(date[useUtc ? \"getUTCMinutes\" : \"getMinutes\"]().toString(), Math.min(count, 2));\n  },\n  s: function s(date, count, useUtc) {\n    return leftPad(date[useUtc ? \"getUTCSeconds\" : \"getSeconds\"]().toString(), Math.min(count, 2));\n  },\n  S: function S(date, count, useUtc) {\n    return leftPad(date[useUtc ? \"getUTCMilliseconds\" : \"getMilliseconds\"]().toString(), 3).substr(0, count);\n  },\n  x: function x(date, count, useUtc) {\n    var timezoneOffset = useUtc ? 0 : date.getTimezoneOffset();\n    var signPart = timezoneOffset > 0 ? \"-\" : \"+\";\n    var timezoneOffsetAbs = Math.abs(timezoneOffset);\n    var hours = Math.floor(timezoneOffsetAbs / 60);\n    var minutes = timezoneOffsetAbs % 60;\n    var hoursPart = leftPad(hours.toString(), 2);\n    var minutesPart = leftPad(minutes.toString(), 2);\n    return signPart + hoursPart + (count >= 3 ? \":\" : \"\") + (count > 1 || minutes ? minutesPart : \"\");\n  },\n  X: function X(date, count, useUtc) {\n    if (useUtc || !date.getTimezoneOffset()) {\n      return \"Z\";\n    }\n\n    return LDML_FORMATTERS.x(date, count, useUtc);\n  },\n  Z: function Z(date, count, useUtc) {\n    return LDML_FORMATTERS.X(date, count >= 5 ? 3 : 2, useUtc);\n  }\n};\n\nvar getFormatter = function getFormatter(format, dateParts) {\n  return function (date) {\n    var charIndex;\n    var formatter;\n    var char;\n    var charCount = 0;\n    var separator = \"'\";\n    var isEscaping = false;\n    var isCurrentCharEqualsNext;\n    var result = \"\";\n\n    if (!date) {\n      return null;\n    }\n\n    if (!format) {\n      return date;\n    }\n\n    var useUtc = \"Z\" === format[format.length - 1] || \"'Z'\" === format.slice(-3);\n\n    for (charIndex = 0; charIndex < format.length; charIndex++) {\n      char = format[charIndex];\n      formatter = LDML_FORMATTERS[char];\n      isCurrentCharEqualsNext = char === format[charIndex + 1];\n      charCount++;\n\n      if (!isCurrentCharEqualsNext) {\n        if (formatter && !isEscaping) {\n          result += formatter(date, charCount, useUtc, dateParts);\n        }\n\n        charCount = 0;\n      }\n\n      if (char === separator && !isCurrentCharEqualsNext) {\n        isEscaping = !isEscaping;\n      } else {\n        if (isEscaping || !formatter) {\n          result += char;\n        }\n      }\n\n      if (char === separator && isCurrentCharEqualsNext) {\n        charIndex++;\n      }\n    }\n\n    return result;\n  };\n};\n\nexports.getFormatter = getFormatter;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/localization/ldml/date.formatter.js"],"names":["exports","getFormatter","leftPad","text","length","FORMAT_TYPES","LDML_FORMATTERS","y","date","count","useUtc","year","toString","M","dateParts","month","formatType","getMonthNames","Math","min","L","Q","quarter","floor","getQuarterNames","E","day","getDayNames","a","hours","period","getPeriodNames","d","H","h","m","s","S","substr","x","timezoneOffset","getTimezoneOffset","signPart","timezoneOffsetAbs","abs","minutes","hoursPart","minutesPart","X","Z","format","charIndex","formatter","char","charCount","separator","isEscaping","isCurrentCharEqualsNext","result","slice"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (localization/ldml/date.formatter.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getFormatter = void 0;\r\n\r\nfunction leftPad(text, length) {\r\n    while (text.length < length) {\r\n        text = \"0\" + text\r\n    }\r\n    return text\r\n}\r\nvar FORMAT_TYPES = {\r\n    3: \"abbreviated\",\r\n    4: \"wide\",\r\n    5: \"narrow\"\r\n};\r\nvar LDML_FORMATTERS = {\r\n    y: function(date, count, useUtc) {\r\n        var year = date[useUtc ? \"getUTCFullYear\" : \"getFullYear\"]();\r\n        if (2 === count) {\r\n            year %= 100\r\n        }\r\n        return leftPad(year.toString(), count)\r\n    },\r\n    M: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getMonthNames(formatType, \"format\")[month]\r\n        }\r\n        return leftPad((month + 1).toString(), Math.min(count, 2))\r\n    },\r\n    L: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getMonthNames(formatType, \"standalone\")[month]\r\n        }\r\n        return leftPad((month + 1).toString(), Math.min(count, 2))\r\n    },\r\n    Q: function(date, count, useUtc, dateParts) {\r\n        var month = date[useUtc ? \"getUTCMonth\" : \"getMonth\"]();\r\n        var quarter = Math.floor(month / 3);\r\n        var formatType = FORMAT_TYPES[count];\r\n        if (formatType) {\r\n            return dateParts.getQuarterNames(formatType)[quarter]\r\n        }\r\n        return leftPad((quarter + 1).toString(), Math.min(count, 2))\r\n    },\r\n    E: function(date, count, useUtc, dateParts) {\r\n        var day = date[useUtc ? \"getUTCDay\" : \"getDay\"]();\r\n        var formatType = FORMAT_TYPES[count < 3 ? 3 : count];\r\n        return dateParts.getDayNames(formatType)[day]\r\n    },\r\n    a: function(date, count, useUtc, dateParts) {\r\n        var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"]();\r\n        var period = hours < 12 ? 0 : 1;\r\n        var formatType = FORMAT_TYPES[count];\r\n        return dateParts.getPeriodNames(formatType)[period]\r\n    },\r\n    d: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCDate\" : \"getDate\"]().toString(), Math.min(count, 2))\r\n    },\r\n    H: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCHours\" : \"getHours\"]().toString(), Math.min(count, 2))\r\n    },\r\n    h: function(date, count, useUtc) {\r\n        var hours = date[useUtc ? \"getUTCHours\" : \"getHours\"]();\r\n        return leftPad((hours % 12 || 12).toString(), Math.min(count, 2))\r\n    },\r\n    m: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCMinutes\" : \"getMinutes\"]().toString(), Math.min(count, 2))\r\n    },\r\n    s: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCSeconds\" : \"getSeconds\"]().toString(), Math.min(count, 2))\r\n    },\r\n    S: function(date, count, useUtc) {\r\n        return leftPad(date[useUtc ? \"getUTCMilliseconds\" : \"getMilliseconds\"]().toString(), 3).substr(0, count)\r\n    },\r\n    x: function(date, count, useUtc) {\r\n        var timezoneOffset = useUtc ? 0 : date.getTimezoneOffset();\r\n        var signPart = timezoneOffset > 0 ? \"-\" : \"+\";\r\n        var timezoneOffsetAbs = Math.abs(timezoneOffset);\r\n        var hours = Math.floor(timezoneOffsetAbs / 60);\r\n        var minutes = timezoneOffsetAbs % 60;\r\n        var hoursPart = leftPad(hours.toString(), 2);\r\n        var minutesPart = leftPad(minutes.toString(), 2);\r\n        return signPart + hoursPart + (count >= 3 ? \":\" : \"\") + (count > 1 || minutes ? minutesPart : \"\")\r\n    },\r\n    X: function(date, count, useUtc) {\r\n        if (useUtc || !date.getTimezoneOffset()) {\r\n            return \"Z\"\r\n        }\r\n        return LDML_FORMATTERS.x(date, count, useUtc)\r\n    },\r\n    Z: function(date, count, useUtc) {\r\n        return LDML_FORMATTERS.X(date, count >= 5 ? 3 : 2, useUtc)\r\n    }\r\n};\r\nvar getFormatter = function(format, dateParts) {\r\n    return function(date) {\r\n        var charIndex;\r\n        var formatter;\r\n        var char;\r\n        var charCount = 0;\r\n        var separator = \"'\";\r\n        var isEscaping = false;\r\n        var isCurrentCharEqualsNext;\r\n        var result = \"\";\r\n        if (!date) {\r\n            return null\r\n        }\r\n        if (!format) {\r\n            return date\r\n        }\r\n        var useUtc = \"Z\" === format[format.length - 1] || \"'Z'\" === format.slice(-3);\r\n        for (charIndex = 0; charIndex < format.length; charIndex++) {\r\n            char = format[charIndex];\r\n            formatter = LDML_FORMATTERS[char];\r\n            isCurrentCharEqualsNext = char === format[charIndex + 1];\r\n            charCount++;\r\n            if (!isCurrentCharEqualsNext) {\r\n                if (formatter && !isEscaping) {\r\n                    result += formatter(date, charCount, useUtc, dateParts)\r\n                }\r\n                charCount = 0\r\n            }\r\n            if (char === separator && !isCurrentCharEqualsNext) {\r\n                isEscaping = !isEscaping\r\n            } else {\r\n                if (isEscaping || !formatter) {\r\n                    result += char\r\n                }\r\n            }\r\n            if (char === separator && isCurrentCharEqualsNext) {\r\n                charIndex++\r\n            }\r\n        }\r\n        return result\r\n    }\r\n};\r\nexports.getFormatter = getFormatter;\r\n"]},"metadata":{},"sourceType":"script"}