{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/scatter_series.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.polar = exports.chart = void 0;\n\nvar _extend3 = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _range_data_calculator = _interopRequireDefault(require(\"./helpers/range_data_calculator\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _common = require(\"../../core/utils/common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar math = Math;\nvar _abs = math.abs;\nvar _sqrt = math.sqrt;\nvar _max = math.max;\nvar DEFAULT_TRACKER_WIDTH = 12;\nvar DEFAULT_DURATION = 400;\nvar HIGH_ERROR = \"highError\";\nvar LOW_ERROR = \"lowError\";\nvar VARIANCE = \"variance\";\nvar STANDARD_DEVIATION = \"stddeviation\";\nvar STANDARD_ERROR = \"stderror\";\nvar PERCENT = \"percent\";\nvar FIXED = \"fixed\";\nvar UNDEFINED = \"undefined\";\nvar DISCRETE = \"discrete\";\nvar LOGARITHMIC = \"logarithmic\";\nvar DATETIME = \"datetime\";\nvar chart = {};\nexports.chart = chart;\nvar polar = {};\nexports.polar = polar;\n\nfunction sum(array) {\n  var result = 0;\n  (0, _iterator.each)(array, function (_, value) {\n    result += value;\n  });\n  return result;\n}\n\nfunction isErrorBarTypeCorrect(type) {\n  return (0, _array.inArray)(type, [FIXED, PERCENT, VARIANCE, STANDARD_DEVIATION, STANDARD_ERROR]) !== -1;\n}\n\nfunction variance(array, expectedValue) {\n  return sum((0, _utils.map)(array, function (value) {\n    return (value - expectedValue) * (value - expectedValue);\n  })) / array.length;\n}\n\nfunction calculateAvgErrorBars(result, data, series) {\n  var errorBarsOptions = series.getOptions().valueErrorBar;\n  var valueField = series.getValueFields()[0];\n  var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\n  var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\n\n  if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\n    var fusionData = data.reduce(function (result, item) {\n      if ((0, _type.isDefined)(item[lowValueField])) {\n        result[0] += item[valueField] - item[lowValueField];\n        result[1]++;\n      }\n\n      if ((0, _type.isDefined)(item[highValueField])) {\n        result[2] += item[highValueField] - item[valueField];\n        result[3]++;\n      }\n\n      return result;\n    }, [0, 0, 0, 0]);\n\n    if (fusionData[1]) {\n      result[lowValueField] = result[valueField] - fusionData[0] / fusionData[1];\n    }\n\n    if (fusionData[2]) {\n      result[highValueField] = result[valueField] + fusionData[2] / fusionData[3];\n    }\n  }\n\n  return result;\n}\n\nfunction calculateSumErrorBars(result, data, series) {\n  var errorBarsOptions = series.getOptions().valueErrorBar;\n  var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\n  var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\n\n  if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\n    result[lowValueField] = 0;\n    result[highValueField] = 0;\n    result = data.reduce(function (result, item) {\n      result[lowValueField] += item[lowValueField];\n      result[highValueField] += item[highValueField];\n      return result;\n    }, result);\n  }\n\n  return result;\n}\n\nfunction getMinMaxAggregator(compare) {\n  return function (_ref, series) {\n    var intervalStart = _ref.intervalStart,\n        data = _ref.data;\n    var valueField = series.getValueFields()[0];\n    var targetData = data[0];\n    targetData = data.reduce(function (result, item) {\n      var value = item[valueField];\n\n      if (null === result[valueField]) {\n        result = item;\n      }\n\n      if (null !== value && compare(value, result[valueField])) {\n        return item;\n      }\n\n      return result;\n    }, targetData);\n    return (0, _extend3.extend)({}, targetData, _defineProperty({}, series.getArgumentField(), intervalStart));\n  };\n}\n\nfunction checkFields(data, fieldsToCheck, skippedFields) {\n  var allFieldsIsValid = true;\n\n  for (var field in fieldsToCheck) {\n    var isArgument = \"argument\" === field;\n\n    if (isArgument || \"size\" === field ? !(0, _type.isDefined)(data[field]) : void 0 === data[field]) {\n      var selector = fieldsToCheck[field];\n\n      if (!isArgument) {\n        skippedFields[selector] = (skippedFields[selector] || 0) + 1;\n      }\n\n      allFieldsIsValid = false;\n    }\n  }\n\n  return allFieldsIsValid;\n}\n\nvar baseScatterMethods = {\n  _defaultDuration: DEFAULT_DURATION,\n  _defaultTrackerWidth: DEFAULT_TRACKER_WIDTH,\n  _applyStyle: _common.noop,\n  _updateOptions: _common.noop,\n  _parseStyle: _common.noop,\n  _prepareSegment: _common.noop,\n  _drawSegment: _common.noop,\n  _appendInGroup: function _appendInGroup() {\n    this._group.append(this._extGroups.seriesGroup);\n  },\n  _createLegendState: function _createLegendState(styleOptions, defaultColor) {\n    return {\n      fill: styleOptions.color || defaultColor,\n      hatching: styleOptions.hatching ? (0, _extend3.extend)({}, styleOptions.hatching, {\n        direction: \"right\"\n      }) : void 0\n    };\n  },\n  _applyElementsClipRect: function _applyElementsClipRect(settings) {\n    settings[\"clip-path\"] = this._paneClipRectID;\n  },\n  _applyMarkerClipRect: function _applyMarkerClipRect(settings) {\n    settings[\"clip-path\"] = this._forceClipping ? this._paneClipRectID : null;\n  },\n  _createGroup: function _createGroup(groupName, parent, target, settings) {\n    var group = parent[groupName] = parent[groupName] || this._renderer.g();\n\n    target && group.append(target);\n    settings && group.attr(settings);\n  },\n  _applyClearingSettings: function _applyClearingSettings(settings) {\n    settings.opacity = null;\n    settings.scale = null;\n\n    if (this._options.rotated) {\n      settings.translateX = null;\n    } else {\n      settings.translateY = null;\n    }\n  },\n  _createGroups: function _createGroups() {\n    var that = this;\n\n    that._createGroup(\"_markersGroup\", that, that._group);\n\n    that._createGroup(\"_labelsGroup\", that);\n  },\n  _setMarkerGroupSettings: function _setMarkerGroupSettings() {\n    var that = this;\n\n    var settings = that._createPointStyles(that._getMarkerGroupOptions()).normal;\n\n    settings.class = \"dxc-markers\";\n    settings.opacity = 1;\n\n    that._applyMarkerClipRect(settings);\n\n    that._markersGroup.attr(settings);\n  },\n  getVisibleArea: function getVisibleArea() {\n    return this._visibleArea;\n  },\n  areErrorBarsVisible: function areErrorBarsVisible() {\n    var errorBarOptions = this._options.valueErrorBar;\n    return errorBarOptions && this._errorBarsEnabled() && \"none\" !== errorBarOptions.displayMode && (isErrorBarTypeCorrect((0, _utils.normalizeEnum)(errorBarOptions.type)) || (0, _type.isDefined)(errorBarOptions.lowValueField) || (0, _type.isDefined)(errorBarOptions.highValueField));\n  },\n  groupPointsByCoords: function groupPointsByCoords(rotated) {\n    var cat = [];\n    (0, _iterator.each)(this.getVisiblePoints(), function (_, p) {\n      var pointCoord = parseInt(rotated ? p.vy : p.vx);\n\n      if (!cat[pointCoord]) {\n        cat[pointCoord] = p;\n      } else {\n        Array.isArray(cat[pointCoord]) ? cat[pointCoord].push(p) : cat[pointCoord] = [cat[pointCoord], p];\n      }\n    });\n    return cat;\n  },\n  _createErrorBarGroup: function _createErrorBarGroup(animationEnabled) {\n    var that = this;\n    var errorBarOptions = that._options.valueErrorBar;\n    var settings;\n\n    if (that.areErrorBarsVisible()) {\n      settings = {\n        \"class\": \"dxc-error-bars\",\n        stroke: errorBarOptions.color,\n        \"stroke-width\": errorBarOptions.lineWidth,\n        opacity: animationEnabled ? .001 : errorBarOptions.opacity || 1,\n        \"stroke-linecap\": \"square\",\n        sharp: true,\n        \"clip-path\": that._forceClipping ? that._paneClipRectID : that._widePaneClipRectID\n      };\n\n      that._createGroup(\"_errorBarGroup\", that, that._group, settings);\n    }\n  },\n  _setGroupsSettings: function _setGroupsSettings(animationEnabled) {\n    var that = this;\n\n    that._setMarkerGroupSettings();\n\n    that._setLabelGroupSettings(animationEnabled);\n\n    that._createErrorBarGroup(animationEnabled);\n  },\n  _getCreatingPointOptions: function _getCreatingPointOptions() {\n    var that = this;\n    var defaultPointOptions;\n    var creatingPointOptions = that._predefinedPointOptions;\n    var normalStyle;\n\n    if (!creatingPointOptions) {\n      defaultPointOptions = that._getPointOptions();\n      that._predefinedPointOptions = creatingPointOptions = (0, _extend3.extend)(true, {\n        styles: {}\n      }, defaultPointOptions);\n      normalStyle = defaultPointOptions.styles && defaultPointOptions.styles.normal || {};\n      creatingPointOptions.styles = creatingPointOptions.styles || {};\n      creatingPointOptions.styles.normal = {\n        \"stroke-width\": normalStyle[\"stroke-width\"],\n        r: normalStyle.r,\n        opacity: normalStyle.opacity\n      };\n    }\n\n    return creatingPointOptions;\n  },\n  _getPointOptions: function _getPointOptions() {\n    return this._parsePointOptions(this._preparePointOptions(), this._options.label);\n  },\n  _getOptionsForPoint: function _getOptionsForPoint() {\n    return this._options.point;\n  },\n  _parsePointStyle: function _parsePointStyle(style, defaultColor, defaultBorderColor, defaultSize) {\n    var border = style.border || {};\n    var sizeValue = void 0 !== style.size ? style.size : defaultSize;\n    return {\n      fill: style.color || defaultColor,\n      stroke: border.color || defaultBorderColor,\n      \"stroke-width\": border.visible ? border.width : 0,\n      r: sizeValue / 2 + (border.visible && 0 !== sizeValue ? ~~(border.width / 2) || 0 : 0)\n    };\n  },\n  _createPointStyles: function _createPointStyles(pointOptions) {\n    var that = this;\n    var mainPointColor = pointOptions.color || that._options.mainSeriesColor;\n    var containerColor = that._options.containerBackgroundColor;\n\n    var normalStyle = that._parsePointStyle(pointOptions, mainPointColor, mainPointColor);\n\n    normalStyle.visibility = pointOptions.visible ? \"visible\" : \"hidden\";\n    return {\n      normal: normalStyle,\n      hover: that._parsePointStyle(pointOptions.hoverStyle, containerColor, mainPointColor, pointOptions.size),\n      selection: that._parsePointStyle(pointOptions.selectionStyle, containerColor, mainPointColor, pointOptions.size)\n    };\n  },\n  _checkData: function _checkData(data, skippedFields, fieldsToCheck) {\n    fieldsToCheck = fieldsToCheck || {\n      value: this.getValueFields()[0]\n    };\n    fieldsToCheck.argument = this.getArgumentField();\n    return checkFields(data, fieldsToCheck, skippedFields || {}) && data.value === data.value;\n  },\n  getValueRangeInitialValue: function getValueRangeInitialValue() {\n    return;\n  },\n  _getRangeData: function _getRangeData() {\n    return _range_data_calculator.default.getRangeData(this);\n  },\n  _getPointDataSelector: function _getPointDataSelector() {\n    var _this = this;\n\n    var valueField = this.getValueFields()[0];\n    var argumentField = this.getArgumentField();\n    var tagField = this.getTagField();\n    var areErrorBarsVisible = this.areErrorBarsVisible();\n    var lowValueField;\n    var highValueField;\n\n    if (areErrorBarsVisible) {\n      var errorBarOptions = this._options.valueErrorBar;\n      lowValueField = errorBarOptions.lowValueField || LOW_ERROR;\n      highValueField = errorBarOptions.highValueField || HIGH_ERROR;\n    }\n\n    return function (data) {\n      var pointData = {\n        value: _this._processEmptyValue(data[valueField]),\n        argument: data[argumentField],\n        tag: data[tagField],\n        data: data\n      };\n\n      if (areErrorBarsVisible) {\n        pointData.lowError = data[lowValueField];\n        pointData.highError = data[highValueField];\n      }\n\n      return pointData;\n    };\n  },\n  _errorBarsEnabled: function _errorBarsEnabled() {\n    return this.valueAxisType !== DISCRETE && this.valueAxisType !== LOGARITHMIC && this.valueType !== DATETIME;\n  },\n  _drawPoint: function _drawPoint(options) {\n    var point = options.point;\n\n    if (point.isInVisibleArea()) {\n      point.clearVisibility();\n      point.draw(this._renderer, options.groups, options.hasAnimation, options.firstDrawing);\n\n      this._drawnPoints.push(point);\n    } else {\n      point.setInvisibility();\n    }\n  },\n  _animateComplete: function _animateComplete() {\n    var that = this;\n    var animationSettings = {\n      duration: that._defaultDuration\n    };\n    that._labelsGroup && that._labelsGroup.animate({\n      opacity: 1\n    }, animationSettings);\n    that._errorBarGroup && that._errorBarGroup.animate({\n      opacity: that._options.valueErrorBar.opacity || 1\n    }, animationSettings);\n  },\n  _animate: function _animate() {\n    var that = this;\n    var lastPointIndex = that._drawnPoints.length - 1;\n    (0, _iterator.each)(that._drawnPoints || [], function (i, p) {\n      p.animate(i === lastPointIndex ? function () {\n        that._animateComplete();\n      } : void 0, {\n        translateX: p.x,\n        translateY: p.y\n      });\n    });\n  },\n  _defaultAggregator: \"avg\",\n  _aggregators: {\n    avg: function avg(_ref2, series) {\n      var _calculateAvgErrorBar;\n\n      var data = _ref2.data,\n          intervalStart = _ref2.intervalStart;\n\n      if (!data.length) {\n        return;\n      }\n\n      var valueField = series.getValueFields()[0];\n      var aggregationResult = data.reduce(function (result, item) {\n        var value = item[valueField];\n\n        if ((0, _type.isDefined)(value)) {\n          result[0] += value;\n          result[1]++;\n        } else {\n          if (null === value) {\n            result[2]++;\n          }\n        }\n\n        return result;\n      }, [0, 0, 0]);\n      return calculateAvgErrorBars((_calculateAvgErrorBar = {}, _defineProperty(_calculateAvgErrorBar, valueField, aggregationResult[2] === data.length ? null : aggregationResult[0] / aggregationResult[1]), _defineProperty(_calculateAvgErrorBar, series.getArgumentField(), intervalStart), _calculateAvgErrorBar), data, series);\n    },\n    sum: function sum(_ref3, series) {\n      var _calculateSumErrorBar;\n\n      var intervalStart = _ref3.intervalStart,\n          data = _ref3.data;\n\n      if (!data.length) {\n        return;\n      }\n\n      var valueField = series.getValueFields()[0];\n      var aggregationResult = data.reduce(function (result, item) {\n        var value = item[valueField];\n\n        if (void 0 !== value) {\n          result[0] += value;\n        }\n\n        if (null === value) {\n          result[1]++;\n        } else {\n          if (void 0 === value) {\n            result[2]++;\n          }\n        }\n\n        return result;\n      }, [0, 0, 0]);\n      var value = aggregationResult[0];\n\n      if (aggregationResult[1] === data.length) {\n        value = null;\n      }\n\n      if (aggregationResult[2] === data.length) {\n        return;\n      }\n\n      return calculateSumErrorBars((_calculateSumErrorBar = {}, _defineProperty(_calculateSumErrorBar, valueField, value), _defineProperty(_calculateSumErrorBar, series.getArgumentField(), intervalStart), _calculateSumErrorBar), data, series);\n    },\n    count: function count(_ref4, series) {\n      var _ref5;\n\n      var data = _ref4.data,\n          intervalStart = _ref4.intervalStart;\n      var valueField = series.getValueFields()[0];\n      return _ref5 = {}, _defineProperty(_ref5, series.getArgumentField(), intervalStart), _defineProperty(_ref5, valueField, data.filter(function (i) {\n        return void 0 !== i[valueField];\n      }).length), _ref5;\n    },\n    min: getMinMaxAggregator(function (a, b) {\n      return a < b;\n    }),\n    max: getMinMaxAggregator(function (a, b) {\n      return a > b;\n    })\n  },\n  _endUpdateData: function _endUpdateData() {\n    delete this._predefinedPointOptions;\n  },\n  getArgumentField: function getArgumentField() {\n    return this._options.argumentField || \"arg\";\n  },\n  getValueFields: function getValueFields() {\n    var options = this._options;\n    var errorBarsOptions = options.valueErrorBar;\n    var valueFields = [options.valueField || \"val\"];\n    var lowValueField;\n    var highValueField;\n\n    if (errorBarsOptions) {\n      lowValueField = errorBarsOptions.lowValueField;\n      highValueField = errorBarsOptions.highValueField;\n      (0, _type.isString)(lowValueField) && valueFields.push(lowValueField);\n      (0, _type.isString)(highValueField) && valueFields.push(highValueField);\n    }\n\n    return valueFields;\n  },\n  _calculateErrorBars: function _calculateErrorBars(data) {\n    if (!this.areErrorBarsVisible()) {\n      return;\n    }\n\n    var that = this;\n    var options = that._options;\n    var errorBarsOptions = options.valueErrorBar;\n    var errorBarType = (0, _utils.normalizeEnum)(errorBarsOptions.type);\n    var floatErrorValue = parseFloat(errorBarsOptions.value);\n    var valueField = that.getValueFields()[0];\n    var value;\n    var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\n    var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\n    var valueArray;\n    var valueArrayLength;\n    var meanValue;\n    var processDataItem;\n\n    var addSubError = function addSubError(_i, item) {\n      value = item.value;\n      item.lowError = value - floatErrorValue;\n      item.highError = value + floatErrorValue;\n    };\n\n    switch (errorBarType) {\n      case FIXED:\n        processDataItem = addSubError;\n        break;\n\n      case PERCENT:\n        processDataItem = function processDataItem(_, item) {\n          value = item.value;\n          var error = value * floatErrorValue / 100;\n          item.lowError = value - error;\n          item.highError = value + error;\n        };\n\n        break;\n\n      case UNDEFINED:\n        processDataItem = function processDataItem(_, item) {\n          item.lowError = item.data[lowValueField];\n          item.highError = item.data[highValueField];\n        };\n\n        break;\n\n      default:\n        valueArray = (0, _utils.map)(data, function (item) {\n          return (0, _type.isDefined)(item.data[valueField]) ? item.data[valueField] : null;\n        });\n        valueArrayLength = valueArray.length;\n        floatErrorValue = floatErrorValue || 1;\n\n        switch (errorBarType) {\n          case VARIANCE:\n            floatErrorValue = variance(valueArray, sum(valueArray) / valueArrayLength) * floatErrorValue;\n            processDataItem = addSubError;\n            break;\n\n          case STANDARD_DEVIATION:\n            meanValue = sum(valueArray) / valueArrayLength;\n            floatErrorValue = _sqrt(variance(valueArray, meanValue)) * floatErrorValue;\n\n            processDataItem = function processDataItem(_, item) {\n              item.lowError = meanValue - floatErrorValue;\n              item.highError = meanValue + floatErrorValue;\n            };\n\n            break;\n\n          case STANDARD_ERROR:\n            floatErrorValue = _sqrt(variance(valueArray, sum(valueArray) / valueArrayLength) / valueArrayLength) * floatErrorValue;\n            processDataItem = addSubError;\n        }\n\n    }\n\n    processDataItem && (0, _iterator.each)(data, processDataItem);\n  },\n  _patchMarginOptions: function _patchMarginOptions(options) {\n    var pointOptions = this._getCreatingPointOptions();\n\n    var styles = pointOptions.styles;\n    var maxSize = [styles.normal, styles.hover, styles.selection].reduce(function (max, style) {\n      return _max(max, 2 * style.r + style[\"stroke-width\"]);\n    }, 0);\n    options.size = pointOptions.visible ? maxSize : 0;\n    options.sizePointNormalState = pointOptions.visible ? 2 * styles.normal.r + styles.normal[\"stroke-width\"] : 2;\n    return options;\n  },\n  usePointsToDefineAutoHiding: function usePointsToDefineAutoHiding() {\n    return true;\n  }\n};\nexports.chart = chart = (0, _extend3.extend)({}, baseScatterMethods, {\n  drawTrackers: function drawTrackers() {\n    var that = this;\n    var trackers;\n    var trackersGroup;\n    var segments = that._segments || [];\n    var rotated = that._options.rotated;\n\n    if (!that.isVisible()) {\n      return;\n    }\n\n    if (segments.length) {\n      trackers = that._trackers = that._trackers || [];\n      trackersGroup = that._trackersGroup = (that._trackersGroup || that._renderer.g().attr({\n        fill: \"gray\",\n        opacity: .001,\n        stroke: \"gray\",\n        \"class\": \"dxc-trackers\"\n      })).attr({\n        \"clip-path\": this._paneClipRectID || null\n      }).append(that._group);\n      (0, _iterator.each)(segments, function (i, segment) {\n        if (!trackers[i]) {\n          trackers[i] = that._drawTrackerElement(segment).data({\n            \"chart-data-series\": that\n          }).append(trackersGroup);\n        } else {\n          that._updateTrackerElement(segment, trackers[i]);\n        }\n      });\n    }\n\n    that._trackersTranslator = that.groupPointsByCoords(rotated);\n  },\n  _checkAxisVisibleAreaCoord: function _checkAxisVisibleAreaCoord(isArgument, coord) {\n    var axis = isArgument ? this.getArgumentAxis() : this.getValueAxis();\n    var visibleArea = axis.getVisibleArea();\n    return (0, _type.isDefined)(coord) && visibleArea[0] <= coord && visibleArea[1] >= coord;\n  },\n  checkSeriesViewportCoord: function checkSeriesViewportCoord(axis, coord) {\n    return true;\n  },\n  getSeriesPairCoord: function getSeriesPairCoord(coord, isArgument) {\n    var oppositeCoord = null;\n    var isOpposite = !isArgument && !this._options.rotated || isArgument && this._options.rotated;\n    var coordName = !isOpposite ? \"vx\" : \"vy\";\n    var oppositeCoordName = !isOpposite ? \"vy\" : \"vx\";\n    var points = this.getVisiblePoints();\n\n    for (var i = 0; i < points.length; i++) {\n      var p = points[i];\n      var tmpCoord = p[coordName] === coord ? p[oppositeCoordName] : void 0;\n\n      if (this._checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\n        oppositeCoord = tmpCoord;\n        break;\n      }\n    }\n\n    return oppositeCoord;\n  },\n  _getNearestPoints: function _getNearestPoints(point, nextPoint) {\n    return [point, nextPoint];\n  },\n  _getBezierPoints: function _getBezierPoints() {\n    return [];\n  },\n  _getNearestPointsByCoord: function _getNearestPointsByCoord(coord, isArgument) {\n    var that = this;\n    var rotated = that.getOptions().rotated;\n    var isOpposite = !isArgument && !rotated || isArgument && rotated;\n    var coordName = isOpposite ? \"vy\" : \"vx\";\n    var allPoints = that.getPoints();\n\n    var bezierPoints = that._getBezierPoints();\n\n    var nearestPoints = [];\n\n    if (allPoints.length > 1) {\n      allPoints.forEach(function (point, i) {\n        var nextPoint = allPoints[i + 1];\n\n        if (nextPoint && (point[coordName] <= coord && nextPoint[coordName] >= coord || point[coordName] >= coord && nextPoint[coordName] <= coord)) {\n          nearestPoints.push(that._getNearestPoints(point, nextPoint, bezierPoints));\n        }\n      });\n    } else {\n      nearestPoints.push([allPoints[0], allPoints[0]]);\n    }\n\n    return nearestPoints;\n  },\n  getNeighborPoint: function getNeighborPoint(x, y) {\n    var pCoord = this._options.rotated ? y : x;\n    var nCoord = pCoord;\n    var cat = this._trackersTranslator;\n    var point = null;\n    var minDistance;\n    var oppositeCoord = this._options.rotated ? x : y;\n    var oppositeCoordName = this._options.rotated ? \"vx\" : \"vy\";\n\n    if (this.isVisible() && cat) {\n      point = cat[pCoord];\n\n      do {\n        point = cat[nCoord] || cat[pCoord];\n        pCoord--;\n        nCoord++;\n      } while ((pCoord >= 0 || nCoord < cat.length) && !point);\n\n      if (Array.isArray(point)) {\n        minDistance = _abs(point[0][oppositeCoordName] - oppositeCoord);\n        (0, _iterator.each)(point, function (i, p) {\n          var distance = _abs(p[oppositeCoordName] - oppositeCoord);\n\n          if (minDistance >= distance) {\n            minDistance = distance;\n            point = p;\n          }\n        });\n      }\n    }\n\n    return point;\n  },\n  _applyVisibleArea: function _applyVisibleArea() {\n    var that = this;\n    var rotated = that._options.rotated;\n    var visibleX = (rotated ? that.getValueAxis() : that.getArgumentAxis()).getVisibleArea();\n    var visibleY = (rotated ? that.getArgumentAxis() : that.getValueAxis()).getVisibleArea();\n    that._visibleArea = {\n      minX: visibleX[0],\n      maxX: visibleX[1],\n      minY: visibleY[0],\n      maxY: visibleY[1]\n    };\n  },\n  getPointCenterByArg: function getPointCenterByArg(arg) {\n    var point = this.getPointsByArg(arg)[0];\n    return point ? point.getCenterCoord() : void 0;\n  }\n});\nexports.polar = polar = (0, _extend3.extend)({}, baseScatterMethods, {\n  drawTrackers: function drawTrackers() {\n    chart.drawTrackers.call(this);\n    var cat = this._trackersTranslator;\n    var index;\n\n    if (!this.isVisible()) {\n      return;\n    }\n\n    (0, _iterator.each)(cat, function (i, category) {\n      if (category) {\n        index = i;\n        return false;\n      }\n    });\n    cat[index + 360] = cat[index];\n  },\n  getNeighborPoint: function getNeighborPoint(x, y) {\n    var pos = (0, _utils.convertXYToPolar)(this.getValueAxis().getCenter(), x, y);\n    return chart.getNeighborPoint.call(this, pos.phi, pos.r);\n  },\n  _applyVisibleArea: function _applyVisibleArea() {\n    var that = this;\n    var canvas = that.getValueAxis().getCanvas();\n    that._visibleArea = {\n      minX: canvas.left,\n      maxX: canvas.width - canvas.right,\n      minY: canvas.top,\n      maxY: canvas.height - canvas.bottom\n    };\n  },\n  getSeriesPairCoord: function getSeriesPairCoord(params, isArgument) {\n    var coords = null;\n    var paramName = isArgument ? \"argument\" : \"radius\";\n    var points = this.getVisiblePoints();\n\n    for (var i = 0; i < points.length; i++) {\n      var p = points[i];\n      var tmpPoint = (0, _type.isDefined)(p[paramName]) && (0, _type.isDefined)(params[paramName]) && p[paramName].valueOf() === params[paramName].valueOf() ? {\n        x: p.x,\n        y: p.y\n      } : void 0;\n\n      if ((0, _type.isDefined)(tmpPoint)) {\n        coords = tmpPoint;\n        break;\n      }\n    }\n\n    return coords;\n  }\n});","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/scatter_series.js"],"names":["exports","polar","chart","_extend3","require","_array","_iterator","_range_data_calculator","_interopRequireDefault","_type","_utils","_common","obj","__esModule","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","math","Math","_abs","abs","_sqrt","sqrt","_max","max","DEFAULT_TRACKER_WIDTH","DEFAULT_DURATION","HIGH_ERROR","LOW_ERROR","VARIANCE","STANDARD_DEVIATION","STANDARD_ERROR","PERCENT","FIXED","UNDEFINED","DISCRETE","LOGARITHMIC","DATETIME","sum","array","result","each","_","isErrorBarTypeCorrect","type","inArray","variance","expectedValue","map","length","calculateAvgErrorBars","data","series","errorBarsOptions","getOptions","valueErrorBar","valueField","getValueFields","lowValueField","highValueField","areErrorBarsVisible","fusionData","reduce","item","isDefined","calculateSumErrorBars","getMinMaxAggregator","compare","_ref","intervalStart","targetData","extend","getArgumentField","checkFields","fieldsToCheck","skippedFields","allFieldsIsValid","field","isArgument","selector","baseScatterMethods","_defaultDuration","_defaultTrackerWidth","_applyStyle","noop","_updateOptions","_parseStyle","_prepareSegment","_drawSegment","_appendInGroup","_group","append","_extGroups","seriesGroup","_createLegendState","styleOptions","defaultColor","fill","color","hatching","direction","_applyElementsClipRect","settings","_paneClipRectID","_applyMarkerClipRect","_forceClipping","_createGroup","groupName","parent","target","group","_renderer","g","attr","_applyClearingSettings","opacity","scale","_options","rotated","translateX","translateY","_createGroups","that","_setMarkerGroupSettings","_createPointStyles","_getMarkerGroupOptions","normal","class","_markersGroup","getVisibleArea","_visibleArea","errorBarOptions","_errorBarsEnabled","displayMode","normalizeEnum","groupPointsByCoords","cat","getVisiblePoints","p","pointCoord","parseInt","vy","vx","Array","isArray","push","_createErrorBarGroup","animationEnabled","stroke","lineWidth","sharp","_widePaneClipRectID","_setGroupsSettings","_setLabelGroupSettings","_getCreatingPointOptions","defaultPointOptions","creatingPointOptions","_predefinedPointOptions","normalStyle","_getPointOptions","styles","r","_parsePointOptions","_preparePointOptions","label","_getOptionsForPoint","point","_parsePointStyle","style","defaultBorderColor","defaultSize","border","sizeValue","size","visible","width","pointOptions","mainPointColor","mainSeriesColor","containerColor","containerBackgroundColor","visibility","hover","hoverStyle","selection","selectionStyle","_checkData","argument","getValueRangeInitialValue","_getRangeData","default","getRangeData","_getPointDataSelector","_this","argumentField","tagField","getTagField","pointData","_processEmptyValue","tag","lowError","highError","valueAxisType","valueType","_drawPoint","options","isInVisibleArea","clearVisibility","draw","groups","hasAnimation","firstDrawing","_drawnPoints","setInvisibility","_animateComplete","animationSettings","duration","_labelsGroup","animate","_errorBarGroup","_animate","lastPointIndex","i","x","y","_defaultAggregator","_aggregators","avg","_ref2","_calculateAvgErrorBar","aggregationResult","_ref3","_calculateSumErrorBar","count","_ref4","_ref5","filter","min","a","b","_endUpdateData","valueFields","isString","_calculateErrorBars","errorBarType","floatErrorValue","parseFloat","valueArray","valueArrayLength","meanValue","processDataItem","addSubError","_i","error","_patchMarginOptions","maxSize","sizePointNormalState","usePointsToDefineAutoHiding","drawTrackers","trackers","trackersGroup","segments","_segments","isVisible","_trackers","_trackersGroup","segment","_drawTrackerElement","_updateTrackerElement","_trackersTranslator","_checkAxisVisibleAreaCoord","coord","axis","getArgumentAxis","getValueAxis","visibleArea","checkSeriesViewportCoord","getSeriesPairCoord","oppositeCoord","isOpposite","coordName","oppositeCoordName","points","tmpCoord","_getNearestPoints","nextPoint","_getBezierPoints","_getNearestPointsByCoord","allPoints","getPoints","bezierPoints","nearestPoints","forEach","getNeighborPoint","pCoord","nCoord","minDistance","distance","_applyVisibleArea","visibleX","visibleY","minX","maxX","minY","maxY","getPointCenterByArg","arg","getPointsByArg","getCenterCoord","call","index","category","pos","convertXYToPolar","getCenter","phi","canvas","getCanvas","left","right","top","height","bottom","params","coords","paramName","tmpPoint","valueOf"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/scatter_series.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.polar = exports.chart = void 0;\r\nvar _extend3 = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _range_data_calculator = _interopRequireDefault(require(\"./helpers/range_data_calculator\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _common = require(\"../../core/utils/common\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar math = Math;\r\nvar _abs = math.abs;\r\nvar _sqrt = math.sqrt;\r\nvar _max = math.max;\r\nvar DEFAULT_TRACKER_WIDTH = 12;\r\nvar DEFAULT_DURATION = 400;\r\nvar HIGH_ERROR = \"highError\";\r\nvar LOW_ERROR = \"lowError\";\r\nvar VARIANCE = \"variance\";\r\nvar STANDARD_DEVIATION = \"stddeviation\";\r\nvar STANDARD_ERROR = \"stderror\";\r\nvar PERCENT = \"percent\";\r\nvar FIXED = \"fixed\";\r\nvar UNDEFINED = \"undefined\";\r\nvar DISCRETE = \"discrete\";\r\nvar LOGARITHMIC = \"logarithmic\";\r\nvar DATETIME = \"datetime\";\r\nvar chart = {};\r\nexports.chart = chart;\r\nvar polar = {};\r\nexports.polar = polar;\r\n\r\nfunction sum(array) {\r\n    var result = 0;\r\n    (0, _iterator.each)(array, function(_, value) {\r\n        result += value\r\n    });\r\n    return result\r\n}\r\n\r\nfunction isErrorBarTypeCorrect(type) {\r\n    return (0, _array.inArray)(type, [FIXED, PERCENT, VARIANCE, STANDARD_DEVIATION, STANDARD_ERROR]) !== -1\r\n}\r\n\r\nfunction variance(array, expectedValue) {\r\n    return sum((0, _utils.map)(array, function(value) {\r\n        return (value - expectedValue) * (value - expectedValue)\r\n    })) / array.length\r\n}\r\n\r\nfunction calculateAvgErrorBars(result, data, series) {\r\n    var errorBarsOptions = series.getOptions().valueErrorBar;\r\n    var valueField = series.getValueFields()[0];\r\n    var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\r\n    var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\r\n    if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\r\n        var fusionData = data.reduce(function(result, item) {\r\n            if ((0, _type.isDefined)(item[lowValueField])) {\r\n                result[0] += item[valueField] - item[lowValueField];\r\n                result[1]++\r\n            }\r\n            if ((0, _type.isDefined)(item[highValueField])) {\r\n                result[2] += item[highValueField] - item[valueField];\r\n                result[3]++\r\n            }\r\n            return result\r\n        }, [0, 0, 0, 0]);\r\n        if (fusionData[1]) {\r\n            result[lowValueField] = result[valueField] - fusionData[0] / fusionData[1]\r\n        }\r\n        if (fusionData[2]) {\r\n            result[highValueField] = result[valueField] + fusionData[2] / fusionData[3]\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction calculateSumErrorBars(result, data, series) {\r\n    var errorBarsOptions = series.getOptions().valueErrorBar;\r\n    var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\r\n    var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\r\n    if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\r\n        result[lowValueField] = 0;\r\n        result[highValueField] = 0;\r\n        result = data.reduce(function(result, item) {\r\n            result[lowValueField] += item[lowValueField];\r\n            result[highValueField] += item[highValueField];\r\n            return result\r\n        }, result)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getMinMaxAggregator(compare) {\r\n    return function(_ref, series) {\r\n        var intervalStart = _ref.intervalStart,\r\n            data = _ref.data;\r\n        var valueField = series.getValueFields()[0];\r\n        var targetData = data[0];\r\n        targetData = data.reduce(function(result, item) {\r\n            var value = item[valueField];\r\n            if (null === result[valueField]) {\r\n                result = item\r\n            }\r\n            if (null !== value && compare(value, result[valueField])) {\r\n                return item\r\n            }\r\n            return result\r\n        }, targetData);\r\n        return (0, _extend3.extend)({}, targetData, _defineProperty({}, series.getArgumentField(), intervalStart))\r\n    }\r\n}\r\n\r\nfunction checkFields(data, fieldsToCheck, skippedFields) {\r\n    var allFieldsIsValid = true;\r\n    for (var field in fieldsToCheck) {\r\n        var isArgument = \"argument\" === field;\r\n        if (isArgument || \"size\" === field ? !(0, _type.isDefined)(data[field]) : void 0 === data[field]) {\r\n            var selector = fieldsToCheck[field];\r\n            if (!isArgument) {\r\n                skippedFields[selector] = (skippedFields[selector] || 0) + 1\r\n            }\r\n            allFieldsIsValid = false\r\n        }\r\n    }\r\n    return allFieldsIsValid\r\n}\r\nvar baseScatterMethods = {\r\n    _defaultDuration: DEFAULT_DURATION,\r\n    _defaultTrackerWidth: DEFAULT_TRACKER_WIDTH,\r\n    _applyStyle: _common.noop,\r\n    _updateOptions: _common.noop,\r\n    _parseStyle: _common.noop,\r\n    _prepareSegment: _common.noop,\r\n    _drawSegment: _common.noop,\r\n    _appendInGroup: function() {\r\n        this._group.append(this._extGroups.seriesGroup)\r\n    },\r\n    _createLegendState: function(styleOptions, defaultColor) {\r\n        return {\r\n            fill: styleOptions.color || defaultColor,\r\n            hatching: styleOptions.hatching ? (0, _extend3.extend)({}, styleOptions.hatching, {\r\n                direction: \"right\"\r\n            }) : void 0\r\n        }\r\n    },\r\n    _applyElementsClipRect: function(settings) {\r\n        settings[\"clip-path\"] = this._paneClipRectID\r\n    },\r\n    _applyMarkerClipRect: function(settings) {\r\n        settings[\"clip-path\"] = this._forceClipping ? this._paneClipRectID : null\r\n    },\r\n    _createGroup: function(groupName, parent, target, settings) {\r\n        var group = parent[groupName] = parent[groupName] || this._renderer.g();\r\n        target && group.append(target);\r\n        settings && group.attr(settings)\r\n    },\r\n    _applyClearingSettings: function(settings) {\r\n        settings.opacity = null;\r\n        settings.scale = null;\r\n        if (this._options.rotated) {\r\n            settings.translateX = null\r\n        } else {\r\n            settings.translateY = null\r\n        }\r\n    },\r\n    _createGroups: function() {\r\n        var that = this;\r\n        that._createGroup(\"_markersGroup\", that, that._group);\r\n        that._createGroup(\"_labelsGroup\", that)\r\n    },\r\n    _setMarkerGroupSettings: function() {\r\n        var that = this;\r\n        var settings = that._createPointStyles(that._getMarkerGroupOptions()).normal;\r\n        settings.class = \"dxc-markers\";\r\n        settings.opacity = 1;\r\n        that._applyMarkerClipRect(settings);\r\n        that._markersGroup.attr(settings)\r\n    },\r\n    getVisibleArea: function() {\r\n        return this._visibleArea\r\n    },\r\n    areErrorBarsVisible: function() {\r\n        var errorBarOptions = this._options.valueErrorBar;\r\n        return errorBarOptions && this._errorBarsEnabled() && \"none\" !== errorBarOptions.displayMode && (isErrorBarTypeCorrect((0, _utils.normalizeEnum)(errorBarOptions.type)) || (0, _type.isDefined)(errorBarOptions.lowValueField) || (0, _type.isDefined)(errorBarOptions.highValueField))\r\n    },\r\n    groupPointsByCoords: function(rotated) {\r\n        var cat = [];\r\n        (0, _iterator.each)(this.getVisiblePoints(), function(_, p) {\r\n            var pointCoord = parseInt(rotated ? p.vy : p.vx);\r\n            if (!cat[pointCoord]) {\r\n                cat[pointCoord] = p\r\n            } else {\r\n                Array.isArray(cat[pointCoord]) ? cat[pointCoord].push(p) : cat[pointCoord] = [cat[pointCoord], p]\r\n            }\r\n        });\r\n        return cat\r\n    },\r\n    _createErrorBarGroup: function(animationEnabled) {\r\n        var that = this;\r\n        var errorBarOptions = that._options.valueErrorBar;\r\n        var settings;\r\n        if (that.areErrorBarsVisible()) {\r\n            settings = {\r\n                \"class\": \"dxc-error-bars\",\r\n                stroke: errorBarOptions.color,\r\n                \"stroke-width\": errorBarOptions.lineWidth,\r\n                opacity: animationEnabled ? .001 : errorBarOptions.opacity || 1,\r\n                \"stroke-linecap\": \"square\",\r\n                sharp: true,\r\n                \"clip-path\": that._forceClipping ? that._paneClipRectID : that._widePaneClipRectID\r\n            };\r\n            that._createGroup(\"_errorBarGroup\", that, that._group, settings)\r\n        }\r\n    },\r\n    _setGroupsSettings: function(animationEnabled) {\r\n        var that = this;\r\n        that._setMarkerGroupSettings();\r\n        that._setLabelGroupSettings(animationEnabled);\r\n        that._createErrorBarGroup(animationEnabled)\r\n    },\r\n    _getCreatingPointOptions: function() {\r\n        var that = this;\r\n        var defaultPointOptions;\r\n        var creatingPointOptions = that._predefinedPointOptions;\r\n        var normalStyle;\r\n        if (!creatingPointOptions) {\r\n            defaultPointOptions = that._getPointOptions();\r\n            that._predefinedPointOptions = creatingPointOptions = (0, _extend3.extend)(true, {\r\n                styles: {}\r\n            }, defaultPointOptions);\r\n            normalStyle = defaultPointOptions.styles && defaultPointOptions.styles.normal || {};\r\n            creatingPointOptions.styles = creatingPointOptions.styles || {};\r\n            creatingPointOptions.styles.normal = {\r\n                \"stroke-width\": normalStyle[\"stroke-width\"],\r\n                r: normalStyle.r,\r\n                opacity: normalStyle.opacity\r\n            }\r\n        }\r\n        return creatingPointOptions\r\n    },\r\n    _getPointOptions: function() {\r\n        return this._parsePointOptions(this._preparePointOptions(), this._options.label)\r\n    },\r\n    _getOptionsForPoint: function() {\r\n        return this._options.point\r\n    },\r\n    _parsePointStyle: function(style, defaultColor, defaultBorderColor, defaultSize) {\r\n        var border = style.border || {};\r\n        var sizeValue = void 0 !== style.size ? style.size : defaultSize;\r\n        return {\r\n            fill: style.color || defaultColor,\r\n            stroke: border.color || defaultBorderColor,\r\n            \"stroke-width\": border.visible ? border.width : 0,\r\n            r: sizeValue / 2 + (border.visible && 0 !== sizeValue ? ~~(border.width / 2) || 0 : 0)\r\n        }\r\n    },\r\n    _createPointStyles: function(pointOptions) {\r\n        var that = this;\r\n        var mainPointColor = pointOptions.color || that._options.mainSeriesColor;\r\n        var containerColor = that._options.containerBackgroundColor;\r\n        var normalStyle = that._parsePointStyle(pointOptions, mainPointColor, mainPointColor);\r\n        normalStyle.visibility = pointOptions.visible ? \"visible\" : \"hidden\";\r\n        return {\r\n            normal: normalStyle,\r\n            hover: that._parsePointStyle(pointOptions.hoverStyle, containerColor, mainPointColor, pointOptions.size),\r\n            selection: that._parsePointStyle(pointOptions.selectionStyle, containerColor, mainPointColor, pointOptions.size)\r\n        }\r\n    },\r\n    _checkData: function(data, skippedFields, fieldsToCheck) {\r\n        fieldsToCheck = fieldsToCheck || {\r\n            value: this.getValueFields()[0]\r\n        };\r\n        fieldsToCheck.argument = this.getArgumentField();\r\n        return checkFields(data, fieldsToCheck, skippedFields || {}) && data.value === data.value\r\n    },\r\n    getValueRangeInitialValue: function() {\r\n        return\r\n    },\r\n    _getRangeData: function() {\r\n        return _range_data_calculator.default.getRangeData(this)\r\n    },\r\n    _getPointDataSelector: function() {\r\n        var _this = this;\r\n        var valueField = this.getValueFields()[0];\r\n        var argumentField = this.getArgumentField();\r\n        var tagField = this.getTagField();\r\n        var areErrorBarsVisible = this.areErrorBarsVisible();\r\n        var lowValueField;\r\n        var highValueField;\r\n        if (areErrorBarsVisible) {\r\n            var errorBarOptions = this._options.valueErrorBar;\r\n            lowValueField = errorBarOptions.lowValueField || LOW_ERROR;\r\n            highValueField = errorBarOptions.highValueField || HIGH_ERROR\r\n        }\r\n        return function(data) {\r\n            var pointData = {\r\n                value: _this._processEmptyValue(data[valueField]),\r\n                argument: data[argumentField],\r\n                tag: data[tagField],\r\n                data: data\r\n            };\r\n            if (areErrorBarsVisible) {\r\n                pointData.lowError = data[lowValueField];\r\n                pointData.highError = data[highValueField]\r\n            }\r\n            return pointData\r\n        }\r\n    },\r\n    _errorBarsEnabled: function() {\r\n        return this.valueAxisType !== DISCRETE && this.valueAxisType !== LOGARITHMIC && this.valueType !== DATETIME\r\n    },\r\n    _drawPoint: function(options) {\r\n        var point = options.point;\r\n        if (point.isInVisibleArea()) {\r\n            point.clearVisibility();\r\n            point.draw(this._renderer, options.groups, options.hasAnimation, options.firstDrawing);\r\n            this._drawnPoints.push(point)\r\n        } else {\r\n            point.setInvisibility()\r\n        }\r\n    },\r\n    _animateComplete: function() {\r\n        var that = this;\r\n        var animationSettings = {\r\n            duration: that._defaultDuration\r\n        };\r\n        that._labelsGroup && that._labelsGroup.animate({\r\n            opacity: 1\r\n        }, animationSettings);\r\n        that._errorBarGroup && that._errorBarGroup.animate({\r\n            opacity: that._options.valueErrorBar.opacity || 1\r\n        }, animationSettings)\r\n    },\r\n    _animate: function() {\r\n        var that = this;\r\n        var lastPointIndex = that._drawnPoints.length - 1;\r\n        (0, _iterator.each)(that._drawnPoints || [], function(i, p) {\r\n            p.animate(i === lastPointIndex ? function() {\r\n                that._animateComplete()\r\n            } : void 0, {\r\n                translateX: p.x,\r\n                translateY: p.y\r\n            })\r\n        })\r\n    },\r\n    _defaultAggregator: \"avg\",\r\n    _aggregators: {\r\n        avg: function(_ref2, series) {\r\n            var _calculateAvgErrorBar;\r\n            var data = _ref2.data,\r\n                intervalStart = _ref2.intervalStart;\r\n            if (!data.length) {\r\n                return\r\n            }\r\n            var valueField = series.getValueFields()[0];\r\n            var aggregationResult = data.reduce(function(result, item) {\r\n                var value = item[valueField];\r\n                if ((0, _type.isDefined)(value)) {\r\n                    result[0] += value;\r\n                    result[1]++\r\n                } else {\r\n                    if (null === value) {\r\n                        result[2]++\r\n                    }\r\n                }\r\n                return result\r\n            }, [0, 0, 0]);\r\n            return calculateAvgErrorBars((_calculateAvgErrorBar = {}, _defineProperty(_calculateAvgErrorBar, valueField, aggregationResult[2] === data.length ? null : aggregationResult[0] / aggregationResult[1]), _defineProperty(_calculateAvgErrorBar, series.getArgumentField(), intervalStart), _calculateAvgErrorBar), data, series)\r\n        },\r\n        sum: function(_ref3, series) {\r\n            var _calculateSumErrorBar;\r\n            var intervalStart = _ref3.intervalStart,\r\n                data = _ref3.data;\r\n            if (!data.length) {\r\n                return\r\n            }\r\n            var valueField = series.getValueFields()[0];\r\n            var aggregationResult = data.reduce(function(result, item) {\r\n                var value = item[valueField];\r\n                if (void 0 !== value) {\r\n                    result[0] += value\r\n                }\r\n                if (null === value) {\r\n                    result[1]++\r\n                } else {\r\n                    if (void 0 === value) {\r\n                        result[2]++\r\n                    }\r\n                }\r\n                return result\r\n            }, [0, 0, 0]);\r\n            var value = aggregationResult[0];\r\n            if (aggregationResult[1] === data.length) {\r\n                value = null\r\n            }\r\n            if (aggregationResult[2] === data.length) {\r\n                return\r\n            }\r\n            return calculateSumErrorBars((_calculateSumErrorBar = {}, _defineProperty(_calculateSumErrorBar, valueField, value), _defineProperty(_calculateSumErrorBar, series.getArgumentField(), intervalStart), _calculateSumErrorBar), data, series)\r\n        },\r\n        count: function(_ref4, series) {\r\n            var _ref5;\r\n            var data = _ref4.data,\r\n                intervalStart = _ref4.intervalStart;\r\n            var valueField = series.getValueFields()[0];\r\n            return _ref5 = {}, _defineProperty(_ref5, series.getArgumentField(), intervalStart), _defineProperty(_ref5, valueField, data.filter(function(i) {\r\n                return void 0 !== i[valueField]\r\n            }).length), _ref5\r\n        },\r\n        min: getMinMaxAggregator(function(a, b) {\r\n            return a < b\r\n        }),\r\n        max: getMinMaxAggregator(function(a, b) {\r\n            return a > b\r\n        })\r\n    },\r\n    _endUpdateData: function() {\r\n        delete this._predefinedPointOptions\r\n    },\r\n    getArgumentField: function() {\r\n        return this._options.argumentField || \"arg\"\r\n    },\r\n    getValueFields: function() {\r\n        var options = this._options;\r\n        var errorBarsOptions = options.valueErrorBar;\r\n        var valueFields = [options.valueField || \"val\"];\r\n        var lowValueField;\r\n        var highValueField;\r\n        if (errorBarsOptions) {\r\n            lowValueField = errorBarsOptions.lowValueField;\r\n            highValueField = errorBarsOptions.highValueField;\r\n            (0, _type.isString)(lowValueField) && valueFields.push(lowValueField);\r\n            (0, _type.isString)(highValueField) && valueFields.push(highValueField)\r\n        }\r\n        return valueFields\r\n    },\r\n    _calculateErrorBars: function(data) {\r\n        if (!this.areErrorBarsVisible()) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var options = that._options;\r\n        var errorBarsOptions = options.valueErrorBar;\r\n        var errorBarType = (0, _utils.normalizeEnum)(errorBarsOptions.type);\r\n        var floatErrorValue = parseFloat(errorBarsOptions.value);\r\n        var valueField = that.getValueFields()[0];\r\n        var value;\r\n        var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\r\n        var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\r\n        var valueArray;\r\n        var valueArrayLength;\r\n        var meanValue;\r\n        var processDataItem;\r\n        var addSubError = function(_i, item) {\r\n            value = item.value;\r\n            item.lowError = value - floatErrorValue;\r\n            item.highError = value + floatErrorValue\r\n        };\r\n        switch (errorBarType) {\r\n            case FIXED:\r\n                processDataItem = addSubError;\r\n                break;\r\n            case PERCENT:\r\n                processDataItem = function(_, item) {\r\n                    value = item.value;\r\n                    var error = value * floatErrorValue / 100;\r\n                    item.lowError = value - error;\r\n                    item.highError = value + error\r\n                };\r\n                break;\r\n            case UNDEFINED:\r\n                processDataItem = function(_, item) {\r\n                    item.lowError = item.data[lowValueField];\r\n                    item.highError = item.data[highValueField]\r\n                };\r\n                break;\r\n            default:\r\n                valueArray = (0, _utils.map)(data, function(item) {\r\n                    return (0, _type.isDefined)(item.data[valueField]) ? item.data[valueField] : null\r\n                });\r\n                valueArrayLength = valueArray.length;\r\n                floatErrorValue = floatErrorValue || 1;\r\n                switch (errorBarType) {\r\n                    case VARIANCE:\r\n                        floatErrorValue = variance(valueArray, sum(valueArray) / valueArrayLength) * floatErrorValue;\r\n                        processDataItem = addSubError;\r\n                        break;\r\n                    case STANDARD_DEVIATION:\r\n                        meanValue = sum(valueArray) / valueArrayLength;\r\n                        floatErrorValue = _sqrt(variance(valueArray, meanValue)) * floatErrorValue;\r\n                        processDataItem = function(_, item) {\r\n                            item.lowError = meanValue - floatErrorValue;\r\n                            item.highError = meanValue + floatErrorValue\r\n                        };\r\n                        break;\r\n                    case STANDARD_ERROR:\r\n                        floatErrorValue = _sqrt(variance(valueArray, sum(valueArray) / valueArrayLength) / valueArrayLength) * floatErrorValue;\r\n                        processDataItem = addSubError\r\n                }\r\n        }\r\n        processDataItem && (0, _iterator.each)(data, processDataItem)\r\n    },\r\n    _patchMarginOptions: function(options) {\r\n        var pointOptions = this._getCreatingPointOptions();\r\n        var styles = pointOptions.styles;\r\n        var maxSize = [styles.normal, styles.hover, styles.selection].reduce(function(max, style) {\r\n            return _max(max, 2 * style.r + style[\"stroke-width\"])\r\n        }, 0);\r\n        options.size = pointOptions.visible ? maxSize : 0;\r\n        options.sizePointNormalState = pointOptions.visible ? 2 * styles.normal.r + styles.normal[\"stroke-width\"] : 2;\r\n        return options\r\n    },\r\n    usePointsToDefineAutoHiding: function() {\r\n        return true\r\n    }\r\n};\r\nexports.chart = chart = (0, _extend3.extend)({}, baseScatterMethods, {\r\n    drawTrackers: function() {\r\n        var that = this;\r\n        var trackers;\r\n        var trackersGroup;\r\n        var segments = that._segments || [];\r\n        var rotated = that._options.rotated;\r\n        if (!that.isVisible()) {\r\n            return\r\n        }\r\n        if (segments.length) {\r\n            trackers = that._trackers = that._trackers || [];\r\n            trackersGroup = that._trackersGroup = (that._trackersGroup || that._renderer.g().attr({\r\n                fill: \"gray\",\r\n                opacity: .001,\r\n                stroke: \"gray\",\r\n                \"class\": \"dxc-trackers\"\r\n            })).attr({\r\n                \"clip-path\": this._paneClipRectID || null\r\n            }).append(that._group);\r\n            (0, _iterator.each)(segments, function(i, segment) {\r\n                if (!trackers[i]) {\r\n                    trackers[i] = that._drawTrackerElement(segment).data({\r\n                        \"chart-data-series\": that\r\n                    }).append(trackersGroup)\r\n                } else {\r\n                    that._updateTrackerElement(segment, trackers[i])\r\n                }\r\n            })\r\n        }\r\n        that._trackersTranslator = that.groupPointsByCoords(rotated)\r\n    },\r\n    _checkAxisVisibleAreaCoord: function(isArgument, coord) {\r\n        var axis = isArgument ? this.getArgumentAxis() : this.getValueAxis();\r\n        var visibleArea = axis.getVisibleArea();\r\n        return (0, _type.isDefined)(coord) && visibleArea[0] <= coord && visibleArea[1] >= coord\r\n    },\r\n    checkSeriesViewportCoord: function(axis, coord) {\r\n        return true\r\n    },\r\n    getSeriesPairCoord: function(coord, isArgument) {\r\n        var oppositeCoord = null;\r\n        var isOpposite = !isArgument && !this._options.rotated || isArgument && this._options.rotated;\r\n        var coordName = !isOpposite ? \"vx\" : \"vy\";\r\n        var oppositeCoordName = !isOpposite ? \"vy\" : \"vx\";\r\n        var points = this.getVisiblePoints();\r\n        for (var i = 0; i < points.length; i++) {\r\n            var p = points[i];\r\n            var tmpCoord = p[coordName] === coord ? p[oppositeCoordName] : void 0;\r\n            if (this._checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\r\n                oppositeCoord = tmpCoord;\r\n                break\r\n            }\r\n        }\r\n        return oppositeCoord\r\n    },\r\n    _getNearestPoints: function(point, nextPoint) {\r\n        return [point, nextPoint]\r\n    },\r\n    _getBezierPoints: function() {\r\n        return []\r\n    },\r\n    _getNearestPointsByCoord: function(coord, isArgument) {\r\n        var that = this;\r\n        var rotated = that.getOptions().rotated;\r\n        var isOpposite = !isArgument && !rotated || isArgument && rotated;\r\n        var coordName = isOpposite ? \"vy\" : \"vx\";\r\n        var allPoints = that.getPoints();\r\n        var bezierPoints = that._getBezierPoints();\r\n        var nearestPoints = [];\r\n        if (allPoints.length > 1) {\r\n            allPoints.forEach(function(point, i) {\r\n                var nextPoint = allPoints[i + 1];\r\n                if (nextPoint && (point[coordName] <= coord && nextPoint[coordName] >= coord || point[coordName] >= coord && nextPoint[coordName] <= coord)) {\r\n                    nearestPoints.push(that._getNearestPoints(point, nextPoint, bezierPoints))\r\n                }\r\n            })\r\n        } else {\r\n            nearestPoints.push([allPoints[0], allPoints[0]])\r\n        }\r\n        return nearestPoints\r\n    },\r\n    getNeighborPoint: function(x, y) {\r\n        var pCoord = this._options.rotated ? y : x;\r\n        var nCoord = pCoord;\r\n        var cat = this._trackersTranslator;\r\n        var point = null;\r\n        var minDistance;\r\n        var oppositeCoord = this._options.rotated ? x : y;\r\n        var oppositeCoordName = this._options.rotated ? \"vx\" : \"vy\";\r\n        if (this.isVisible() && cat) {\r\n            point = cat[pCoord];\r\n            do {\r\n                point = cat[nCoord] || cat[pCoord];\r\n                pCoord--;\r\n                nCoord++\r\n            } while ((pCoord >= 0 || nCoord < cat.length) && !point);\r\n            if (Array.isArray(point)) {\r\n                minDistance = _abs(point[0][oppositeCoordName] - oppositeCoord);\r\n                (0, _iterator.each)(point, function(i, p) {\r\n                    var distance = _abs(p[oppositeCoordName] - oppositeCoord);\r\n                    if (minDistance >= distance) {\r\n                        minDistance = distance;\r\n                        point = p\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return point\r\n    },\r\n    _applyVisibleArea: function() {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        var visibleX = (rotated ? that.getValueAxis() : that.getArgumentAxis()).getVisibleArea();\r\n        var visibleY = (rotated ? that.getArgumentAxis() : that.getValueAxis()).getVisibleArea();\r\n        that._visibleArea = {\r\n            minX: visibleX[0],\r\n            maxX: visibleX[1],\r\n            minY: visibleY[0],\r\n            maxY: visibleY[1]\r\n        }\r\n    },\r\n    getPointCenterByArg: function(arg) {\r\n        var point = this.getPointsByArg(arg)[0];\r\n        return point ? point.getCenterCoord() : void 0\r\n    }\r\n});\r\nexports.polar = polar = (0, _extend3.extend)({}, baseScatterMethods, {\r\n    drawTrackers: function() {\r\n        chart.drawTrackers.call(this);\r\n        var cat = this._trackersTranslator;\r\n        var index;\r\n        if (!this.isVisible()) {\r\n            return\r\n        }(0, _iterator.each)(cat, function(i, category) {\r\n            if (category) {\r\n                index = i;\r\n                return false\r\n            }\r\n        });\r\n        cat[index + 360] = cat[index]\r\n    },\r\n    getNeighborPoint: function(x, y) {\r\n        var pos = (0, _utils.convertXYToPolar)(this.getValueAxis().getCenter(), x, y);\r\n        return chart.getNeighborPoint.call(this, pos.phi, pos.r)\r\n    },\r\n    _applyVisibleArea: function() {\r\n        var that = this;\r\n        var canvas = that.getValueAxis().getCanvas();\r\n        that._visibleArea = {\r\n            minX: canvas.left,\r\n            maxX: canvas.width - canvas.right,\r\n            minY: canvas.top,\r\n            maxY: canvas.height - canvas.bottom\r\n        }\r\n    },\r\n    getSeriesPairCoord: function(params, isArgument) {\r\n        var coords = null;\r\n        var paramName = isArgument ? \"argument\" : \"radius\";\r\n        var points = this.getVisiblePoints();\r\n        for (var i = 0; i < points.length; i++) {\r\n            var p = points[i];\r\n            var tmpPoint = (0, _type.isDefined)(p[paramName]) && (0, _type.isDefined)(params[paramName]) && p[paramName].valueOf() === params[paramName].valueOf() ? {\r\n                x: p.x,\r\n                y: p.y\r\n            } : void 0;\r\n            if ((0, _type.isDefined)(tmpPoint)) {\r\n                coords = tmpPoint;\r\n                break\r\n            }\r\n        }\r\n        return coords\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}