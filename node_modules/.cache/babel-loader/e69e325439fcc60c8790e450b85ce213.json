{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/data.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.toComparable = exports.compileSetter = exports.compileGetter = void 0;\n\nvar _errors = _interopRequireDefault(require(\"../errors\"));\n\nvar _class = _interopRequireDefault(require(\"../class\"));\n\nvar _object = require(\"./object\");\n\nvar _type = require(\"./type\");\n\nvar _iterator = require(\"./iterator\");\n\nvar _variable_wrapper = _interopRequireDefault(require(\"./variable_wrapper\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar unwrapVariable = _variable_wrapper.default.unwrap;\nvar isWrapped = _variable_wrapper.default.isWrapped;\nvar assign = _variable_wrapper.default.assign;\n\nvar bracketsToDots = function bracketsToDots(expr) {\n  return expr.replace(/\\[/g, \".\").replace(/\\]/g, \"\");\n};\n\nvar readPropValue = function readPropValue(obj, propName, options) {\n  options = options || {};\n\n  if (\"this\" === propName) {\n    return unwrap(obj, options);\n  }\n\n  return unwrap(obj[propName], options);\n};\n\nvar assignPropValue = function assignPropValue(obj, propName, value, options) {\n  if (\"this\" === propName) {\n    throw new _errors.default.Error(\"E4016\");\n  }\n\n  var propValue = obj[propName];\n\n  if (options.unwrapObservables && isWrapped(propValue)) {\n    assign(propValue, value);\n  } else {\n    obj[propName] = value;\n  }\n};\n\nvar prepareOptions = function prepareOptions(options) {\n  options = options || {};\n  options.unwrapObservables = void 0 !== options.unwrapObservables ? options.unwrapObservables : true;\n  return options;\n};\n\nfunction unwrap(value, options) {\n  return options.unwrapObservables ? unwrapVariable(value) : value;\n}\n\nvar compileGetter = function compileGetter(expr) {\n  if (arguments.length > 1) {\n    expr = [].slice.call(arguments);\n  }\n\n  if (!expr || \"this\" === expr) {\n    return function (obj) {\n      return obj;\n    };\n  }\n\n  if (\"string\" === typeof expr) {\n    expr = bracketsToDots(expr);\n    var path = expr.split(\".\");\n    return function (obj, options) {\n      options = prepareOptions(options);\n      var functionAsIs = options.functionsAsIs;\n      var hasDefaultValue = (\"defaultValue\" in options);\n      var current = unwrap(obj, options);\n\n      for (var i = 0; i < path.length; i++) {\n        if (!current) {\n          if (null == current && hasDefaultValue) {\n            return options.defaultValue;\n          }\n\n          break;\n        }\n\n        var pathPart = path[i];\n\n        if (hasDefaultValue && (0, _type.isObject)(current) && !(pathPart in current)) {\n          return options.defaultValue;\n        }\n\n        var next = unwrap(current[pathPart], options);\n\n        if (!functionAsIs && (0, _type.isFunction)(next)) {\n          next = next.call(current);\n        }\n\n        current = next;\n      }\n\n      return current;\n    };\n  }\n\n  if (Array.isArray(expr)) {\n    return combineGetters(expr);\n  }\n\n  if ((0, _type.isFunction)(expr)) {\n    return expr;\n  }\n};\n\nexports.compileGetter = compileGetter;\n\nfunction combineGetters(getters) {\n  var compiledGetters = {};\n\n  for (var i = 0, l = getters.length; i < l; i++) {\n    var getter = getters[i];\n    compiledGetters[getter] = compileGetter(getter);\n  }\n\n  return function (obj, options) {\n    var result;\n    (0, _iterator.each)(compiledGetters, function (name) {\n      var value = this(obj, options);\n\n      if (void 0 === value) {\n        return;\n      }\n\n      var current = result || (result = {});\n      var path = name.split(\".\");\n      var last = path.length - 1;\n\n      for (var _i = 0; _i < last; _i++) {\n        var pathItem = path[_i];\n\n        if (!(pathItem in current)) {\n          current[pathItem] = {};\n        }\n\n        current = current[pathItem];\n      }\n\n      current[path[last]] = value;\n    });\n    return result;\n  };\n}\n\nvar ensurePropValueDefined = function ensurePropValueDefined(obj, propName, value, options) {\n  if ((0, _type.isDefined)(value)) {\n    return value;\n  }\n\n  var newValue = {};\n  assignPropValue(obj, propName, newValue, options);\n  return newValue;\n};\n\nvar compileSetter = function compileSetter(expr) {\n  expr = bracketsToDots(expr || \"this\").split(\".\");\n  var lastLevelIndex = expr.length - 1;\n  return function (obj, value, options) {\n    options = prepareOptions(options);\n    var currentValue = unwrap(obj, options);\n    expr.forEach(function (propertyName, levelIndex) {\n      var propertyValue = readPropValue(currentValue, propertyName, options);\n      var isPropertyFunc = !options.functionsAsIs && (0, _type.isFunction)(propertyValue) && !isWrapped(propertyValue);\n\n      if (levelIndex === lastLevelIndex) {\n        if (options.merge && (0, _type.isPlainObject)(value) && (!(0, _type.isDefined)(propertyValue) || (0, _type.isPlainObject)(propertyValue))) {\n          propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\n          (0, _object.deepExtendArraySafe)(propertyValue, value, false, true);\n        } else {\n          if (isPropertyFunc) {\n            currentValue[propertyName](value);\n          } else {\n            assignPropValue(currentValue, propertyName, value, options);\n          }\n        }\n      } else {\n        propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\n\n        if (isPropertyFunc) {\n          propertyValue = propertyValue.call(currentValue);\n        }\n\n        currentValue = propertyValue;\n      }\n    });\n  };\n};\n\nexports.compileSetter = compileSetter;\n\nvar toComparable = function toComparable(value, caseSensitive) {\n  if (value instanceof Date) {\n    return value.getTime();\n  }\n\n  if (value && value instanceof _class.default && value.valueOf) {\n    return value.valueOf();\n  }\n\n  if (!caseSensitive && \"string\" === typeof value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n};\n\nexports.toComparable = toComparable;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/core/utils/data.js"],"names":["exports","toComparable","compileSetter","compileGetter","_errors","_interopRequireDefault","require","_class","_object","_type","_iterator","_variable_wrapper","obj","__esModule","unwrapVariable","default","unwrap","isWrapped","assign","bracketsToDots","expr","replace","readPropValue","propName","options","assignPropValue","value","Error","propValue","unwrapObservables","prepareOptions","arguments","length","slice","call","path","split","functionAsIs","functionsAsIs","hasDefaultValue","current","i","defaultValue","pathPart","isObject","next","isFunction","Array","isArray","combineGetters","getters","compiledGetters","l","getter","result","each","name","last","_i","pathItem","ensurePropValueDefined","isDefined","newValue","lastLevelIndex","currentValue","forEach","propertyName","levelIndex","propertyValue","isPropertyFunc","merge","isPlainObject","deepExtendArraySafe","caseSensitive","Date","getTime","valueOf","toLowerCase"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/data.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.toComparable = exports.compileSetter = exports.compileGetter = void 0;\r\nvar _errors = _interopRequireDefault(require(\"../errors\"));\r\nvar _class = _interopRequireDefault(require(\"../class\"));\r\nvar _object = require(\"./object\");\r\nvar _type = require(\"./type\");\r\nvar _iterator = require(\"./iterator\");\r\nvar _variable_wrapper = _interopRequireDefault(require(\"./variable_wrapper\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar unwrapVariable = _variable_wrapper.default.unwrap;\r\nvar isWrapped = _variable_wrapper.default.isWrapped;\r\nvar assign = _variable_wrapper.default.assign;\r\nvar bracketsToDots = function(expr) {\r\n    return expr.replace(/\\[/g, \".\").replace(/\\]/g, \"\")\r\n};\r\nvar readPropValue = function(obj, propName, options) {\r\n    options = options || {};\r\n    if (\"this\" === propName) {\r\n        return unwrap(obj, options)\r\n    }\r\n    return unwrap(obj[propName], options)\r\n};\r\nvar assignPropValue = function(obj, propName, value, options) {\r\n    if (\"this\" === propName) {\r\n        throw new _errors.default.Error(\"E4016\")\r\n    }\r\n    var propValue = obj[propName];\r\n    if (options.unwrapObservables && isWrapped(propValue)) {\r\n        assign(propValue, value)\r\n    } else {\r\n        obj[propName] = value\r\n    }\r\n};\r\nvar prepareOptions = function(options) {\r\n    options = options || {};\r\n    options.unwrapObservables = void 0 !== options.unwrapObservables ? options.unwrapObservables : true;\r\n    return options\r\n};\r\n\r\nfunction unwrap(value, options) {\r\n    return options.unwrapObservables ? unwrapVariable(value) : value\r\n}\r\nvar compileGetter = function(expr) {\r\n    if (arguments.length > 1) {\r\n        expr = [].slice.call(arguments)\r\n    }\r\n    if (!expr || \"this\" === expr) {\r\n        return function(obj) {\r\n            return obj\r\n        }\r\n    }\r\n    if (\"string\" === typeof expr) {\r\n        expr = bracketsToDots(expr);\r\n        var path = expr.split(\".\");\r\n        return function(obj, options) {\r\n            options = prepareOptions(options);\r\n            var functionAsIs = options.functionsAsIs;\r\n            var hasDefaultValue = \"defaultValue\" in options;\r\n            var current = unwrap(obj, options);\r\n            for (var i = 0; i < path.length; i++) {\r\n                if (!current) {\r\n                    if (null == current && hasDefaultValue) {\r\n                        return options.defaultValue\r\n                    }\r\n                    break\r\n                }\r\n                var pathPart = path[i];\r\n                if (hasDefaultValue && (0, _type.isObject)(current) && !(pathPart in current)) {\r\n                    return options.defaultValue\r\n                }\r\n                var next = unwrap(current[pathPart], options);\r\n                if (!functionAsIs && (0, _type.isFunction)(next)) {\r\n                    next = next.call(current)\r\n                }\r\n                current = next\r\n            }\r\n            return current\r\n        }\r\n    }\r\n    if (Array.isArray(expr)) {\r\n        return combineGetters(expr)\r\n    }\r\n    if ((0, _type.isFunction)(expr)) {\r\n        return expr\r\n    }\r\n};\r\nexports.compileGetter = compileGetter;\r\n\r\nfunction combineGetters(getters) {\r\n    var compiledGetters = {};\r\n    for (var i = 0, l = getters.length; i < l; i++) {\r\n        var getter = getters[i];\r\n        compiledGetters[getter] = compileGetter(getter)\r\n    }\r\n    return function(obj, options) {\r\n        var result;\r\n        (0, _iterator.each)(compiledGetters, function(name) {\r\n            var value = this(obj, options);\r\n            if (void 0 === value) {\r\n                return\r\n            }\r\n            var current = result || (result = {});\r\n            var path = name.split(\".\");\r\n            var last = path.length - 1;\r\n            for (var _i = 0; _i < last; _i++) {\r\n                var pathItem = path[_i];\r\n                if (!(pathItem in current)) {\r\n                    current[pathItem] = {}\r\n                }\r\n                current = current[pathItem]\r\n            }\r\n            current[path[last]] = value\r\n        });\r\n        return result\r\n    }\r\n}\r\nvar ensurePropValueDefined = function(obj, propName, value, options) {\r\n    if ((0, _type.isDefined)(value)) {\r\n        return value\r\n    }\r\n    var newValue = {};\r\n    assignPropValue(obj, propName, newValue, options);\r\n    return newValue\r\n};\r\nvar compileSetter = function(expr) {\r\n    expr = bracketsToDots(expr || \"this\").split(\".\");\r\n    var lastLevelIndex = expr.length - 1;\r\n    return function(obj, value, options) {\r\n        options = prepareOptions(options);\r\n        var currentValue = unwrap(obj, options);\r\n        expr.forEach(function(propertyName, levelIndex) {\r\n            var propertyValue = readPropValue(currentValue, propertyName, options);\r\n            var isPropertyFunc = !options.functionsAsIs && (0, _type.isFunction)(propertyValue) && !isWrapped(propertyValue);\r\n            if (levelIndex === lastLevelIndex) {\r\n                if (options.merge && (0, _type.isPlainObject)(value) && (!(0, _type.isDefined)(propertyValue) || (0, _type.isPlainObject)(propertyValue))) {\r\n                    propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\r\n                    (0, _object.deepExtendArraySafe)(propertyValue, value, false, true)\r\n                } else {\r\n                    if (isPropertyFunc) {\r\n                        currentValue[propertyName](value)\r\n                    } else {\r\n                        assignPropValue(currentValue, propertyName, value, options)\r\n                    }\r\n                }\r\n            } else {\r\n                propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\r\n                if (isPropertyFunc) {\r\n                    propertyValue = propertyValue.call(currentValue)\r\n                }\r\n                currentValue = propertyValue\r\n            }\r\n        })\r\n    }\r\n};\r\nexports.compileSetter = compileSetter;\r\nvar toComparable = function(value, caseSensitive) {\r\n    if (value instanceof Date) {\r\n        return value.getTime()\r\n    }\r\n    if (value && value instanceof _class.default && value.valueOf) {\r\n        return value.valueOf()\r\n    }\r\n    if (!caseSensitive && \"string\" === typeof value) {\r\n        return value.toLowerCase()\r\n    }\r\n    return value\r\n};\r\nexports.toComparable = toComparable;\r\n"]},"metadata":{},"sourceType":"script"}