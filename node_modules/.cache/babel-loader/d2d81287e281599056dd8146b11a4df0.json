{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/pie_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _extend2 = require(\"../../../core/utils/extend\");\n\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\n\nvar _utils = require(\"../../core/utils\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _consts = _interopRequireDefault(require(\"../../components/consts\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _extend = _extend2.extend;\nvar _round = Math.round;\nvar _sqrt = Math.sqrt;\nvar _acos = Math.acos;\nvar DEG = 180 / Math.PI;\nvar _abs = Math.abs;\nvar RADIAL_LABEL_INDENT = _consts.default.radialLabelIndent;\n\nvar _default = _extend({}, _symbol_point.default, {\n  _updateData: function _updateData(data, argumentChanged) {\n    var that = this;\n\n    _symbol_point.default._updateData.call(this, data);\n\n    if (argumentChanged || !(0, _type.isDefined)(that._visible)) {\n      that._visible = true;\n    }\n\n    that.minValue = that.initialMinValue = that.originalMinValue = (0, _type.isDefined)(data.minValue) ? data.minValue : 0;\n  },\n  animate: function animate(complete, duration, delay) {\n    var that = this;\n    that.graphic.animate({\n      x: that.centerX,\n      y: that.centerY,\n      outerRadius: that.radiusOuter,\n      innerRadius: that.radiusInner,\n      startAngle: that.toAngle,\n      endAngle: that.fromAngle\n    }, {\n      delay: delay,\n      partitionDuration: duration\n    }, complete);\n  },\n  correctPosition: function correctPosition(correction) {\n    var that = this;\n    that.correctRadius(correction);\n    that.correctLabelRadius(correction.radiusOuter + RADIAL_LABEL_INDENT);\n    that.centerX = correction.centerX;\n    that.centerY = correction.centerY;\n  },\n  correctRadius: function correctRadius(correction) {\n    this.radiusInner = correction.radiusInner;\n    this.radiusOuter = correction.radiusOuter;\n  },\n  correctLabelRadius: function correctLabelRadius(radiusLabels) {\n    this.radiusLabels = radiusLabels;\n  },\n  correctValue: function correctValue(correction, percent, base) {\n    var that = this;\n    that.value = (base || that.normalInitialValue) + correction;\n    that.minValue = correction;\n    that.percent = percent;\n\n    that._label.setDataField(\"percent\", percent);\n  },\n  _updateLabelData: function _updateLabelData() {\n    this._label.setData(this._getLabelFormatObject());\n  },\n  _getShiftLabelCoords: function _getShiftLabelCoords() {\n    var that = this;\n\n    var bBox = that._label.getBoundingRect();\n\n    var coord = that._getLabelCoords(that._label);\n\n    var visibleArea = that._getVisibleArea();\n\n    if (that._isLabelDrawingWithoutPoints) {\n      return that._checkLabelPosition(coord, bBox, visibleArea);\n    } else {\n      return that._getLabelExtraCoord(coord, that._checkVerticalLabelPosition(coord, bBox, visibleArea), bBox);\n    }\n  },\n  _getLabelPosition: function _getLabelPosition(options) {\n    return options.position;\n  },\n  getAnnotationCoords: function getAnnotationCoords(location) {\n    return this._getElementCoords(\"edge\" !== location ? \"inside\" : \"outside\", this.radiusOuter, 0);\n  },\n  _getElementCoords: function _getElementCoords(position, elementRadius, radialOffset) {\n    var bBox = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    var that = this;\n    var angleFunctions = (0, _utils.getCosAndSin)(that.middleAngle);\n    var radiusInner = that.radiusInner;\n    var radiusOuter = that.radiusOuter;\n    var columnsPosition = \"columns\" === position;\n    var rad;\n    var x;\n\n    if (\"inside\" === position) {\n      rad = radiusInner + (radiusOuter - radiusInner) / 2 + radialOffset;\n      x = that.centerX + rad * angleFunctions.cos - bBox.width / 2;\n    } else {\n      rad = elementRadius + radialOffset;\n\n      if (angleFunctions.cos > .1 || columnsPosition && angleFunctions.cos >= 0) {\n        x = that.centerX + rad * angleFunctions.cos;\n      } else {\n        if (angleFunctions.cos < -.1 || columnsPosition && angleFunctions.cos < 0) {\n          x = that.centerX + rad * angleFunctions.cos - bBox.width;\n        } else {\n          x = that.centerX + rad * angleFunctions.cos - bBox.width / 2;\n        }\n      }\n    }\n\n    return {\n      x: x,\n      y: _round(that.centerY - rad * angleFunctions.sin - bBox.height / 2)\n    };\n  },\n  _getLabelCoords: function _getLabelCoords(label) {\n    var that = this;\n    var bBox = label.getBoundingRect();\n    var options = label.getLayoutOptions();\n\n    var position = that._getLabelPosition(options);\n\n    return that._getElementCoords(position, that.radiusLabels, options.radialOffset, bBox);\n  },\n  _correctLabelCoord: function _correctLabelCoord(coord, moveLabelsFromCenter) {\n    var that = this;\n    var label = that._label;\n    var bBox = label.getBoundingRect();\n    var labelWidth = bBox.width;\n    var options = label.getLayoutOptions();\n\n    var visibleArea = that._getVisibleArea();\n\n    var rightBorderX = visibleArea.maxX - labelWidth;\n    var leftBorderX = visibleArea.minX;\n    var angleOfPoint = (0, _utils.normalizeAngle)(that.middleAngle);\n    var centerX = that.centerX;\n    var connectorOffset = options.connectorOffset;\n    var x = coord.x;\n\n    if (\"columns\" === options.position) {\n      if (angleOfPoint <= 90 || angleOfPoint >= 270) {\n        x = rightBorderX;\n      } else {\n        x = leftBorderX;\n      }\n\n      coord.x = x;\n    } else {\n      if (\"inside\" !== options.position && moveLabelsFromCenter) {\n        if (angleOfPoint <= 90 || angleOfPoint >= 270) {\n          if (x - connectorOffset < centerX) {\n            x = centerX + connectorOffset;\n          }\n        } else {\n          if (x + labelWidth + connectorOffset > centerX) {\n            x = centerX - labelWidth - connectorOffset;\n          }\n        }\n\n        coord.x = x;\n      }\n    }\n\n    return coord;\n  },\n  drawLabel: function drawLabel() {\n    this.translate();\n    this._isLabelDrawingWithoutPoints = true;\n\n    this._drawLabel();\n\n    this._isLabelDrawingWithoutPoints = false;\n  },\n  updateLabelCoord: function updateLabelCoord(moveLabelsFromCenter) {\n    var that = this;\n\n    var bBox = that._label.getBoundingRect();\n\n    var coord = that._correctLabelCoord(bBox, moveLabelsFromCenter);\n\n    coord = that._checkHorizontalLabelPosition(coord, bBox, that._getVisibleArea());\n\n    that._label.shift(_round(coord.x), _round(bBox.y));\n  },\n  _checkVerticalLabelPosition: function _checkVerticalLabelPosition(coord, box, visibleArea) {\n    var x = coord.x;\n    var y = coord.y;\n\n    if (coord.y + box.height > visibleArea.maxY) {\n      y = visibleArea.maxY - box.height;\n    } else {\n      if (coord.y < visibleArea.minY) {\n        y = visibleArea.minY;\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getLabelExtraCoord: function _getLabelExtraCoord(coord, shiftCoord, box) {\n    return coord.y !== shiftCoord.y ? (0, _utils.getVerticallyShiftedAngularCoords)({\n      x: coord.x,\n      y: coord.y,\n      width: box.width,\n      height: box.height\n    }, shiftCoord.y - coord.y, {\n      x: this.centerX,\n      y: this.centerY\n    }) : coord;\n  },\n  _checkHorizontalLabelPosition: function _checkHorizontalLabelPosition(coord, box, visibleArea) {\n    var x = coord.x;\n    var y = coord.y;\n\n    if (coord.x + box.width > visibleArea.maxX) {\n      x = visibleArea.maxX - box.width;\n    } else {\n      if (coord.x < visibleArea.minX) {\n        x = visibleArea.minX;\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  applyWordWrap: function applyWordWrap(moveLabelsFromCenter) {\n    var that = this;\n    var label = that._label;\n    var box = label.getBoundingRect();\n\n    var visibleArea = that._getVisibleArea();\n\n    var position = label.getLayoutOptions().position;\n    var width = box.width;\n    var rowCountChanged = false;\n\n    if (\"columns\" === position && that.series.index > 0) {\n      width = visibleArea.maxX - that.centerX - that.radiusLabels;\n    } else {\n      if (\"inside\" === position) {\n        if (width > visibleArea.maxX - visibleArea.minX) {\n          width = visibleArea.maxX - visibleArea.minX;\n        }\n      } else {\n        if (moveLabelsFromCenter && box.x < that.centerX && box.width + box.x > that.centerX) {\n          width = Math.floor((visibleArea.maxX - visibleArea.minX) / 2);\n        } else {\n          if (box.x + width > visibleArea.maxX) {\n            width = visibleArea.maxX - box.x;\n          } else {\n            if (box.x < visibleArea.minX) {\n              width = box.x + width - visibleArea.minX;\n            }\n          }\n        }\n      }\n    }\n\n    if (width < box.width) {\n      rowCountChanged = label.fit(width);\n    }\n\n    return rowCountChanged;\n  },\n  setLabelTrackerData: function setLabelTrackerData() {\n    this._label.setTrackerData(this);\n  },\n  _checkLabelPosition: function _checkLabelPosition(coord, bBox, visibleArea) {\n    coord = this._checkHorizontalLabelPosition(coord, bBox, visibleArea);\n    return this._checkVerticalLabelPosition(coord, bBox, visibleArea);\n  },\n  _getLabelConnector: function _getLabelConnector() {\n    var that = this;\n    var rad = that.radiusOuter;\n    var seriesStyle = that._options.styles.normal;\n    var strokeWidthBy2 = seriesStyle[\"stroke-width\"] / 2;\n    var borderWidth = that.series.getOptions().containerBackgroundColor === seriesStyle.stroke ? _round(strokeWidthBy2) : _round(-strokeWidthBy2);\n    var angleFunctions = (0, _utils.getCosAndSin)(_round(that.middleAngle));\n    return {\n      x: _round(that.centerX + (rad - borderWidth) * angleFunctions.cos),\n      y: _round(that.centerY - (rad - borderWidth) * angleFunctions.sin),\n      angle: that.middleAngle\n    };\n  },\n  _drawMarker: function _drawMarker(renderer, group, animationEnabled, firstDrawing) {\n    var that = this;\n    var radiusOuter = that.radiusOuter;\n    var radiusInner = that.radiusInner;\n    var fromAngle = that.fromAngle;\n    var toAngle = that.toAngle;\n\n    if (animationEnabled) {\n      radiusInner = radiusOuter = 0;\n\n      if (!firstDrawing) {\n        fromAngle = toAngle = that.shiftedAngle;\n      }\n    }\n\n    that.graphic = renderer.arc(that.centerX, that.centerY, radiusInner, radiusOuter, toAngle, fromAngle).attr({\n      \"stroke-linejoin\": \"round\"\n    }).smartAttr(that._getStyle()).data({\n      \"chart-data-point\": that\n    }).sharp().append(group);\n  },\n  getTooltipParams: function getTooltipParams() {\n    var that = this;\n    var angleFunctions = (0, _utils.getCosAndSin)(that.middleAngle);\n    var radiusInner = that.radiusInner;\n    var radiusOuter = that.radiusOuter;\n    return {\n      x: that.centerX + (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.cos,\n      y: that.centerY - (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.sin,\n      offset: 0\n    };\n  },\n  _translate: function _translate() {\n    var that = this;\n    var angle = that.shiftedAngle || 0;\n    var value = that.value;\n    var minValue = that.minValue;\n\n    var translator = that._getValTranslator();\n\n    that.fromAngle = translator.translate(minValue) + angle;\n    that.toAngle = translator.translate(value) + angle;\n    that.middleAngle = translator.translate((value - minValue) / 2 + minValue) + angle;\n\n    if (!that.isVisible()) {\n      that.middleAngle = that.toAngle = that.fromAngle = that.fromAngle || angle;\n    }\n  },\n  getMarkerVisibility: function getMarkerVisibility() {\n    return true;\n  },\n  _updateMarker: function _updateMarker(animationEnabled, style, _, callback) {\n    var that = this;\n\n    if (!animationEnabled) {\n      style = _extend({\n        x: that.centerX,\n        y: that.centerY,\n        outerRadius: that.radiusOuter,\n        innerRadius: that.radiusInner,\n        startAngle: that.toAngle,\n        endAngle: that.fromAngle\n      }, style);\n    }\n\n    that.graphic.smartAttr(style).sharp();\n    callback && callback();\n  },\n  getLegendStyles: function getLegendStyles() {\n    return this._styles.legendStyles;\n  },\n  isInVisibleArea: function isInVisibleArea() {\n    return true;\n  },\n  hide: function hide() {\n    var that = this;\n\n    if (that._visible) {\n      that._visible = false;\n      that.hideTooltip();\n\n      that._options.visibilityChanged();\n    }\n  },\n  show: function show() {\n    var that = this;\n\n    if (!that._visible) {\n      that._visible = true;\n\n      that._options.visibilityChanged();\n    }\n  },\n  setInvisibility: function setInvisibility() {\n    this._label.draw(false);\n  },\n  isVisible: function isVisible() {\n    return this._visible;\n  },\n  _getFormatObject: function _getFormatObject(tooltip) {\n    var formatObject = _symbol_point.default._getFormatObject.call(this, tooltip);\n\n    var percent = this.percent;\n    formatObject.percent = percent;\n    formatObject.percentText = tooltip.formatValue(percent, \"percent\");\n    return formatObject;\n  },\n  getColor: function getColor() {\n    return this._styles.normal.fill;\n  },\n  coordsIn: function coordsIn(x, y) {\n    var that = this;\n    var lx = x - that.centerX;\n    var ly = y - that.centerY;\n\n    var r = _sqrt(lx * lx + ly * ly);\n\n    var fromAngle = that.fromAngle % 360;\n    var toAngle = that.toAngle % 360;\n    var angle;\n\n    if (r < that.radiusInner || r > that.radiusOuter || 0 === r) {\n      return false;\n    }\n\n    angle = _acos(lx / r) * DEG * (ly > 0 ? -1 : 1);\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    if (fromAngle === toAngle && _abs(that.toAngle - that.fromAngle) > 1e-4) {\n      return true;\n    } else {\n      return fromAngle >= toAngle ? angle <= fromAngle && angle >= toAngle : !(angle >= fromAngle && angle <= toAngle);\n    }\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/points/pie_point.js"],"names":["exports","default","_extend2","require","_symbol_point","_interopRequireDefault","_utils","_type","_consts","obj","__esModule","_extend","extend","_round","Math","round","_sqrt","sqrt","_acos","acos","DEG","PI","_abs","abs","RADIAL_LABEL_INDENT","radialLabelIndent","_default","_updateData","data","argumentChanged","that","call","isDefined","_visible","minValue","initialMinValue","originalMinValue","animate","complete","duration","delay","graphic","x","centerX","y","centerY","outerRadius","radiusOuter","innerRadius","radiusInner","startAngle","toAngle","endAngle","fromAngle","partitionDuration","correctPosition","correction","correctRadius","correctLabelRadius","radiusLabels","correctValue","percent","base","value","normalInitialValue","_label","setDataField","_updateLabelData","setData","_getLabelFormatObject","_getShiftLabelCoords","bBox","getBoundingRect","coord","_getLabelCoords","visibleArea","_getVisibleArea","_isLabelDrawingWithoutPoints","_checkLabelPosition","_getLabelExtraCoord","_checkVerticalLabelPosition","_getLabelPosition","options","position","getAnnotationCoords","location","_getElementCoords","elementRadius","radialOffset","arguments","length","width","height","angleFunctions","getCosAndSin","middleAngle","columnsPosition","rad","cos","sin","label","getLayoutOptions","_correctLabelCoord","moveLabelsFromCenter","labelWidth","rightBorderX","maxX","leftBorderX","minX","angleOfPoint","normalizeAngle","connectorOffset","drawLabel","translate","_drawLabel","updateLabelCoord","_checkHorizontalLabelPosition","shift","box","maxY","minY","shiftCoord","getVerticallyShiftedAngularCoords","applyWordWrap","rowCountChanged","series","index","floor","fit","setLabelTrackerData","setTrackerData","_getLabelConnector","seriesStyle","_options","styles","normal","strokeWidthBy2","borderWidth","getOptions","containerBackgroundColor","stroke","angle","_drawMarker","renderer","group","animationEnabled","firstDrawing","shiftedAngle","arc","attr","smartAttr","_getStyle","sharp","append","getTooltipParams","offset","_translate","translator","_getValTranslator","isVisible","getMarkerVisibility","_updateMarker","style","_","callback","getLegendStyles","_styles","legendStyles","isInVisibleArea","hide","hideTooltip","visibilityChanged","show","setInvisibility","draw","_getFormatObject","tooltip","formatObject","percentText","formatValue","getColor","fill","coordsIn","lx","ly","r","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/pie_point.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _extend2 = require(\"../../../core/utils/extend\");\r\nvar _symbol_point = _interopRequireDefault(require(\"./symbol_point\"));\r\nvar _utils = require(\"../../core/utils\");\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _consts = _interopRequireDefault(require(\"../../components/consts\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _extend = _extend2.extend;\r\nvar _round = Math.round;\r\nvar _sqrt = Math.sqrt;\r\nvar _acos = Math.acos;\r\nvar DEG = 180 / Math.PI;\r\nvar _abs = Math.abs;\r\nvar RADIAL_LABEL_INDENT = _consts.default.radialLabelIndent;\r\nvar _default = _extend({}, _symbol_point.default, {\r\n    _updateData: function(data, argumentChanged) {\r\n        var that = this;\r\n        _symbol_point.default._updateData.call(this, data);\r\n        if (argumentChanged || !(0, _type.isDefined)(that._visible)) {\r\n            that._visible = true\r\n        }\r\n        that.minValue = that.initialMinValue = that.originalMinValue = (0, _type.isDefined)(data.minValue) ? data.minValue : 0\r\n    },\r\n    animate: function(complete, duration, delay) {\r\n        var that = this;\r\n        that.graphic.animate({\r\n            x: that.centerX,\r\n            y: that.centerY,\r\n            outerRadius: that.radiusOuter,\r\n            innerRadius: that.radiusInner,\r\n            startAngle: that.toAngle,\r\n            endAngle: that.fromAngle\r\n        }, {\r\n            delay: delay,\r\n            partitionDuration: duration\r\n        }, complete)\r\n    },\r\n    correctPosition: function(correction) {\r\n        var that = this;\r\n        that.correctRadius(correction);\r\n        that.correctLabelRadius(correction.radiusOuter + RADIAL_LABEL_INDENT);\r\n        that.centerX = correction.centerX;\r\n        that.centerY = correction.centerY\r\n    },\r\n    correctRadius: function(correction) {\r\n        this.radiusInner = correction.radiusInner;\r\n        this.radiusOuter = correction.radiusOuter\r\n    },\r\n    correctLabelRadius: function(radiusLabels) {\r\n        this.radiusLabels = radiusLabels\r\n    },\r\n    correctValue: function(correction, percent, base) {\r\n        var that = this;\r\n        that.value = (base || that.normalInitialValue) + correction;\r\n        that.minValue = correction;\r\n        that.percent = percent;\r\n        that._label.setDataField(\"percent\", percent)\r\n    },\r\n    _updateLabelData: function() {\r\n        this._label.setData(this._getLabelFormatObject())\r\n    },\r\n    _getShiftLabelCoords: function() {\r\n        var that = this;\r\n        var bBox = that._label.getBoundingRect();\r\n        var coord = that._getLabelCoords(that._label);\r\n        var visibleArea = that._getVisibleArea();\r\n        if (that._isLabelDrawingWithoutPoints) {\r\n            return that._checkLabelPosition(coord, bBox, visibleArea)\r\n        } else {\r\n            return that._getLabelExtraCoord(coord, that._checkVerticalLabelPosition(coord, bBox, visibleArea), bBox)\r\n        }\r\n    },\r\n    _getLabelPosition: function(options) {\r\n        return options.position\r\n    },\r\n    getAnnotationCoords: function(location) {\r\n        return this._getElementCoords(\"edge\" !== location ? \"inside\" : \"outside\", this.radiusOuter, 0)\r\n    },\r\n    _getElementCoords: function(position, elementRadius, radialOffset) {\r\n        var bBox = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        };\r\n        var that = this;\r\n        var angleFunctions = (0, _utils.getCosAndSin)(that.middleAngle);\r\n        var radiusInner = that.radiusInner;\r\n        var radiusOuter = that.radiusOuter;\r\n        var columnsPosition = \"columns\" === position;\r\n        var rad;\r\n        var x;\r\n        if (\"inside\" === position) {\r\n            rad = radiusInner + (radiusOuter - radiusInner) / 2 + radialOffset;\r\n            x = that.centerX + rad * angleFunctions.cos - bBox.width / 2\r\n        } else {\r\n            rad = elementRadius + radialOffset;\r\n            if (angleFunctions.cos > .1 || columnsPosition && angleFunctions.cos >= 0) {\r\n                x = that.centerX + rad * angleFunctions.cos\r\n            } else {\r\n                if (angleFunctions.cos < -.1 || columnsPosition && angleFunctions.cos < 0) {\r\n                    x = that.centerX + rad * angleFunctions.cos - bBox.width\r\n                } else {\r\n                    x = that.centerX + rad * angleFunctions.cos - bBox.width / 2\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: _round(that.centerY - rad * angleFunctions.sin - bBox.height / 2)\r\n        }\r\n    },\r\n    _getLabelCoords: function(label) {\r\n        var that = this;\r\n        var bBox = label.getBoundingRect();\r\n        var options = label.getLayoutOptions();\r\n        var position = that._getLabelPosition(options);\r\n        return that._getElementCoords(position, that.radiusLabels, options.radialOffset, bBox)\r\n    },\r\n    _correctLabelCoord: function(coord, moveLabelsFromCenter) {\r\n        var that = this;\r\n        var label = that._label;\r\n        var bBox = label.getBoundingRect();\r\n        var labelWidth = bBox.width;\r\n        var options = label.getLayoutOptions();\r\n        var visibleArea = that._getVisibleArea();\r\n        var rightBorderX = visibleArea.maxX - labelWidth;\r\n        var leftBorderX = visibleArea.minX;\r\n        var angleOfPoint = (0, _utils.normalizeAngle)(that.middleAngle);\r\n        var centerX = that.centerX;\r\n        var connectorOffset = options.connectorOffset;\r\n        var x = coord.x;\r\n        if (\"columns\" === options.position) {\r\n            if (angleOfPoint <= 90 || angleOfPoint >= 270) {\r\n                x = rightBorderX\r\n            } else {\r\n                x = leftBorderX\r\n            }\r\n            coord.x = x\r\n        } else {\r\n            if (\"inside\" !== options.position && moveLabelsFromCenter) {\r\n                if (angleOfPoint <= 90 || angleOfPoint >= 270) {\r\n                    if (x - connectorOffset < centerX) {\r\n                        x = centerX + connectorOffset\r\n                    }\r\n                } else {\r\n                    if (x + labelWidth + connectorOffset > centerX) {\r\n                        x = centerX - labelWidth - connectorOffset\r\n                    }\r\n                }\r\n                coord.x = x\r\n            }\r\n        }\r\n        return coord\r\n    },\r\n    drawLabel: function() {\r\n        this.translate();\r\n        this._isLabelDrawingWithoutPoints = true;\r\n        this._drawLabel();\r\n        this._isLabelDrawingWithoutPoints = false\r\n    },\r\n    updateLabelCoord: function(moveLabelsFromCenter) {\r\n        var that = this;\r\n        var bBox = that._label.getBoundingRect();\r\n        var coord = that._correctLabelCoord(bBox, moveLabelsFromCenter);\r\n        coord = that._checkHorizontalLabelPosition(coord, bBox, that._getVisibleArea());\r\n        that._label.shift(_round(coord.x), _round(bBox.y))\r\n    },\r\n    _checkVerticalLabelPosition: function(coord, box, visibleArea) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (coord.y + box.height > visibleArea.maxY) {\r\n            y = visibleArea.maxY - box.height\r\n        } else {\r\n            if (coord.y < visibleArea.minY) {\r\n                y = visibleArea.minY\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getLabelExtraCoord: function(coord, shiftCoord, box) {\r\n        return coord.y !== shiftCoord.y ? (0, _utils.getVerticallyShiftedAngularCoords)({\r\n            x: coord.x,\r\n            y: coord.y,\r\n            width: box.width,\r\n            height: box.height\r\n        }, shiftCoord.y - coord.y, {\r\n            x: this.centerX,\r\n            y: this.centerY\r\n        }) : coord\r\n    },\r\n    _checkHorizontalLabelPosition: function(coord, box, visibleArea) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (coord.x + box.width > visibleArea.maxX) {\r\n            x = visibleArea.maxX - box.width\r\n        } else {\r\n            if (coord.x < visibleArea.minX) {\r\n                x = visibleArea.minX\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    applyWordWrap: function(moveLabelsFromCenter) {\r\n        var that = this;\r\n        var label = that._label;\r\n        var box = label.getBoundingRect();\r\n        var visibleArea = that._getVisibleArea();\r\n        var position = label.getLayoutOptions().position;\r\n        var width = box.width;\r\n        var rowCountChanged = false;\r\n        if (\"columns\" === position && that.series.index > 0) {\r\n            width = visibleArea.maxX - that.centerX - that.radiusLabels\r\n        } else {\r\n            if (\"inside\" === position) {\r\n                if (width > visibleArea.maxX - visibleArea.minX) {\r\n                    width = visibleArea.maxX - visibleArea.minX\r\n                }\r\n            } else {\r\n                if (moveLabelsFromCenter && box.x < that.centerX && box.width + box.x > that.centerX) {\r\n                    width = Math.floor((visibleArea.maxX - visibleArea.minX) / 2)\r\n                } else {\r\n                    if (box.x + width > visibleArea.maxX) {\r\n                        width = visibleArea.maxX - box.x\r\n                    } else {\r\n                        if (box.x < visibleArea.minX) {\r\n                            width = box.x + width - visibleArea.minX\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (width < box.width) {\r\n            rowCountChanged = label.fit(width)\r\n        }\r\n        return rowCountChanged\r\n    },\r\n    setLabelTrackerData: function() {\r\n        this._label.setTrackerData(this)\r\n    },\r\n    _checkLabelPosition: function(coord, bBox, visibleArea) {\r\n        coord = this._checkHorizontalLabelPosition(coord, bBox, visibleArea);\r\n        return this._checkVerticalLabelPosition(coord, bBox, visibleArea)\r\n    },\r\n    _getLabelConnector: function() {\r\n        var that = this;\r\n        var rad = that.radiusOuter;\r\n        var seriesStyle = that._options.styles.normal;\r\n        var strokeWidthBy2 = seriesStyle[\"stroke-width\"] / 2;\r\n        var borderWidth = that.series.getOptions().containerBackgroundColor === seriesStyle.stroke ? _round(strokeWidthBy2) : _round(-strokeWidthBy2);\r\n        var angleFunctions = (0, _utils.getCosAndSin)(_round(that.middleAngle));\r\n        return {\r\n            x: _round(that.centerX + (rad - borderWidth) * angleFunctions.cos),\r\n            y: _round(that.centerY - (rad - borderWidth) * angleFunctions.sin),\r\n            angle: that.middleAngle\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled, firstDrawing) {\r\n        var that = this;\r\n        var radiusOuter = that.radiusOuter;\r\n        var radiusInner = that.radiusInner;\r\n        var fromAngle = that.fromAngle;\r\n        var toAngle = that.toAngle;\r\n        if (animationEnabled) {\r\n            radiusInner = radiusOuter = 0;\r\n            if (!firstDrawing) {\r\n                fromAngle = toAngle = that.shiftedAngle\r\n            }\r\n        }\r\n        that.graphic = renderer.arc(that.centerX, that.centerY, radiusInner, radiusOuter, toAngle, fromAngle).attr({\r\n            \"stroke-linejoin\": \"round\"\r\n        }).smartAttr(that._getStyle()).data({\r\n            \"chart-data-point\": that\r\n        }).sharp().append(group)\r\n    },\r\n    getTooltipParams: function() {\r\n        var that = this;\r\n        var angleFunctions = (0, _utils.getCosAndSin)(that.middleAngle);\r\n        var radiusInner = that.radiusInner;\r\n        var radiusOuter = that.radiusOuter;\r\n        return {\r\n            x: that.centerX + (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.cos,\r\n            y: that.centerY - (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.sin,\r\n            offset: 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var that = this;\r\n        var angle = that.shiftedAngle || 0;\r\n        var value = that.value;\r\n        var minValue = that.minValue;\r\n        var translator = that._getValTranslator();\r\n        that.fromAngle = translator.translate(minValue) + angle;\r\n        that.toAngle = translator.translate(value) + angle;\r\n        that.middleAngle = translator.translate((value - minValue) / 2 + minValue) + angle;\r\n        if (!that.isVisible()) {\r\n            that.middleAngle = that.toAngle = that.fromAngle = that.fromAngle || angle\r\n        }\r\n    },\r\n    getMarkerVisibility: function() {\r\n        return true\r\n    },\r\n    _updateMarker: function(animationEnabled, style, _, callback) {\r\n        var that = this;\r\n        if (!animationEnabled) {\r\n            style = _extend({\r\n                x: that.centerX,\r\n                y: that.centerY,\r\n                outerRadius: that.radiusOuter,\r\n                innerRadius: that.radiusInner,\r\n                startAngle: that.toAngle,\r\n                endAngle: that.fromAngle\r\n            }, style)\r\n        }\r\n        that.graphic.smartAttr(style).sharp();\r\n        callback && callback()\r\n    },\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    isInVisibleArea: function() {\r\n        return true\r\n    },\r\n    hide: function() {\r\n        var that = this;\r\n        if (that._visible) {\r\n            that._visible = false;\r\n            that.hideTooltip();\r\n            that._options.visibilityChanged()\r\n        }\r\n    },\r\n    show: function() {\r\n        var that = this;\r\n        if (!that._visible) {\r\n            that._visible = true;\r\n            that._options.visibilityChanged()\r\n        }\r\n    },\r\n    setInvisibility: function() {\r\n        this._label.draw(false)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    _getFormatObject: function(tooltip) {\r\n        var formatObject = _symbol_point.default._getFormatObject.call(this, tooltip);\r\n        var percent = this.percent;\r\n        formatObject.percent = percent;\r\n        formatObject.percentText = tooltip.formatValue(percent, \"percent\");\r\n        return formatObject\r\n    },\r\n    getColor: function() {\r\n        return this._styles.normal.fill\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var that = this;\r\n        var lx = x - that.centerX;\r\n        var ly = y - that.centerY;\r\n        var r = _sqrt(lx * lx + ly * ly);\r\n        var fromAngle = that.fromAngle % 360;\r\n        var toAngle = that.toAngle % 360;\r\n        var angle;\r\n        if (r < that.radiusInner || r > that.radiusOuter || 0 === r) {\r\n            return false\r\n        }\r\n        angle = _acos(lx / r) * DEG * (ly > 0 ? -1 : 1);\r\n        if (angle < 0) {\r\n            angle += 360\r\n        }\r\n        if (fromAngle === toAngle && _abs(that.toAngle - that.fromAngle) > 1e-4) {\r\n            return true\r\n        } else {\r\n            return fromAngle >= toAngle ? angle <= fromAngle && angle >= toAngle : !(angle >= fromAngle && angle <= toAngle)\r\n        }\r\n    }\r\n});\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}