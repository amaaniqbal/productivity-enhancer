{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/base_series.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.Series = Series;\nexports.mixins = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend2 = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _base_point = require(\"./points/base_point\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _consts = _interopRequireDefault(require(\"../components/consts\"));\n\nvar _range_data_calculator = _interopRequireDefault(require(\"./helpers/range_data_calculator\"));\n\nvar scatterSeries = _interopRequireWildcard(require(\"./scatter_series\"));\n\nvar lineSeries = _interopRequireWildcard(require(\"./line_series\"));\n\nvar areaSeries = _interopRequireWildcard(require(\"./area_series\"));\n\nvar barSeries = _interopRequireWildcard(require(\"./bar_series\"));\n\nvar _range_series = require(\"./range_series\");\n\nvar _bubble_series = require(\"./bubble_series\");\n\nvar pieSeries = _interopRequireWildcard(require(\"./pie_series\"));\n\nvar financialSeries = _interopRequireWildcard(require(\"./financial_series\"));\n\nvar stackedSeries = _interopRequireWildcard(require(\"./stacked_series\"));\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar seriesNS = {};\nvar states = _consts.default.states;\nvar DISCRETE = \"discrete\";\nvar SELECTED_STATE = states.selectedMark;\nvar HOVER_STATE = states.hoverMark;\nvar HOVER = states.hover;\nvar NORMAL = states.normal;\nvar SELECTION = states.selection;\nvar APPLY_SELECTED = states.applySelected;\nvar APPLY_HOVER = states.applyHover;\nvar RESET_ITEM = states.resetItem;\nvar NONE_MODE = \"none\";\nvar INCLUDE_POINTS = \"includepoints\";\nvar NEAREST_POINT = \"nearestpoint\";\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\nvar ALL_SERIES_POINTS = \"allseriespoints\";\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\nvar POINT_HOVER = \"pointHover\";\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\nvar SERIES_SELECT = \"seriesSelect\";\nvar POINT_SELECT = \"pointSelect\";\nvar POINT_DESELECT = \"pointDeselect\";\n\nvar getEmptyBusinessRange = function () {\n  return {\n    arg: {},\n    val: {}\n  };\n};\n\nfunction triggerEvent(element, event, point) {\n  element && element.trigger(event, point);\n}\n\nseriesNS.mixins = {\n  chart: {},\n  pie: {},\n  polar: {}\n};\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\n(0, _extend2.extend)(seriesNS.mixins.pie, pieSeries);\n(0, _extend2.extend)(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, _range_series.chart, _bubble_series.chart, financialSeries, stackedSeries.chart);\n(0, _extend2.extend)(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, stackedSeries.polar);\n\nfunction includePointsMode(mode) {\n  mode = (0, _utils.normalizeEnum)(mode);\n  return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS;\n}\n\nfunction getLabelOptions(labelOptions, defaultColor) {\n  var opt = labelOptions || {};\n  var labelFont = (0, _extend2.extend)({}, opt.font) || {};\n  var labelBorder = opt.border || {};\n  var labelConnector = opt.connector || {};\n  var backgroundAttr = {\n    fill: opt.backgroundColor || defaultColor,\n    \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\n    stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\n    dashStyle: labelBorder.dashStyle\n  };\n  var connectorAttr = {\n    stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\n    \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\n  };\n  labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === (0, _utils.normalizeEnum)(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\n  return {\n    alignment: opt.alignment,\n    format: opt.format,\n    argumentFormat: opt.argumentFormat,\n    customizeText: (0, _type.isFunction)(opt.customizeText) ? opt.customizeText : void 0,\n    attributes: {\n      font: labelFont\n    },\n    visible: 0 !== labelFont.size ? opt.visible : false,\n    showForZeroValues: opt.showForZeroValues,\n    horizontalOffset: opt.horizontalOffset,\n    verticalOffset: opt.verticalOffset,\n    radialOffset: opt.radialOffset,\n    background: backgroundAttr,\n    position: opt.position,\n    connector: connectorAttr,\n    rotationAngle: opt.rotationAngle,\n    wordWrap: opt.wordWrap,\n    textOverflow: opt.textOverflow,\n    cssClass: opt.cssClass\n  };\n}\n\nfunction setPointHoverState(point, legendCallback) {\n  point.fullState |= HOVER_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction releasePointHoverState(point, legendCallback) {\n  point.fullState &= ~HOVER_STATE;\n  point.applyView(legendCallback);\n  point.releaseHoverState();\n}\n\nfunction setPointSelectedState(point, legendCallback) {\n  point.fullState |= SELECTED_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction releasePointSelectedState(point, legendCallback) {\n  point.fullState &= ~SELECTED_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction mergePointOptionsCore(base, extra) {\n  var options = (0, _extend2.extend)({}, base, extra);\n  options.border = (0, _extend2.extend)({}, base && base.border, extra && extra.border);\n  return options;\n}\n\nfunction mergePointOptions(base, extra) {\n  var options = mergePointOptionsCore(base, extra);\n  options.image = (0, _extend2.extend)(true, {}, base.image, extra.image);\n  options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\n  options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\n  return options;\n}\n\nfunction Series(settings, options) {\n  var that = this;\n  that.fullState = 0;\n  that._extGroups = settings;\n  that._renderer = settings.renderer;\n  that._group = settings.renderer.g().attr({\n    \"class\": \"dxc-series\"\n  });\n  that._eventTrigger = settings.eventTrigger;\n  that._eventPipe = settings.eventPipe;\n  that._incidentOccurred = settings.incidentOccurred;\n  that._legendCallback = _common.noop;\n  that.updateOptions(options, settings);\n}\n\nfunction getData(pointData) {\n  return pointData.data;\n}\n\nfunction getValueChecker(axisType, axis) {\n  if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\n    return function () {\n      return true;\n    };\n  } else {\n    return function (value) {\n      return value > 0;\n    };\n  }\n}\n\nSeries.prototype = {\n  constructor: Series,\n  _createLegendState: _common.noop,\n  getLegendStyles: function () {\n    return this._styles.legendStyles;\n  },\n  _createStyles: function (options) {\n    var that = this;\n    var mainSeriesColor = options.mainSeriesColor;\n    that._styles = {\n      normal: that._parseStyle(options, mainSeriesColor, mainSeriesColor),\n      hover: that._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\n      selection: that._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\n      legendStyles: {\n        normal: that._createLegendState(options, mainSeriesColor),\n        hover: that._createLegendState(options.hoverStyle || {}, mainSeriesColor),\n        selection: that._createLegendState(options.selectionStyle || {}, mainSeriesColor)\n      }\n    };\n  },\n  setClippingParams: function (baseId, wideId, forceClipping) {\n    var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\n    this._paneClipRectID = baseId;\n    this._widePaneClipRectID = wideId;\n    this._forceClipping = forceClipping;\n    this._clipLabels = clipLabels;\n  },\n  applyClip: function () {\n    this._group.attr({\n      \"clip-path\": this._paneClipRectID\n    });\n  },\n  resetClip: function () {\n    this._group.attr({\n      \"clip-path\": null\n    });\n  },\n  getTagField: function () {\n    return this._options.tagField || \"tag\";\n  },\n  getValueFields: _common.noop,\n  getSizeField: _common.noop,\n  getArgumentField: _common.noop,\n  getPoints: function () {\n    return this._points;\n  },\n  getPointsInViewPort: function () {\n    return _range_data_calculator.default.getPointsInViewPort(this);\n  },\n  _createPoint: function (data, index, oldPoint) {\n    data.index = index;\n    var that = this;\n    var pointsByArgument = that.pointsByArgument;\n\n    var options = that._getCreatingPointOptions(data);\n\n    var arg = data.argument.valueOf();\n    var point = oldPoint;\n\n    if (point) {\n      point.update(data, options);\n    } else {\n      point = new _base_point.Point(that, data, options);\n\n      if (that.isSelected() && includePointsMode(that.lastSelectionMode)) {\n        point.setView(SELECTION);\n      }\n    }\n\n    var pointByArgument = pointsByArgument[arg];\n\n    if (pointByArgument) {\n      pointByArgument.push(point);\n    } else {\n      pointsByArgument[arg] = [point];\n    }\n\n    if (point.hasValue()) {\n      that.customizePoint(point, data);\n    }\n\n    return point;\n  },\n  getRangeData: function () {\n    return this._visible ? this._getRangeData() : getEmptyBusinessRange();\n  },\n  getArgumentRange: function () {\n    return this._visible ? _range_data_calculator.default.getArgumentRange(this) : getEmptyBusinessRange();\n  },\n  getViewport: function () {\n    return _range_data_calculator.default.getViewport(this);\n  },\n  _deleteGroup: function (groupName) {\n    var group = this[groupName];\n\n    if (group) {\n      group.dispose();\n      this[groupName] = null;\n    }\n  },\n  updateOptions: function (newOptions, settings) {\n    var that = this;\n    var widgetType = newOptions.widgetType;\n    var oldType = that.type;\n    var newType = newOptions.type;\n    that.type = newType && (0, _utils.normalizeEnum)(newType.toString());\n\n    if (!that._checkType(widgetType) || that._checkPolarBarType(widgetType, newOptions)) {\n      that.dispose();\n      that.isUpdated = false;\n      return;\n    }\n\n    if (oldType !== that.type) {\n      that._firstDrawing = true;\n\n      that._resetType(oldType, widgetType);\n\n      that._setType(that.type, widgetType);\n    } else {\n      that._defineDrawingState();\n    }\n\n    that._options = newOptions;\n    that._pointOptions = null;\n    that.name = newOptions.name;\n    that.pane = newOptions.pane;\n    that.tag = newOptions.tag;\n\n    if (settings) {\n      that._seriesModes = settings.commonSeriesModes || that._seriesModes;\n      that._valueAxis = settings.valueAxis || that._valueAxis;\n      that.axis = that._valueAxis && that._valueAxis.name;\n      that._argumentAxis = settings.argumentAxis || that._argumentAxis;\n    }\n\n    that._createStyles(newOptions);\n\n    that._stackName = null;\n\n    that._updateOptions(newOptions);\n\n    that._visible = newOptions.visible;\n    that.isUpdated = true;\n    that.stack = newOptions.stack;\n    that.barOverlapGroup = newOptions.barOverlapGroup;\n\n    that._createGroups();\n\n    that._processEmptyValue = newOptions.ignoreEmptyPoints ? function (x) {\n      return null === x ? void 0 : x;\n    } : function (x) {\n      return x;\n    };\n  },\n  _defineDrawingState: function () {\n    this._firstDrawing = true;\n  },\n  _disposePoints: function (points) {\n    (0, _iterator.each)(points || [], function (_, p) {\n      p.dispose();\n    });\n  },\n  updateDataType: function (settings) {\n    var that = this;\n    that.argumentType = settings.argumentType;\n    that.valueType = settings.valueType;\n    that.argumentAxisType = settings.argumentAxisType;\n    that.valueAxisType = settings.valueAxisType;\n    that.showZero = settings.showZero;\n    this._argumentChecker = getValueChecker(settings.argumentAxisType, that.getArgumentAxis());\n    this._valueChecker = getValueChecker(settings.valueAxisType, that.getValueAxis());\n    return that;\n  },\n  _argumentChecker: function () {\n    return true;\n  },\n  _valueChecker: function () {\n    return true;\n  },\n  getOptions: function () {\n    return this._options;\n  },\n  _getOldPoint: function (data, oldPointsByArgument, index) {\n    var arg = data.argument && data.argument.valueOf();\n    var point = (oldPointsByArgument[arg] || [])[0];\n\n    if (point) {\n      oldPointsByArgument[arg].splice(0, 1);\n    }\n\n    return point;\n  },\n  updateData: function (data) {\n    var that = this;\n    var options = that._options;\n    var nameField = options.nameField;\n    data = data || [];\n\n    if (data.length) {\n      that._canRenderCompleteHandle = true;\n    }\n\n    var dataSelector = this._getPointDataSelector();\n\n    var itemsWithoutArgument = 0;\n    that._data = data.reduce(function (data, dataItem, index) {\n      var pointDataItem = dataSelector(dataItem);\n\n      if ((0, _type.isDefined)(pointDataItem.argument)) {\n        if (!nameField || dataItem[nameField] === options.nameFieldValue) {\n          pointDataItem.index = index;\n          data.push(pointDataItem);\n        }\n      } else {\n        itemsWithoutArgument++;\n      }\n\n      return data;\n    }, []);\n\n    if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\n      that._incidentOccurred(\"W2002\", [that.name, that.getArgumentField()]);\n    }\n\n    that._endUpdateData();\n  },\n  _getData: function () {\n    var data = this._data || [];\n\n    if (this.useAggregation()) {\n      data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data);\n    }\n\n    return data;\n  },\n  useAggregation: function () {\n    var aggregation = this.getOptions().aggregation;\n    return aggregation && aggregation.enabled;\n  },\n  autoHidePointMarkersEnabled: _common.noop,\n  usePointsToDefineAutoHiding: _common.noop,\n  createPoints: function (useAllAggregatedPoints) {\n    this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\n\n    this._createPoints();\n  },\n  _normalizeUsingAllAggregatedPoints: function (useAllAggregatedPoints) {\n    this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints);\n  },\n  _createPoints: function () {\n    var that = this;\n    var oldPointsByArgument = that.pointsByArgument || {};\n\n    var data = that._getData();\n\n    that.pointsByArgument = {};\n\n    that._calculateErrorBars(data);\n\n    var skippedFields = {};\n    var points = data.reduce(function (points, pointDataItem) {\n      if (that._checkData(pointDataItem, skippedFields)) {\n        var pointIndex = points.length;\n\n        var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\n\n        var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\n\n        points.push(point);\n      }\n\n      return points;\n    }, []);\n\n    for (var field in skippedFields) {\n      if (skippedFields[field] === data.length) {\n        that._incidentOccurred(\"W2002\", [that.name, field]);\n      }\n    }\n\n    Object.keys(oldPointsByArgument).forEach(function (key) {\n      return that._disposePoints(oldPointsByArgument[key]);\n    });\n    that._points = points;\n  },\n  _removeOldSegments: function () {\n    var that = this;\n    var startIndex = that._segments.length;\n    (0, _iterator.each)(that._graphics.splice(startIndex, that._graphics.length) || [], function (_, elem) {\n      that._removeElement(elem);\n    });\n\n    if (that._trackers) {\n      (0, _iterator.each)(that._trackers.splice(startIndex, that._trackers.length) || [], function (_, elem) {\n        elem.remove();\n      });\n    }\n  },\n  _drawElements: function (animationEnabled, firstDrawing, translateAllPoints) {\n    var that = this;\n    var points = that._points || [];\n\n    var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\n\n    var groupForPoint = {\n      markers: that._markersGroup,\n      errorBars: that._errorBarGroup\n    };\n    that._drawnPoints = [];\n    that._graphics = that._graphics || [];\n    that._segments = [];\n    var segments = points.reduce(function (segments, p) {\n      var segment = segments[segments.length - 1];\n\n      if (!p.translated || translateAllPoints) {\n        p.translate();\n        !translateAllPoints && p.setDefaultCoords();\n      }\n\n      if (p.hasValue() && p.hasCoords()) {\n        translateAllPoints && that._drawPoint({\n          point: p,\n          groups: groupForPoint,\n          hasAnimation: animationEnabled,\n          firstDrawing: firstDrawing\n        });\n        segment.push(p);\n      } else {\n        if (!p.hasValue()) {\n          segment.length && segments.push([]);\n        } else {\n          p.setInvisibility();\n        }\n      }\n\n      return segments;\n    }, [[]]);\n    segments.forEach(function (segment, index) {\n      if (segment.length) {\n        that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1);\n      }\n    }, segments);\n    that._firstDrawing = !points.length;\n\n    that._removeOldSegments();\n\n    animationEnabled && that._animate(firstDrawing);\n  },\n  draw: function (animationEnabled, hideLayoutLabels, legendCallback) {\n    var that = this;\n    var firstDrawing = that._firstDrawing;\n    that._legendCallback = legendCallback || that._legendCallback;\n\n    if (!that._visible) {\n      animationEnabled = false;\n\n      that._group.remove();\n\n      return;\n    }\n\n    that._appendInGroup();\n\n    that._applyVisibleArea();\n\n    that._setGroupsSettings(animationEnabled, firstDrawing);\n\n    !firstDrawing && !that._resetApplyingAnimation && that._drawElements(false, firstDrawing, false);\n\n    that._drawElements(animationEnabled, firstDrawing, true);\n\n    hideLayoutLabels && that.hideLabels();\n\n    if (that.isSelected()) {\n      that._changeStyle(that.lastSelectionMode, void 0, true);\n    } else {\n      if (that.isHovered()) {\n        that._changeStyle(that.lastHoverMode, void 0, true);\n      } else {\n        that._applyStyle(that._styles.normal);\n      }\n    }\n\n    that._resetApplyingAnimation = false;\n  },\n  _setLabelGroupSettings: function (animationEnabled) {\n    var settings = {\n      \"class\": \"dxc-labels\",\n      \"pointer-events\": \"none\"\n    };\n    this._clipLabels && this._applyElementsClipRect(settings);\n\n    this._applyClearingSettings(settings);\n\n    animationEnabled && (settings.opacity = .001);\n\n    this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup);\n  },\n  _checkType: function (widgetType) {\n    return !!seriesNS.mixins[widgetType][this.type];\n  },\n  _checkPolarBarType: function (widgetType, options) {\n    return \"polar\" === widgetType && options.spiderWidget && this.type.indexOf(\"bar\") !== -1;\n  },\n  _resetType: function (seriesType, widgetType) {\n    var methodName;\n    var methods;\n\n    if (seriesType) {\n      methods = seriesNS.mixins[widgetType][seriesType];\n\n      for (methodName in methods) {\n        delete this[methodName];\n      }\n    }\n  },\n  _setType: function (seriesType, widgetType) {\n    var methodName;\n    var methods = seriesNS.mixins[widgetType][seriesType];\n\n    for (methodName in methods) {\n      this[methodName] = methods[methodName];\n    }\n  },\n  _setPointsView: function (view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.setView(view);\n      }\n    });\n  },\n  _resetPointsView: function (view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.resetView(view);\n      }\n    });\n  },\n  _resetNearestPoint: function () {\n    var that = this;\n    that._nearestPoint && null !== that._nearestPoint.series && that._nearestPoint.resetView(HOVER);\n    that._nearestPoint = null;\n  },\n  _setSelectedState: function (mode) {\n    var that = this;\n    that.lastSelectionMode = (0, _utils.normalizeEnum)(mode || that._options.selectionMode);\n    that.fullState = that.fullState | SELECTED_STATE;\n\n    that._resetNearestPoint();\n\n    that._changeStyle(that.lastSelectionMode);\n\n    if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\n      that._resetPointsView(HOVER);\n    }\n  },\n  _releaseSelectedState: function () {\n    var that = this;\n    that.fullState = that.fullState & ~SELECTED_STATE;\n\n    that._changeStyle(that.lastSelectionMode, SELECTION);\n\n    if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\n      that._setPointsView(HOVER);\n    }\n  },\n  isFullStackedSeries: function () {\n    return 0 === this.type.indexOf(\"fullstacked\");\n  },\n  isStackedSeries: function () {\n    return 0 === this.type.indexOf(\"stacked\");\n  },\n  resetApplyingAnimation: function (isFirstDrawing) {\n    this._resetApplyingAnimation = true;\n\n    if (isFirstDrawing) {\n      this._firstDrawing = true;\n    }\n  },\n  isFinancialSeries: function () {\n    return \"stock\" === this.type || \"candlestick\" === this.type;\n  },\n  _canChangeView: function () {\n    return !this.isSelected() && (0, _utils.normalizeEnum)(this._options.hoverMode) !== NONE_MODE;\n  },\n  _changeStyle: function (mode, resetView, skipPoints) {\n    var that = this;\n    var state = that.fullState;\n    var styles = [NORMAL, HOVER, SELECTION, SELECTION];\n\n    if (\"none\" === that.lastHoverMode) {\n      state &= ~HOVER_STATE;\n    }\n\n    if (\"none\" === that.lastSelectionMode) {\n      state &= ~SELECTED_STATE;\n    }\n\n    if (includePointsMode(mode) && !skipPoints) {\n      if (!resetView) {\n        that._setPointsView(styles[state]);\n      } else {\n        that._resetPointsView(resetView);\n      }\n    }\n\n    that._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\n\n    that._applyStyle(that._styles[styles[state]]);\n  },\n  updateHover: function (x, y) {\n    var that = this;\n    var currentNearestPoint = that._nearestPoint;\n    var point = that.isHovered() && that.lastHoverMode === NEAREST_POINT && that.getNeighborPoint(x, y);\n\n    if (point !== currentNearestPoint && !(that.isSelected() && that.lastSelectionMode !== NONE_MODE)) {\n      that._resetNearestPoint();\n\n      if (point) {\n        point.setView(HOVER);\n        that._nearestPoint = point;\n      }\n    }\n  },\n  _getMainAxisName: function () {\n    return this._options.rotated ? \"X\" : \"Y\";\n  },\n  areLabelsVisible: function () {\n    return !(0, _type.isDefined)(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount;\n  },\n  getLabelVisibility: function () {\n    return this.areLabelsVisible() && this._options.label && this._options.label.visible;\n  },\n  customizePoint: function customizePoint(point, pointData) {\n    var that = this;\n    var options = that._options;\n    var customizePoint = options.customizePoint;\n    var customizeObject;\n    var pointOptions;\n    var customLabelOptions;\n    var customOptions;\n    var customizeLabel = options.customizeLabel;\n    var useLabelCustomOptions;\n    var usePointCustomOptions;\n\n    if (customizeLabel && customizeLabel.call) {\n      customizeObject = (0, _extend2.extend)({\n        seriesName: that.name\n      }, pointData);\n      customizeObject.series = that;\n      customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\n      useLabelCustomOptions = customLabelOptions && !(0, _type.isEmptyObject)(customLabelOptions);\n      customLabelOptions = useLabelCustomOptions ? (0, _extend2.extend)(true, {}, options.label, customLabelOptions) : null;\n    }\n\n    if (customizePoint && customizePoint.call) {\n      customizeObject = customizeObject || (0, _extend2.extend)({\n        seriesName: that.name\n      }, pointData);\n      customizeObject.series = that;\n      customOptions = customizePoint.call(customizeObject, customizeObject);\n      usePointCustomOptions = customOptions && !(0, _type.isEmptyObject)(customOptions);\n    }\n\n    if (useLabelCustomOptions || usePointCustomOptions) {\n      pointOptions = that._parsePointOptions(that._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\n      pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\n      pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\n      point.updateOptions(pointOptions);\n    }\n  },\n  show: function () {\n    if (!this._visible) {\n      this._changeVisibility(true);\n    }\n  },\n  hide: function () {\n    if (this._visible) {\n      this._changeVisibility(false);\n    }\n  },\n  _changeVisibility: function (visibility) {\n    var that = this;\n    that._visible = that._options.visible = visibility;\n\n    that._updatePointsVisibility();\n\n    that.hidePointTooltip();\n\n    that._options.visibilityChanged(that);\n  },\n  _updatePointsVisibility: _common.noop,\n  hideLabels: function () {\n    (0, _iterator.each)(this._points, function (_, point) {\n      point._label.draw(false);\n    });\n  },\n  _parsePointOptions: function (pointOptions, labelOptions, data, point) {\n    var that = this;\n    var options = that._options;\n\n    var styles = that._createPointStyles(pointOptions, data, point);\n\n    var parsedOptions = (0, _extend2.extend)({}, pointOptions, {\n      type: options.type,\n      rotated: options.rotated,\n      styles: styles,\n      widgetType: options.widgetType,\n      visibilityChanged: options.visibilityChanged\n    });\n    parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\n\n    if (that.areErrorBarsVisible()) {\n      parsedOptions.errorBars = options.valueErrorBar;\n    }\n\n    return parsedOptions;\n  },\n  _preparePointOptions: function (customOptions) {\n    var pointOptions = this._getOptionsForPoint();\n\n    return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions;\n  },\n  _getMarkerGroupOptions: function () {\n    return (0, _extend2.extend)(false, {}, this._getOptionsForPoint(), {\n      hoverStyle: {},\n      selectionStyle: {}\n    });\n  },\n  _getAggregationMethod: function (isDiscrete, aggregateByCategory) {\n    var options = this.getOptions().aggregation;\n    var method = (0, _utils.normalizeEnum)(options.method);\n    var customAggregator = \"custom\" === method && options.calculate;\n    var aggregator;\n\n    if (isDiscrete && !aggregateByCategory) {\n      aggregator = function (_ref) {\n        var data = _ref.data;\n        return data[0];\n      };\n    } else {\n      aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator];\n    }\n\n    return customAggregator || aggregator;\n  },\n  _resample: function (_ref2, data) {\n    var interval = _ref2.interval,\n        ticks = _ref2.ticks,\n        aggregateByCategory = _ref2.aggregateByCategory;\n    var that = this;\n    var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\n    var dataIndex = 0;\n\n    var dataSelector = this._getPointDataSelector();\n\n    var options = that.getOptions();\n\n    var addAggregatedData = function (target, data, aggregationInfo) {\n      if (!data) {\n        return;\n      }\n\n      var processData = function (d) {\n        var pointData = d && dataSelector(d, options);\n\n        if (pointData && that._checkData(pointData)) {\n          pointData.aggregationInfo = aggregationInfo;\n          target.push(pointData);\n        }\n      };\n\n      if (data.length) {\n        data.forEach(processData);\n      } else {\n        processData(data);\n      }\n    };\n\n    var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\n\n    if (isDiscrete) {\n      if (aggregateByCategory) {\n        var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\n        var groups = categories.reduce(function (g, category) {\n          g[category.valueOf()] = [];\n          return g;\n        }, {});\n        data.forEach(function (dataItem) {\n          groups[dataItem.argument.valueOf()].push(dataItem);\n        });\n        return categories.reduce(function (result, c) {\n          addAggregatedData(result, aggregationMethod({\n            aggregationInterval: null,\n            intervalStart: c,\n            intervalEnd: c,\n            data: groups[c.valueOf()].map(getData)\n          }, that));\n          return result;\n        }, []);\n      } else {\n        return data.reduce(function (result, dataItem, index, data) {\n          result[1].push(dataItem);\n\n          if (index === data.length - 1 || (index + 1) % interval === 0) {\n            var dataInInterval = result[1];\n            var aggregationInfo = {\n              aggregationInterval: interval,\n              data: dataInInterval.map(getData)\n            };\n            addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\n            result[1] = [];\n          }\n\n          return result;\n        }, [[], []])[0];\n      }\n    }\n\n    var aggregatedData = [];\n\n    for (var i = 1; i < ticks.length; i++) {\n      var intervalEnd = ticks[i];\n      var intervalStart = ticks[i - 1];\n      var dataInInterval = [];\n\n      while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\n        if (data[dataIndex].argument >= intervalStart) {\n          dataInInterval.push(data[dataIndex]);\n        }\n\n        dataIndex++;\n      }\n\n      var aggregationInfo = {\n        intervalStart: intervalStart,\n        intervalEnd: intervalEnd,\n        aggregationInterval: interval,\n        data: dataInInterval.map(getData)\n      };\n      addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo);\n    }\n\n    that._endUpdateData();\n\n    return aggregatedData;\n  },\n  canRenderCompleteHandle: function () {\n    var result = this._canRenderCompleteHandle;\n    delete this._canRenderCompleteHandle;\n    return !!result;\n  },\n  isHovered: function () {\n    return !!(1 & this.fullState);\n  },\n  isSelected: function () {\n    return !!(2 & this.fullState);\n  },\n  isVisible: function () {\n    return this._visible;\n  },\n  getAllPoints: function () {\n    this._createAllAggregatedPoints();\n\n    return (this._points || []).slice();\n  },\n  getPointByPos: function (pos) {\n    this._createAllAggregatedPoints();\n\n    return (this._points || [])[pos];\n  },\n  getVisiblePoints: function () {\n    return (this._drawnPoints || []).slice();\n  },\n  selectPoint: function (point) {\n    if (!point.isSelected()) {\n      setPointSelectedState(point, this._legendCallback);\n\n      this._eventPipe({\n        action: POINT_SELECT,\n        target: point\n      });\n\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  deselectPoint: function (point) {\n    if (point.isSelected()) {\n      releasePointSelectedState(point, this._legendCallback);\n\n      this._eventPipe({\n        action: POINT_DESELECT,\n        target: point\n      });\n\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  hover: function (mode) {\n    var that = this;\n    var eventTrigger = that._eventTrigger;\n\n    if (that.isHovered()) {\n      return;\n    }\n\n    that.lastHoverMode = (0, _utils.normalizeEnum)(mode || that._options.hoverMode);\n    that.fullState = that.fullState | HOVER_STATE;\n\n    that._changeStyle(that.lastHoverMode, void 0, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\n\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: that\n    });\n  },\n  clearHover: function () {\n    var that = this;\n    var eventTrigger = that._eventTrigger;\n\n    if (!that.isHovered()) {\n      return;\n    }\n\n    that._resetNearestPoint();\n\n    that.fullState = that.fullState & ~HOVER_STATE;\n\n    that._changeStyle(that.lastHoverMode, HOVER, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\n\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: that\n    });\n  },\n  hoverPoint: function (point) {\n    var that = this;\n\n    if (!point.isHovered()) {\n      point.clearHover();\n      setPointHoverState(point, that._legendCallback);\n      that._canChangeView() && that._applyStyle(that._styles.hover);\n\n      that._eventPipe({\n        action: POINT_HOVER,\n        target: point\n      });\n\n      that._eventTrigger(POINT_HOVER_CHANGED, {\n        target: point\n      });\n    }\n  },\n  clearPointHover: function () {\n    var that = this;\n    that.getPoints().some(function (currentPoint) {\n      if (currentPoint.isHovered()) {\n        releasePointHoverState(currentPoint, that._legendCallback);\n        that._canChangeView() && that._applyStyle(that._styles.normal);\n\n        that._eventPipe({\n          action: CLEAR_POINT_HOVER,\n          target: currentPoint\n        });\n\n        that._eventTrigger(POINT_HOVER_CHANGED, {\n          target: currentPoint\n        });\n\n        return true;\n      }\n\n      return false;\n    });\n  },\n  showPointTooltip: function (point) {\n    triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point);\n  },\n  hidePointTooltip: function (point) {\n    triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point);\n  },\n  select: function () {\n    var that = this;\n\n    if (!that.isSelected()) {\n      that._setSelectedState(that._options.selectionMode);\n\n      that._eventPipe({\n        action: SERIES_SELECT,\n        target: that\n      });\n\n      that._group.toForeground();\n\n      that._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: that\n      });\n    }\n  },\n  clearSelection: function () {\n    var that = this;\n\n    if (that.isSelected()) {\n      that._releaseSelectedState();\n\n      that._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: that\n      });\n    }\n  },\n  getPointsByArg: function (arg, skipPointsCreation) {\n    var that = this;\n    var argValue = arg.valueOf();\n    var points = that.pointsByArgument[argValue];\n\n    if (!points && !skipPointsCreation && that._createAllAggregatedPoints()) {\n      points = that.pointsByArgument[argValue];\n    }\n\n    return points || [];\n  },\n  _createAllAggregatedPoints: function () {\n    if (this.useAggregation() && !this._useAllAggregatedPoints) {\n      this.createPoints(true);\n      return true;\n    }\n\n    return false;\n  },\n  getPointsByKeys: function (arg) {\n    return this.getPointsByArg(arg);\n  },\n  notify: function (data) {\n    var that = this;\n    var action = data.action;\n    var seriesModes = that._seriesModes;\n    var target = data.target;\n    var targetOptions = target.getOptions();\n    var pointHoverMode = (0, _utils.normalizeEnum)(targetOptions.hoverMode);\n    var selectionModeOfPoint = (0, _utils.normalizeEnum)(targetOptions.selectionMode);\n\n    if (action === POINT_HOVER) {\n      that._hoverPointHandler(target, pointHoverMode, data.notifyLegend);\n    } else {\n      if (action === CLEAR_POINT_HOVER) {\n        that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend);\n      } else {\n        if (action === SERIES_SELECT) {\n          target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection();\n        } else {\n          if (action === POINT_SELECT) {\n            if (\"single\" === seriesModes.pointSelectionMode) {\n              that.getPoints().some(function (currentPoint) {\n                if (currentPoint !== target && currentPoint.isSelected()) {\n                  that.deselectPoint(currentPoint);\n                  return true;\n                }\n\n                return false;\n              });\n            }\n\n            that._selectPointHandler(target, selectionModeOfPoint);\n          } else {\n            if (action === POINT_DESELECT) {\n              that._deselectPointHandler(target, selectionModeOfPoint);\n            }\n          }\n        }\n      }\n    }\n  },\n  _selectPointHandler: function (target, mode) {\n    var that = this;\n\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === that && that._setPointsView(SELECTION, target);\n    } else {\n      if (mode === ALL_ARGUMENT_POINTS) {\n        that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n          currentPoint !== target && currentPoint.setView(SELECTION);\n        });\n      }\n    }\n  },\n  _deselectPointHandler: function (target, mode) {\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === this && this._resetPointsView(SELECTION, target);\n    } else {\n      if (mode === ALL_ARGUMENT_POINTS) {\n        this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n          currentPoint !== target && currentPoint.resetView(SELECTION);\n        });\n      }\n    }\n  },\n  _hoverPointHandler: function (target, mode, notifyLegend) {\n    var that = this;\n\n    if (target.series !== that && mode === ALL_ARGUMENT_POINTS) {\n      that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.setView(HOVER);\n      });\n      notifyLegend && that._legendCallback(target);\n    } else {\n      if (mode === ALL_SERIES_POINTS && target.series === that) {\n        that._setPointsView(HOVER, target);\n      }\n    }\n  },\n  _clearPointHoverHandler: function (target, mode, notifyLegend) {\n    var that = this;\n\n    if (mode === ALL_ARGUMENT_POINTS) {\n      target.series !== that && that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.resetView(HOVER);\n      });\n      notifyLegend && that._legendCallback(target);\n    } else {\n      if (mode === ALL_SERIES_POINTS && target.series === that) {\n        that._resetPointsView(HOVER, target);\n      }\n    }\n  },\n  _deletePoints: function () {\n    var that = this;\n\n    that._disposePoints(that._points);\n\n    that._points = that._drawnPoints = null;\n  },\n  _deleteTrackers: function () {\n    var that = this;\n    (0, _iterator.each)(that._trackers || [], function (_, tracker) {\n      tracker.remove();\n    });\n    that._trackersGroup && that._trackersGroup.dispose();\n    that._trackers = that._trackersGroup = null;\n  },\n  dispose: function () {\n    var that = this;\n\n    that._deletePoints();\n\n    that._group.dispose();\n\n    that._labelsGroup && that._labelsGroup.dispose();\n    that._errorBarGroup && that._errorBarGroup.dispose();\n\n    that._deleteTrackers();\n\n    that._group = that._extGroups = that._markersGroup = that._elementsGroup = that._bordersGroup = that._labelsGroup = that._errorBarGroup = that._graphics = that._rangeData = that._renderer = that._styles = that._options = that._pointOptions = that._drawnPoints = that.pointsByArgument = that._segments = that._prevSeries = null;\n  },\n  correctPosition: _common.noop,\n  drawTrackers: _common.noop,\n  getNeighborPoint: _common.noop,\n  areErrorBarsVisible: _common.noop,\n  getMarginOptions: function () {\n    return this._patchMarginOptions({\n      percentStick: this.isFullStackedSeries()\n    });\n  },\n  getColor: function () {\n    return this.getLegendStyles().normal.fill;\n  },\n  getOpacity: function () {\n    return this._options.opacity;\n  },\n  getStackName: function () {\n    return this._stackName;\n  },\n  getBarOverlapGroup: function () {\n    return this._options.barOverlapGroup;\n  },\n  getPointByCoord: function (x, y) {\n    var point = this.getNeighborPoint(x, y);\n    return (null === point || void 0 === point ? void 0 : point.coordsIn(x, y)) ? point : null;\n  },\n  getValueAxis: function () {\n    return this._valueAxis;\n  },\n  getArgumentAxis: function () {\n    return this._argumentAxis;\n  },\n  getMarkersGroup: function () {\n    return this._markersGroup;\n  },\n  getRenderer: function () {\n    return this._renderer;\n  }\n};\nvar mixins = seriesNS.mixins;\nexports.mixins = mixins;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/series/base_series.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","Series","mixins","_type","require","_extend2","_iterator","_base_point","_utils","_common","_consts","_interopRequireDefault","_range_data_calculator","scatterSeries","_interopRequireWildcard","lineSeries","areaSeries","barSeries","_range_series","_bubble_series","pieSeries","financialSeries","stackedSeries","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","default","seriesNS","states","DISCRETE","SELECTED_STATE","selectedMark","HOVER_STATE","hoverMark","HOVER","hover","NORMAL","normal","SELECTION","selection","APPLY_SELECTED","applySelected","APPLY_HOVER","applyHover","RESET_ITEM","resetItem","NONE_MODE","INCLUDE_POINTS","NEAREST_POINT","SERIES_SELECTION_CHANGED","POINT_SELECTION_CHANGED","SERIES_HOVER_CHANGED","POINT_HOVER_CHANGED","ALL_SERIES_POINTS","ALL_ARGUMENT_POINTS","POINT_HOVER","CLEAR_POINT_HOVER","SERIES_SELECT","POINT_SELECT","POINT_DESELECT","getEmptyBusinessRange","arg","val","triggerEvent","element","event","point","trigger","chart","pie","polar","scatter","extend","includePointsMode","mode","normalizeEnum","getLabelOptions","labelOptions","defaultColor","opt","labelFont","font","labelBorder","border","labelConnector","connector","backgroundAttr","fill","backgroundColor","visible","width","stroke","color","dashStyle","connectorAttr","position","alignment","format","argumentFormat","customizeText","isFunction","attributes","size","showForZeroValues","horizontalOffset","verticalOffset","radialOffset","background","rotationAngle","wordWrap","textOverflow","cssClass","setPointHoverState","legendCallback","fullState","applyView","releasePointHoverState","releaseHoverState","setPointSelectedState","releasePointSelectedState","mergePointOptionsCore","base","extra","options","mergePointOptions","image","selectionStyle","hoverStyle","settings","that","_extGroups","_renderer","renderer","_group","g","attr","_eventTrigger","eventTrigger","_eventPipe","eventPipe","_incidentOccurred","incidentOccurred","_legendCallback","noop","updateOptions","getData","pointData","data","getValueChecker","axisType","axis","getOptions","allowNegatives","value","_createLegendState","getLegendStyles","_styles","legendStyles","_createStyles","mainSeriesColor","_parseStyle","setClippingParams","baseId","wideId","forceClipping","clipLabels","arguments","length","_paneClipRectID","_widePaneClipRectID","_forceClipping","_clipLabels","applyClip","resetClip","getTagField","_options","tagField","getValueFields","getSizeField","getArgumentField","getPoints","_points","getPointsInViewPort","_createPoint","index","oldPoint","pointsByArgument","_getCreatingPointOptions","argument","valueOf","update","Point","isSelected","lastSelectionMode","setView","pointByArgument","push","hasValue","customizePoint","getRangeData","_visible","_getRangeData","getArgumentRange","getViewport","_deleteGroup","groupName","group","dispose","newOptions","widgetType","oldType","type","newType","toString","_checkType","_checkPolarBarType","isUpdated","_firstDrawing","_resetType","_setType","_defineDrawingState","_pointOptions","name","pane","tag","_seriesModes","commonSeriesModes","_valueAxis","valueAxis","_argumentAxis","argumentAxis","_stackName","_updateOptions","stack","barOverlapGroup","_createGroups","_processEmptyValue","ignoreEmptyPoints","x","_disposePoints","points","each","_","p","updateDataType","argumentType","valueType","argumentAxisType","valueAxisType","showZero","_argumentChecker","getArgumentAxis","_valueChecker","getValueAxis","_getOldPoint","oldPointsByArgument","splice","updateData","nameField","_canRenderCompleteHandle","dataSelector","_getPointDataSelector","itemsWithoutArgument","_data","reduce","dataItem","pointDataItem","isDefined","nameFieldValue","_endUpdateData","_getData","useAggregation","_resample","getAggregationInfo","_useAllAggregatedPoints","aggregation","enabled","autoHidePointMarkersEnabled","usePointsToDefineAutoHiding","createPoints","useAllAggregatedPoints","_normalizeUsingAllAggregatedPoints","_createPoints","_calculateErrorBars","skippedFields","_checkData","pointIndex","field","keys","forEach","_removeOldSegments","startIndex","_segments","_graphics","elem","_removeElement","_trackers","remove","_drawElements","animationEnabled","firstDrawing","translateAllPoints","closeSegment","closed","groupForPoint","markers","_markersGroup","errorBars","_errorBarGroup","_drawnPoints","segments","segment","translated","translate","setDefaultCoords","hasCoords","_drawPoint","groups","hasAnimation","setInvisibility","_drawSegment","_animate","draw","hideLayoutLabels","_appendInGroup","_applyVisibleArea","_setGroupsSettings","_resetApplyingAnimation","hideLabels","_changeStyle","isHovered","lastHoverMode","_applyStyle","_setLabelGroupSettings","_applyElementsClipRect","_applyClearingSettings","opacity","_labelsGroup","append","labelsGroup","spiderWidget","indexOf","seriesType","methodName","methods","_setPointsView","view","target","_resetPointsView","resetView","_resetNearestPoint","_nearestPoint","series","_setSelectedState","selectionMode","_releaseSelectedState","isFullStackedSeries","isStackedSeries","resetApplyingAnimation","isFirstDrawing","isFinancialSeries","_canChangeView","hoverMode","skipPoints","state","styles","updateHover","y","currentNearestPoint","getNeighborPoint","_getMainAxisName","rotated","areLabelsVisible","maxLabelCount","getLabelVisibility","label","customizeObject","pointOptions","customLabelOptions","customOptions","customizeLabel","useLabelCustomOptions","usePointCustomOptions","seriesName","isEmptyObject","_parsePointOptions","_preparePointOptions","show","_changeVisibility","hide","visibility","_updatePointsVisibility","hidePointTooltip","visibilityChanged","_label","_createPointStyles","parsedOptions","areErrorBarsVisible","valueErrorBar","_getOptionsForPoint","_getMarkerGroupOptions","_getAggregationMethod","isDiscrete","aggregateByCategory","method","customAggregator","calculate","aggregator","_ref","_aggregators","_defaultAggregator","_ref2","interval","ticks","dataIndex","addAggregatedData","aggregationInfo","processData","d","aggregationMethod","categories","getTranslator","getBusinessRange","category","result","c","aggregationInterval","intervalStart","intervalEnd","map","dataInInterval","aggregatedData","i","canRenderCompleteHandle","isVisible","getAllPoints","_createAllAggregatedPoints","slice","getPointByPos","pos","getVisiblePoints","selectPoint","action","deselectPoint","clearHover","hoverPoint","clearPointHover","some","currentPoint","showPointTooltip","seriesGroup","select","toForeground","clearSelection","getPointsByArg","skipPointsCreation","argValue","getPointsByKeys","notify","seriesModes","targetOptions","pointHoverMode","selectionModeOfPoint","_hoverPointHandler","notifyLegend","_clearPointHoverHandler","seriesSelectionMode","pointSelectionMode","_selectPointHandler","_deselectPointHandler","argumentIndex","_deletePoints","_deleteTrackers","tracker","_trackersGroup","_elementsGroup","_bordersGroup","_rangeData","_prevSeries","correctPosition","drawTrackers","getMarginOptions","_patchMarginOptions","percentStick","getColor","getOpacity","getStackName","getBarOverlapGroup","getPointByCoord","coordsIn","getMarkersGroup","getRenderer"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/base_series.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.Series = Series;\r\nexports.mixins = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend2 = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _base_point = require(\"./points/base_point\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _consts = _interopRequireDefault(require(\"../components/consts\"));\r\nvar _range_data_calculator = _interopRequireDefault(require(\"./helpers/range_data_calculator\"));\r\nvar scatterSeries = _interopRequireWildcard(require(\"./scatter_series\"));\r\nvar lineSeries = _interopRequireWildcard(require(\"./line_series\"));\r\nvar areaSeries = _interopRequireWildcard(require(\"./area_series\"));\r\nvar barSeries = _interopRequireWildcard(require(\"./bar_series\"));\r\nvar _range_series = require(\"./range_series\");\r\nvar _bubble_series = require(\"./bubble_series\");\r\nvar pieSeries = _interopRequireWildcard(require(\"./pie_series\"));\r\nvar financialSeries = _interopRequireWildcard(require(\"./financial_series\"));\r\nvar stackedSeries = _interopRequireWildcard(require(\"./stacked_series\"));\r\n\r\nfunction _getRequireWildcardCache() {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cache = new WeakMap;\r\n    _getRequireWildcardCache = function() {\r\n        return cache\r\n    };\r\n    return cache\r\n}\r\n\r\nfunction _interopRequireWildcard(obj) {\r\n    if (obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache();\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar seriesNS = {};\r\nvar states = _consts.default.states;\r\nvar DISCRETE = \"discrete\";\r\nvar SELECTED_STATE = states.selectedMark;\r\nvar HOVER_STATE = states.hoverMark;\r\nvar HOVER = states.hover;\r\nvar NORMAL = states.normal;\r\nvar SELECTION = states.selection;\r\nvar APPLY_SELECTED = states.applySelected;\r\nvar APPLY_HOVER = states.applyHover;\r\nvar RESET_ITEM = states.resetItem;\r\nvar NONE_MODE = \"none\";\r\nvar INCLUDE_POINTS = \"includepoints\";\r\nvar NEAREST_POINT = \"nearestpoint\";\r\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\r\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\r\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\r\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\r\nvar ALL_SERIES_POINTS = \"allseriespoints\";\r\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\r\nvar POINT_HOVER = \"pointHover\";\r\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\r\nvar SERIES_SELECT = \"seriesSelect\";\r\nvar POINT_SELECT = \"pointSelect\";\r\nvar POINT_DESELECT = \"pointDeselect\";\r\nvar getEmptyBusinessRange = function() {\r\n    return {\r\n        arg: {},\r\n        val: {}\r\n    }\r\n};\r\n\r\nfunction triggerEvent(element, event, point) {\r\n    element && element.trigger(event, point)\r\n}\r\nseriesNS.mixins = {\r\n    chart: {},\r\n    pie: {},\r\n    polar: {}\r\n};\r\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\r\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\r\n(0, _extend2.extend)(seriesNS.mixins.pie, pieSeries);\r\n(0, _extend2.extend)(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, _range_series.chart, _bubble_series.chart, financialSeries, stackedSeries.chart);\r\n(0, _extend2.extend)(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, stackedSeries.polar);\r\n\r\nfunction includePointsMode(mode) {\r\n    mode = (0, _utils.normalizeEnum)(mode);\r\n    return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS\r\n}\r\n\r\nfunction getLabelOptions(labelOptions, defaultColor) {\r\n    var opt = labelOptions || {};\r\n    var labelFont = (0, _extend2.extend)({}, opt.font) || {};\r\n    var labelBorder = opt.border || {};\r\n    var labelConnector = opt.connector || {};\r\n    var backgroundAttr = {\r\n        fill: opt.backgroundColor || defaultColor,\r\n        \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\r\n        stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\r\n        dashStyle: labelBorder.dashStyle\r\n    };\r\n    var connectorAttr = {\r\n        stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\r\n        \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\r\n    };\r\n    labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === (0, _utils.normalizeEnum)(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\r\n    return {\r\n        alignment: opt.alignment,\r\n        format: opt.format,\r\n        argumentFormat: opt.argumentFormat,\r\n        customizeText: (0, _type.isFunction)(opt.customizeText) ? opt.customizeText : void 0,\r\n        attributes: {\r\n            font: labelFont\r\n        },\r\n        visible: 0 !== labelFont.size ? opt.visible : false,\r\n        showForZeroValues: opt.showForZeroValues,\r\n        horizontalOffset: opt.horizontalOffset,\r\n        verticalOffset: opt.verticalOffset,\r\n        radialOffset: opt.radialOffset,\r\n        background: backgroundAttr,\r\n        position: opt.position,\r\n        connector: connectorAttr,\r\n        rotationAngle: opt.rotationAngle,\r\n        wordWrap: opt.wordWrap,\r\n        textOverflow: opt.textOverflow,\r\n        cssClass: opt.cssClass\r\n    }\r\n}\r\n\r\nfunction setPointHoverState(point, legendCallback) {\r\n    point.fullState |= HOVER_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointHoverState(point, legendCallback) {\r\n    point.fullState &= ~HOVER_STATE;\r\n    point.applyView(legendCallback);\r\n    point.releaseHoverState()\r\n}\r\n\r\nfunction setPointSelectedState(point, legendCallback) {\r\n    point.fullState |= SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointSelectedState(point, legendCallback) {\r\n    point.fullState &= ~SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction mergePointOptionsCore(base, extra) {\r\n    var options = (0, _extend2.extend)({}, base, extra);\r\n    options.border = (0, _extend2.extend)({}, base && base.border, extra && extra.border);\r\n    return options\r\n}\r\n\r\nfunction mergePointOptions(base, extra) {\r\n    var options = mergePointOptionsCore(base, extra);\r\n    options.image = (0, _extend2.extend)(true, {}, base.image, extra.image);\r\n    options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\r\n    options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\r\n    return options\r\n}\r\n\r\nfunction Series(settings, options) {\r\n    var that = this;\r\n    that.fullState = 0;\r\n    that._extGroups = settings;\r\n    that._renderer = settings.renderer;\r\n    that._group = settings.renderer.g().attr({\r\n        \"class\": \"dxc-series\"\r\n    });\r\n    that._eventTrigger = settings.eventTrigger;\r\n    that._eventPipe = settings.eventPipe;\r\n    that._incidentOccurred = settings.incidentOccurred;\r\n    that._legendCallback = _common.noop;\r\n    that.updateOptions(options, settings)\r\n}\r\n\r\nfunction getData(pointData) {\r\n    return pointData.data\r\n}\r\n\r\nfunction getValueChecker(axisType, axis) {\r\n    if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\r\n        return function() {\r\n            return true\r\n        }\r\n    } else {\r\n        return function(value) {\r\n            return value > 0\r\n        }\r\n    }\r\n}\r\nSeries.prototype = {\r\n    constructor: Series,\r\n    _createLegendState: _common.noop,\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    _createStyles: function(options) {\r\n        var that = this;\r\n        var mainSeriesColor = options.mainSeriesColor;\r\n        that._styles = {\r\n            normal: that._parseStyle(options, mainSeriesColor, mainSeriesColor),\r\n            hover: that._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            selection: that._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            legendStyles: {\r\n                normal: that._createLegendState(options, mainSeriesColor),\r\n                hover: that._createLegendState(options.hoverStyle || {}, mainSeriesColor),\r\n                selection: that._createLegendState(options.selectionStyle || {}, mainSeriesColor)\r\n            }\r\n        }\r\n    },\r\n    setClippingParams: function(baseId, wideId, forceClipping) {\r\n        var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\r\n        this._paneClipRectID = baseId;\r\n        this._widePaneClipRectID = wideId;\r\n        this._forceClipping = forceClipping;\r\n        this._clipLabels = clipLabels\r\n    },\r\n    applyClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": this._paneClipRectID\r\n        })\r\n    },\r\n    resetClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": null\r\n        })\r\n    },\r\n    getTagField: function() {\r\n        return this._options.tagField || \"tag\"\r\n    },\r\n    getValueFields: _common.noop,\r\n    getSizeField: _common.noop,\r\n    getArgumentField: _common.noop,\r\n    getPoints: function() {\r\n        return this._points\r\n    },\r\n    getPointsInViewPort: function() {\r\n        return _range_data_calculator.default.getPointsInViewPort(this)\r\n    },\r\n    _createPoint: function(data, index, oldPoint) {\r\n        data.index = index;\r\n        var that = this;\r\n        var pointsByArgument = that.pointsByArgument;\r\n        var options = that._getCreatingPointOptions(data);\r\n        var arg = data.argument.valueOf();\r\n        var point = oldPoint;\r\n        if (point) {\r\n            point.update(data, options)\r\n        } else {\r\n            point = new _base_point.Point(that, data, options);\r\n            if (that.isSelected() && includePointsMode(that.lastSelectionMode)) {\r\n                point.setView(SELECTION)\r\n            }\r\n        }\r\n        var pointByArgument = pointsByArgument[arg];\r\n        if (pointByArgument) {\r\n            pointByArgument.push(point)\r\n        } else {\r\n            pointsByArgument[arg] = [point]\r\n        }\r\n        if (point.hasValue()) {\r\n            that.customizePoint(point, data)\r\n        }\r\n        return point\r\n    },\r\n    getRangeData: function() {\r\n        return this._visible ? this._getRangeData() : getEmptyBusinessRange()\r\n    },\r\n    getArgumentRange: function() {\r\n        return this._visible ? _range_data_calculator.default.getArgumentRange(this) : getEmptyBusinessRange()\r\n    },\r\n    getViewport: function() {\r\n        return _range_data_calculator.default.getViewport(this)\r\n    },\r\n    _deleteGroup: function(groupName) {\r\n        var group = this[groupName];\r\n        if (group) {\r\n            group.dispose();\r\n            this[groupName] = null\r\n        }\r\n    },\r\n    updateOptions: function(newOptions, settings) {\r\n        var that = this;\r\n        var widgetType = newOptions.widgetType;\r\n        var oldType = that.type;\r\n        var newType = newOptions.type;\r\n        that.type = newType && (0, _utils.normalizeEnum)(newType.toString());\r\n        if (!that._checkType(widgetType) || that._checkPolarBarType(widgetType, newOptions)) {\r\n            that.dispose();\r\n            that.isUpdated = false;\r\n            return\r\n        }\r\n        if (oldType !== that.type) {\r\n            that._firstDrawing = true;\r\n            that._resetType(oldType, widgetType);\r\n            that._setType(that.type, widgetType)\r\n        } else {\r\n            that._defineDrawingState()\r\n        }\r\n        that._options = newOptions;\r\n        that._pointOptions = null;\r\n        that.name = newOptions.name;\r\n        that.pane = newOptions.pane;\r\n        that.tag = newOptions.tag;\r\n        if (settings) {\r\n            that._seriesModes = settings.commonSeriesModes || that._seriesModes;\r\n            that._valueAxis = settings.valueAxis || that._valueAxis;\r\n            that.axis = that._valueAxis && that._valueAxis.name;\r\n            that._argumentAxis = settings.argumentAxis || that._argumentAxis\r\n        }\r\n        that._createStyles(newOptions);\r\n        that._stackName = null;\r\n        that._updateOptions(newOptions);\r\n        that._visible = newOptions.visible;\r\n        that.isUpdated = true;\r\n        that.stack = newOptions.stack;\r\n        that.barOverlapGroup = newOptions.barOverlapGroup;\r\n        that._createGroups();\r\n        that._processEmptyValue = newOptions.ignoreEmptyPoints ? function(x) {\r\n            return null === x ? void 0 : x\r\n        } : function(x) {\r\n            return x\r\n        }\r\n    },\r\n    _defineDrawingState: function() {\r\n        this._firstDrawing = true\r\n    },\r\n    _disposePoints: function(points) {\r\n        (0, _iterator.each)(points || [], function(_, p) {\r\n            p.dispose()\r\n        })\r\n    },\r\n    updateDataType: function(settings) {\r\n        var that = this;\r\n        that.argumentType = settings.argumentType;\r\n        that.valueType = settings.valueType;\r\n        that.argumentAxisType = settings.argumentAxisType;\r\n        that.valueAxisType = settings.valueAxisType;\r\n        that.showZero = settings.showZero;\r\n        this._argumentChecker = getValueChecker(settings.argumentAxisType, that.getArgumentAxis());\r\n        this._valueChecker = getValueChecker(settings.valueAxisType, that.getValueAxis());\r\n        return that\r\n    },\r\n    _argumentChecker: function() {\r\n        return true\r\n    },\r\n    _valueChecker: function() {\r\n        return true\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    _getOldPoint: function(data, oldPointsByArgument, index) {\r\n        var arg = data.argument && data.argument.valueOf();\r\n        var point = (oldPointsByArgument[arg] || [])[0];\r\n        if (point) {\r\n            oldPointsByArgument[arg].splice(0, 1)\r\n        }\r\n        return point\r\n    },\r\n    updateData: function(data) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var nameField = options.nameField;\r\n        data = data || [];\r\n        if (data.length) {\r\n            that._canRenderCompleteHandle = true\r\n        }\r\n        var dataSelector = this._getPointDataSelector();\r\n        var itemsWithoutArgument = 0;\r\n        that._data = data.reduce(function(data, dataItem, index) {\r\n            var pointDataItem = dataSelector(dataItem);\r\n            if ((0, _type.isDefined)(pointDataItem.argument)) {\r\n                if (!nameField || dataItem[nameField] === options.nameFieldValue) {\r\n                    pointDataItem.index = index;\r\n                    data.push(pointDataItem)\r\n                }\r\n            } else {\r\n                itemsWithoutArgument++\r\n            }\r\n            return data\r\n        }, []);\r\n        if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\r\n            that._incidentOccurred(\"W2002\", [that.name, that.getArgumentField()])\r\n        }\r\n        that._endUpdateData()\r\n    },\r\n    _getData: function() {\r\n        var data = this._data || [];\r\n        if (this.useAggregation()) {\r\n            data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data)\r\n        }\r\n        return data\r\n    },\r\n    useAggregation: function() {\r\n        var aggregation = this.getOptions().aggregation;\r\n        return aggregation && aggregation.enabled\r\n    },\r\n    autoHidePointMarkersEnabled: _common.noop,\r\n    usePointsToDefineAutoHiding: _common.noop,\r\n    createPoints: function(useAllAggregatedPoints) {\r\n        this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\r\n        this._createPoints()\r\n    },\r\n    _normalizeUsingAllAggregatedPoints: function(useAllAggregatedPoints) {\r\n        this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints)\r\n    },\r\n    _createPoints: function() {\r\n        var that = this;\r\n        var oldPointsByArgument = that.pointsByArgument || {};\r\n        var data = that._getData();\r\n        that.pointsByArgument = {};\r\n        that._calculateErrorBars(data);\r\n        var skippedFields = {};\r\n        var points = data.reduce(function(points, pointDataItem) {\r\n            if (that._checkData(pointDataItem, skippedFields)) {\r\n                var pointIndex = points.length;\r\n                var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\r\n                var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\r\n                points.push(point)\r\n            }\r\n            return points\r\n        }, []);\r\n        for (var field in skippedFields) {\r\n            if (skippedFields[field] === data.length) {\r\n                that._incidentOccurred(\"W2002\", [that.name, field])\r\n            }\r\n        }\r\n        Object.keys(oldPointsByArgument).forEach(function(key) {\r\n            return that._disposePoints(oldPointsByArgument[key])\r\n        });\r\n        that._points = points\r\n    },\r\n    _removeOldSegments: function() {\r\n        var that = this;\r\n        var startIndex = that._segments.length;\r\n        (0, _iterator.each)(that._graphics.splice(startIndex, that._graphics.length) || [], function(_, elem) {\r\n            that._removeElement(elem)\r\n        });\r\n        if (that._trackers) {\r\n            (0, _iterator.each)(that._trackers.splice(startIndex, that._trackers.length) || [], function(_, elem) {\r\n                elem.remove()\r\n            })\r\n        }\r\n    },\r\n    _drawElements: function(animationEnabled, firstDrawing, translateAllPoints) {\r\n        var that = this;\r\n        var points = that._points || [];\r\n        var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\r\n        var groupForPoint = {\r\n            markers: that._markersGroup,\r\n            errorBars: that._errorBarGroup\r\n        };\r\n        that._drawnPoints = [];\r\n        that._graphics = that._graphics || [];\r\n        that._segments = [];\r\n        var segments = points.reduce(function(segments, p) {\r\n            var segment = segments[segments.length - 1];\r\n            if (!p.translated || translateAllPoints) {\r\n                p.translate();\r\n                !translateAllPoints && p.setDefaultCoords()\r\n            }\r\n            if (p.hasValue() && p.hasCoords()) {\r\n                translateAllPoints && that._drawPoint({\r\n                    point: p,\r\n                    groups: groupForPoint,\r\n                    hasAnimation: animationEnabled,\r\n                    firstDrawing: firstDrawing\r\n                });\r\n                segment.push(p)\r\n            } else {\r\n                if (!p.hasValue()) {\r\n                    segment.length && segments.push([])\r\n                } else {\r\n                    p.setInvisibility()\r\n                }\r\n            }\r\n            return segments\r\n        }, [\r\n            []\r\n        ]);\r\n        segments.forEach(function(segment, index) {\r\n            if (segment.length) {\r\n                that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1)\r\n            }\r\n        }, segments);\r\n        that._firstDrawing = !points.length;\r\n        that._removeOldSegments();\r\n        animationEnabled && that._animate(firstDrawing)\r\n    },\r\n    draw: function(animationEnabled, hideLayoutLabels, legendCallback) {\r\n        var that = this;\r\n        var firstDrawing = that._firstDrawing;\r\n        that._legendCallback = legendCallback || that._legendCallback;\r\n        if (!that._visible) {\r\n            animationEnabled = false;\r\n            that._group.remove();\r\n            return\r\n        }\r\n        that._appendInGroup();\r\n        that._applyVisibleArea();\r\n        that._setGroupsSettings(animationEnabled, firstDrawing);\r\n        !firstDrawing && !that._resetApplyingAnimation && that._drawElements(false, firstDrawing, false);\r\n        that._drawElements(animationEnabled, firstDrawing, true);\r\n        hideLayoutLabels && that.hideLabels();\r\n        if (that.isSelected()) {\r\n            that._changeStyle(that.lastSelectionMode, void 0, true)\r\n        } else {\r\n            if (that.isHovered()) {\r\n                that._changeStyle(that.lastHoverMode, void 0, true)\r\n            } else {\r\n                that._applyStyle(that._styles.normal)\r\n            }\r\n        }\r\n        that._resetApplyingAnimation = false\r\n    },\r\n    _setLabelGroupSettings: function(animationEnabled) {\r\n        var settings = {\r\n            \"class\": \"dxc-labels\",\r\n            \"pointer-events\": \"none\"\r\n        };\r\n        this._clipLabels && this._applyElementsClipRect(settings);\r\n        this._applyClearingSettings(settings);\r\n        animationEnabled && (settings.opacity = .001);\r\n        this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup)\r\n    },\r\n    _checkType: function(widgetType) {\r\n        return !!seriesNS.mixins[widgetType][this.type]\r\n    },\r\n    _checkPolarBarType: function(widgetType, options) {\r\n        return \"polar\" === widgetType && options.spiderWidget && this.type.indexOf(\"bar\") !== -1\r\n    },\r\n    _resetType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods;\r\n        if (seriesType) {\r\n            methods = seriesNS.mixins[widgetType][seriesType];\r\n            for (methodName in methods) {\r\n                delete this[methodName]\r\n            }\r\n        }\r\n    },\r\n    _setType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods = seriesNS.mixins[widgetType][seriesType];\r\n        for (methodName in methods) {\r\n            this[methodName] = methods[methodName]\r\n        }\r\n    },\r\n    _setPointsView: function(view, target) {\r\n        this.getPoints().forEach(function(point) {\r\n            if (target !== point) {\r\n                point.setView(view)\r\n            }\r\n        })\r\n    },\r\n    _resetPointsView: function(view, target) {\r\n        this.getPoints().forEach(function(point) {\r\n            if (target !== point) {\r\n                point.resetView(view)\r\n            }\r\n        })\r\n    },\r\n    _resetNearestPoint: function() {\r\n        var that = this;\r\n        that._nearestPoint && null !== that._nearestPoint.series && that._nearestPoint.resetView(HOVER);\r\n        that._nearestPoint = null\r\n    },\r\n    _setSelectedState: function(mode) {\r\n        var that = this;\r\n        that.lastSelectionMode = (0, _utils.normalizeEnum)(mode || that._options.selectionMode);\r\n        that.fullState = that.fullState | SELECTED_STATE;\r\n        that._resetNearestPoint();\r\n        that._changeStyle(that.lastSelectionMode);\r\n        if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\r\n            that._resetPointsView(HOVER)\r\n        }\r\n    },\r\n    _releaseSelectedState: function() {\r\n        var that = this;\r\n        that.fullState = that.fullState & ~SELECTED_STATE;\r\n        that._changeStyle(that.lastSelectionMode, SELECTION);\r\n        if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\r\n            that._setPointsView(HOVER)\r\n        }\r\n    },\r\n    isFullStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"fullstacked\")\r\n    },\r\n    isStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"stacked\")\r\n    },\r\n    resetApplyingAnimation: function(isFirstDrawing) {\r\n        this._resetApplyingAnimation = true;\r\n        if (isFirstDrawing) {\r\n            this._firstDrawing = true\r\n        }\r\n    },\r\n    isFinancialSeries: function() {\r\n        return \"stock\" === this.type || \"candlestick\" === this.type\r\n    },\r\n    _canChangeView: function() {\r\n        return !this.isSelected() && (0, _utils.normalizeEnum)(this._options.hoverMode) !== NONE_MODE\r\n    },\r\n    _changeStyle: function(mode, resetView, skipPoints) {\r\n        var that = this;\r\n        var state = that.fullState;\r\n        var styles = [NORMAL, HOVER, SELECTION, SELECTION];\r\n        if (\"none\" === that.lastHoverMode) {\r\n            state &= ~HOVER_STATE\r\n        }\r\n        if (\"none\" === that.lastSelectionMode) {\r\n            state &= ~SELECTED_STATE\r\n        }\r\n        if (includePointsMode(mode) && !skipPoints) {\r\n            if (!resetView) {\r\n                that._setPointsView(styles[state])\r\n            } else {\r\n                that._resetPointsView(resetView)\r\n            }\r\n        }\r\n        that._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\r\n        that._applyStyle(that._styles[styles[state]])\r\n    },\r\n    updateHover: function(x, y) {\r\n        var that = this;\r\n        var currentNearestPoint = that._nearestPoint;\r\n        var point = that.isHovered() && that.lastHoverMode === NEAREST_POINT && that.getNeighborPoint(x, y);\r\n        if (point !== currentNearestPoint && !(that.isSelected() && that.lastSelectionMode !== NONE_MODE)) {\r\n            that._resetNearestPoint();\r\n            if (point) {\r\n                point.setView(HOVER);\r\n                that._nearestPoint = point\r\n            }\r\n        }\r\n    },\r\n    _getMainAxisName: function() {\r\n        return this._options.rotated ? \"X\" : \"Y\"\r\n    },\r\n    areLabelsVisible: function() {\r\n        return !(0, _type.isDefined)(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount\r\n    },\r\n    getLabelVisibility: function() {\r\n        return this.areLabelsVisible() && this._options.label && this._options.label.visible\r\n    },\r\n    customizePoint: function customizePoint(point, pointData) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var customizePoint = options.customizePoint;\r\n        var customizeObject;\r\n        var pointOptions;\r\n        var customLabelOptions;\r\n        var customOptions;\r\n        var customizeLabel = options.customizeLabel;\r\n        var useLabelCustomOptions;\r\n        var usePointCustomOptions;\r\n        if (customizeLabel && customizeLabel.call) {\r\n            customizeObject = (0, _extend2.extend)({\r\n                seriesName: that.name\r\n            }, pointData);\r\n            customizeObject.series = that;\r\n            customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\r\n            useLabelCustomOptions = customLabelOptions && !(0, _type.isEmptyObject)(customLabelOptions);\r\n            customLabelOptions = useLabelCustomOptions ? (0, _extend2.extend)(true, {}, options.label, customLabelOptions) : null\r\n        }\r\n        if (customizePoint && customizePoint.call) {\r\n            customizeObject = customizeObject || (0, _extend2.extend)({\r\n                seriesName: that.name\r\n            }, pointData);\r\n            customizeObject.series = that;\r\n            customOptions = customizePoint.call(customizeObject, customizeObject);\r\n            usePointCustomOptions = customOptions && !(0, _type.isEmptyObject)(customOptions)\r\n        }\r\n        if (useLabelCustomOptions || usePointCustomOptions) {\r\n            pointOptions = that._parsePointOptions(that._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\r\n            pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\r\n            pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\r\n            point.updateOptions(pointOptions)\r\n        }\r\n    },\r\n    show: function() {\r\n        if (!this._visible) {\r\n            this._changeVisibility(true)\r\n        }\r\n    },\r\n    hide: function() {\r\n        if (this._visible) {\r\n            this._changeVisibility(false)\r\n        }\r\n    },\r\n    _changeVisibility: function(visibility) {\r\n        var that = this;\r\n        that._visible = that._options.visible = visibility;\r\n        that._updatePointsVisibility();\r\n        that.hidePointTooltip();\r\n        that._options.visibilityChanged(that)\r\n    },\r\n    _updatePointsVisibility: _common.noop,\r\n    hideLabels: function() {\r\n        (0, _iterator.each)(this._points, function(_, point) {\r\n            point._label.draw(false)\r\n        })\r\n    },\r\n    _parsePointOptions: function(pointOptions, labelOptions, data, point) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var styles = that._createPointStyles(pointOptions, data, point);\r\n        var parsedOptions = (0, _extend2.extend)({}, pointOptions, {\r\n            type: options.type,\r\n            rotated: options.rotated,\r\n            styles: styles,\r\n            widgetType: options.widgetType,\r\n            visibilityChanged: options.visibilityChanged\r\n        });\r\n        parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\r\n        if (that.areErrorBarsVisible()) {\r\n            parsedOptions.errorBars = options.valueErrorBar\r\n        }\r\n        return parsedOptions\r\n    },\r\n    _preparePointOptions: function(customOptions) {\r\n        var pointOptions = this._getOptionsForPoint();\r\n        return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions\r\n    },\r\n    _getMarkerGroupOptions: function() {\r\n        return (0, _extend2.extend)(false, {}, this._getOptionsForPoint(), {\r\n            hoverStyle: {},\r\n            selectionStyle: {}\r\n        })\r\n    },\r\n    _getAggregationMethod: function(isDiscrete, aggregateByCategory) {\r\n        var options = this.getOptions().aggregation;\r\n        var method = (0, _utils.normalizeEnum)(options.method);\r\n        var customAggregator = \"custom\" === method && options.calculate;\r\n        var aggregator;\r\n        if (isDiscrete && !aggregateByCategory) {\r\n            aggregator = function(_ref) {\r\n                var data = _ref.data;\r\n                return data[0]\r\n            }\r\n        } else {\r\n            aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator]\r\n        }\r\n        return customAggregator || aggregator\r\n    },\r\n    _resample: function(_ref2, data) {\r\n        var interval = _ref2.interval,\r\n            ticks = _ref2.ticks,\r\n            aggregateByCategory = _ref2.aggregateByCategory;\r\n        var that = this;\r\n        var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\r\n        var dataIndex = 0;\r\n        var dataSelector = this._getPointDataSelector();\r\n        var options = that.getOptions();\r\n        var addAggregatedData = function(target, data, aggregationInfo) {\r\n            if (!data) {\r\n                return\r\n            }\r\n            var processData = function(d) {\r\n                var pointData = d && dataSelector(d, options);\r\n                if (pointData && that._checkData(pointData)) {\r\n                    pointData.aggregationInfo = aggregationInfo;\r\n                    target.push(pointData)\r\n                }\r\n            };\r\n            if (data.length) {\r\n                data.forEach(processData)\r\n            } else {\r\n                processData(data)\r\n            }\r\n        };\r\n        var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\r\n        if (isDiscrete) {\r\n            if (aggregateByCategory) {\r\n                var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\r\n                var groups = categories.reduce(function(g, category) {\r\n                    g[category.valueOf()] = [];\r\n                    return g\r\n                }, {});\r\n                data.forEach(function(dataItem) {\r\n                    groups[dataItem.argument.valueOf()].push(dataItem)\r\n                });\r\n                return categories.reduce(function(result, c) {\r\n                    addAggregatedData(result, aggregationMethod({\r\n                        aggregationInterval: null,\r\n                        intervalStart: c,\r\n                        intervalEnd: c,\r\n                        data: groups[c.valueOf()].map(getData)\r\n                    }, that));\r\n                    return result\r\n                }, [])\r\n            } else {\r\n                return data.reduce(function(result, dataItem, index, data) {\r\n                    result[1].push(dataItem);\r\n                    if (index === data.length - 1 || (index + 1) % interval === 0) {\r\n                        var dataInInterval = result[1];\r\n                        var aggregationInfo = {\r\n                            aggregationInterval: interval,\r\n                            data: dataInInterval.map(getData)\r\n                        };\r\n                        addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\r\n                        result[1] = []\r\n                    }\r\n                    return result\r\n                }, [\r\n                    [],\r\n                    []\r\n                ])[0]\r\n            }\r\n        }\r\n        var aggregatedData = [];\r\n        for (var i = 1; i < ticks.length; i++) {\r\n            var intervalEnd = ticks[i];\r\n            var intervalStart = ticks[i - 1];\r\n            var dataInInterval = [];\r\n            while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\r\n                if (data[dataIndex].argument >= intervalStart) {\r\n                    dataInInterval.push(data[dataIndex])\r\n                }\r\n                dataIndex++\r\n            }\r\n            var aggregationInfo = {\r\n                intervalStart: intervalStart,\r\n                intervalEnd: intervalEnd,\r\n                aggregationInterval: interval,\r\n                data: dataInInterval.map(getData)\r\n            };\r\n            addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo)\r\n        }\r\n        that._endUpdateData();\r\n        return aggregatedData\r\n    },\r\n    canRenderCompleteHandle: function() {\r\n        var result = this._canRenderCompleteHandle;\r\n        delete this._canRenderCompleteHandle;\r\n        return !!result\r\n    },\r\n    isHovered: function() {\r\n        return !!(1 & this.fullState)\r\n    },\r\n    isSelected: function() {\r\n        return !!(2 & this.fullState)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    getAllPoints: function() {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || []).slice()\r\n    },\r\n    getPointByPos: function(pos) {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || [])[pos]\r\n    },\r\n    getVisiblePoints: function() {\r\n        return (this._drawnPoints || []).slice()\r\n    },\r\n    selectPoint: function(point) {\r\n        if (!point.isSelected()) {\r\n            setPointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_SELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    deselectPoint: function(point) {\r\n        if (point.isSelected()) {\r\n            releasePointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_DESELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    hover: function(mode) {\r\n        var that = this;\r\n        var eventTrigger = that._eventTrigger;\r\n        if (that.isHovered()) {\r\n            return\r\n        }\r\n        that.lastHoverMode = (0, _utils.normalizeEnum)(mode || that._options.hoverMode);\r\n        that.fullState = that.fullState | HOVER_STATE;\r\n        that._changeStyle(that.lastHoverMode, void 0, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: that\r\n        })\r\n    },\r\n    clearHover: function() {\r\n        var that = this;\r\n        var eventTrigger = that._eventTrigger;\r\n        if (!that.isHovered()) {\r\n            return\r\n        }\r\n        that._resetNearestPoint();\r\n        that.fullState = that.fullState & ~HOVER_STATE;\r\n        that._changeStyle(that.lastHoverMode, HOVER, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: that\r\n        })\r\n    },\r\n    hoverPoint: function(point) {\r\n        var that = this;\r\n        if (!point.isHovered()) {\r\n            point.clearHover();\r\n            setPointHoverState(point, that._legendCallback);\r\n            that._canChangeView() && that._applyStyle(that._styles.hover);\r\n            that._eventPipe({\r\n                action: POINT_HOVER,\r\n                target: point\r\n            });\r\n            that._eventTrigger(POINT_HOVER_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    clearPointHover: function() {\r\n        var that = this;\r\n        that.getPoints().some(function(currentPoint) {\r\n            if (currentPoint.isHovered()) {\r\n                releasePointHoverState(currentPoint, that._legendCallback);\r\n                that._canChangeView() && that._applyStyle(that._styles.normal);\r\n                that._eventPipe({\r\n                    action: CLEAR_POINT_HOVER,\r\n                    target: currentPoint\r\n                });\r\n                that._eventTrigger(POINT_HOVER_CHANGED, {\r\n                    target: currentPoint\r\n                });\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    },\r\n    showPointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point)\r\n    },\r\n    hidePointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point)\r\n    },\r\n    select: function() {\r\n        var that = this;\r\n        if (!that.isSelected()) {\r\n            that._setSelectedState(that._options.selectionMode);\r\n            that._eventPipe({\r\n                action: SERIES_SELECT,\r\n                target: that\r\n            });\r\n            that._group.toForeground();\r\n            that._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: that\r\n            })\r\n        }\r\n    },\r\n    clearSelection: function() {\r\n        var that = this;\r\n        if (that.isSelected()) {\r\n            that._releaseSelectedState();\r\n            that._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: that\r\n            })\r\n        }\r\n    },\r\n    getPointsByArg: function(arg, skipPointsCreation) {\r\n        var that = this;\r\n        var argValue = arg.valueOf();\r\n        var points = that.pointsByArgument[argValue];\r\n        if (!points && !skipPointsCreation && that._createAllAggregatedPoints()) {\r\n            points = that.pointsByArgument[argValue]\r\n        }\r\n        return points || []\r\n    },\r\n    _createAllAggregatedPoints: function() {\r\n        if (this.useAggregation() && !this._useAllAggregatedPoints) {\r\n            this.createPoints(true);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    getPointsByKeys: function(arg) {\r\n        return this.getPointsByArg(arg)\r\n    },\r\n    notify: function(data) {\r\n        var that = this;\r\n        var action = data.action;\r\n        var seriesModes = that._seriesModes;\r\n        var target = data.target;\r\n        var targetOptions = target.getOptions();\r\n        var pointHoverMode = (0, _utils.normalizeEnum)(targetOptions.hoverMode);\r\n        var selectionModeOfPoint = (0, _utils.normalizeEnum)(targetOptions.selectionMode);\r\n        if (action === POINT_HOVER) {\r\n            that._hoverPointHandler(target, pointHoverMode, data.notifyLegend)\r\n        } else {\r\n            if (action === CLEAR_POINT_HOVER) {\r\n                that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend)\r\n            } else {\r\n                if (action === SERIES_SELECT) {\r\n                    target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection()\r\n                } else {\r\n                    if (action === POINT_SELECT) {\r\n                        if (\"single\" === seriesModes.pointSelectionMode) {\r\n                            that.getPoints().some(function(currentPoint) {\r\n                                if (currentPoint !== target && currentPoint.isSelected()) {\r\n                                    that.deselectPoint(currentPoint);\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            })\r\n                        }\r\n                        that._selectPointHandler(target, selectionModeOfPoint)\r\n                    } else {\r\n                        if (action === POINT_DESELECT) {\r\n                            that._deselectPointHandler(target, selectionModeOfPoint)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _selectPointHandler: function(target, mode) {\r\n        var that = this;\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === that && that._setPointsView(SELECTION, target)\r\n        } else {\r\n            if (mode === ALL_ARGUMENT_POINTS) {\r\n                that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                    currentPoint !== target && currentPoint.setView(SELECTION)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _deselectPointHandler: function(target, mode) {\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === this && this._resetPointsView(SELECTION, target)\r\n        } else {\r\n            if (mode === ALL_ARGUMENT_POINTS) {\r\n                this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                    currentPoint !== target && currentPoint.resetView(SELECTION)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _hoverPointHandler: function(target, mode, notifyLegend) {\r\n        var that = this;\r\n        if (target.series !== that && mode === ALL_ARGUMENT_POINTS) {\r\n            that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                currentPoint.setView(HOVER)\r\n            });\r\n            notifyLegend && that._legendCallback(target)\r\n        } else {\r\n            if (mode === ALL_SERIES_POINTS && target.series === that) {\r\n                that._setPointsView(HOVER, target)\r\n            }\r\n        }\r\n    },\r\n    _clearPointHoverHandler: function(target, mode, notifyLegend) {\r\n        var that = this;\r\n        if (mode === ALL_ARGUMENT_POINTS) {\r\n            target.series !== that && that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                currentPoint.resetView(HOVER)\r\n            });\r\n            notifyLegend && that._legendCallback(target)\r\n        } else {\r\n            if (mode === ALL_SERIES_POINTS && target.series === that) {\r\n                that._resetPointsView(HOVER, target)\r\n            }\r\n        }\r\n    },\r\n    _deletePoints: function() {\r\n        var that = this;\r\n        that._disposePoints(that._points);\r\n        that._points = that._drawnPoints = null\r\n    },\r\n    _deleteTrackers: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(that._trackers || [], function(_, tracker) {\r\n            tracker.remove()\r\n        });\r\n        that._trackersGroup && that._trackersGroup.dispose();\r\n        that._trackers = that._trackersGroup = null\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        that._deletePoints();\r\n        that._group.dispose();\r\n        that._labelsGroup && that._labelsGroup.dispose();\r\n        that._errorBarGroup && that._errorBarGroup.dispose();\r\n        that._deleteTrackers();\r\n        that._group = that._extGroups = that._markersGroup = that._elementsGroup = that._bordersGroup = that._labelsGroup = that._errorBarGroup = that._graphics = that._rangeData = that._renderer = that._styles = that._options = that._pointOptions = that._drawnPoints = that.pointsByArgument = that._segments = that._prevSeries = null\r\n    },\r\n    correctPosition: _common.noop,\r\n    drawTrackers: _common.noop,\r\n    getNeighborPoint: _common.noop,\r\n    areErrorBarsVisible: _common.noop,\r\n    getMarginOptions: function() {\r\n        return this._patchMarginOptions({\r\n            percentStick: this.isFullStackedSeries()\r\n        })\r\n    },\r\n    getColor: function() {\r\n        return this.getLegendStyles().normal.fill\r\n    },\r\n    getOpacity: function() {\r\n        return this._options.opacity\r\n    },\r\n    getStackName: function() {\r\n        return this._stackName\r\n    },\r\n    getBarOverlapGroup: function() {\r\n        return this._options.barOverlapGroup\r\n    },\r\n    getPointByCoord: function(x, y) {\r\n        var point = this.getNeighborPoint(x, y);\r\n        return (null === point || void 0 === point ? void 0 : point.coordsIn(x, y)) ? point : null\r\n    },\r\n    getValueAxis: function() {\r\n        return this._valueAxis\r\n    },\r\n    getArgumentAxis: function() {\r\n        return this._argumentAxis\r\n    },\r\n    getMarkersGroup: function() {\r\n        return this._markersGroup\r\n    },\r\n    getRenderer: function() {\r\n        return this._renderer\r\n    }\r\n};\r\nvar mixins = seriesNS.mixins;\r\nexports.mixins = mixins;\r\n"]},"metadata":{},"sourceType":"script"}