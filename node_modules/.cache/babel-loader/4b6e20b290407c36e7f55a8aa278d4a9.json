{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/mouse.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _base = _interopRequireDefault(require(\"./base\"));\n\nvar _observer = _interopRequireDefault(require(\"./observer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar eventMap = {\n  dxpointerdown: \"mousedown\",\n  dxpointermove: \"mousemove\",\n  dxpointerup: \"mouseup\",\n  dxpointercancel: \"\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\n\nvar normalizeMouseEvent = function (e) {\n  e.pointerId = 1;\n  return {\n    pointers: observer.pointers(),\n    pointerId: 1\n  };\n};\n\nvar observer;\nvar activated = false;\n\nvar activateStrategy = function () {\n  if (activated) {\n    return;\n  }\n\n  observer = new _observer.default(eventMap, function () {\n    return true;\n  });\n  activated = true;\n};\n\nvar MouseStrategy = _base.default.inherit({\n  ctor: function () {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _fireEvent: function (args) {\n    return this.callBase((0, _extend.extend)(normalizeMouseEvent(args.originalEvent), args));\n  }\n});\n\nMouseStrategy.map = eventMap;\nMouseStrategy.normalize = normalizeMouseEvent;\nMouseStrategy.activate = activateStrategy;\n\nMouseStrategy.resetObserver = function () {\n  observer.reset();\n};\n\nvar _default = MouseStrategy;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/events/pointer/mouse.js"],"names":["exports","default","_extend","require","_base","_interopRequireDefault","_observer","obj","__esModule","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","normalizeMouseEvent","e","pointerId","pointers","observer","activated","activateStrategy","MouseStrategy","inherit","ctor","callBase","apply","arguments","_fireEvent","args","extend","originalEvent","map","normalize","activate","resetObserver","reset","_default","module"],"mappings":"AAAA;;;;;;;;AAQA;;AACAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIC,KAAK,GAAGC,sBAAsB,CAACF,OAAO,CAAC,QAAD,CAAR,CAAlC;;AACA,IAAIG,SAAS,GAAGD,sBAAsB,CAACF,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AACD,IAAIE,QAAQ,GAAG;AACXC,EAAAA,aAAa,EAAE,WADJ;AAEXC,EAAAA,aAAa,EAAE,WAFJ;AAGXC,EAAAA,WAAW,EAAE,SAHF;AAIXC,EAAAA,eAAe,EAAE,EAJN;AAKXC,EAAAA,aAAa,EAAE,WALJ;AAMXC,EAAAA,YAAY,EAAE,UANH;AAOXC,EAAAA,cAAc,EAAE,YAPL;AAQXC,EAAAA,cAAc,EAAE;AARL,CAAf;;AAUA,IAAIC,mBAAmB,GAAG,UAASC,CAAT,EAAY;AAClCA,EAAAA,CAAC,CAACC,SAAF,GAAc,CAAd;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAAT,EADP;AAEHD,IAAAA,SAAS,EAAE;AAFR,GAAP;AAIH,CAND;;AAOA,IAAIE,QAAJ;AACA,IAAIC,SAAS,GAAG,KAAhB;;AACA,IAAIC,gBAAgB,GAAG,YAAW;AAC9B,MAAID,SAAJ,EAAe;AACX;AACH;;AACDD,EAAAA,QAAQ,GAAG,IAAIhB,SAAS,CAACL,OAAd,CAAsBQ,QAAtB,EAAgC,YAAW;AAClD,WAAO,IAAP;AACH,GAFU,CAAX;AAGAc,EAAAA,SAAS,GAAG,IAAZ;AACH,CARD;;AASA,IAAIE,aAAa,GAAGrB,KAAK,CAACH,OAAN,CAAcyB,OAAd,CAAsB;AACtCC,EAAAA,IAAI,EAAE,YAAW;AACb,SAAKC,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACAN,IAAAA,gBAAgB;AACnB,GAJqC;AAKtCO,EAAAA,UAAU,EAAE,UAASC,IAAT,EAAe;AACvB,WAAO,KAAKJ,QAAL,CAAc,CAAC,GAAG1B,OAAO,CAAC+B,MAAZ,EAAoBf,mBAAmB,CAACc,IAAI,CAACE,aAAN,CAAvC,EAA6DF,IAA7D,CAAd,CAAP;AACH;AAPqC,CAAtB,CAApB;;AASAP,aAAa,CAACU,GAAd,GAAoB1B,QAApB;AACAgB,aAAa,CAACW,SAAd,GAA0BlB,mBAA1B;AACAO,aAAa,CAACY,QAAd,GAAyBb,gBAAzB;;AACAC,aAAa,CAACa,aAAd,GAA8B,YAAW;AACrChB,EAAAA,QAAQ,CAACiB,KAAT;AACH,CAFD;;AAGA,IAAIC,QAAQ,GAAGf,aAAf;AACAzB,OAAO,CAACC,OAAR,GAAkBuC,QAAlB;AACAC,MAAM,CAACzC,OAAP,GAAiBA,OAAO,CAACC,OAAzB","sourcesContent":["/**\r\n * DevExtreme (events/pointer/mouse.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _base = _interopRequireDefault(require(\"./base\"));\r\nvar _observer = _interopRequireDefault(require(\"./observer\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar eventMap = {\r\n    dxpointerdown: \"mousedown\",\r\n    dxpointermove: \"mousemove\",\r\n    dxpointerup: \"mouseup\",\r\n    dxpointercancel: \"\",\r\n    dxpointerover: \"mouseover\",\r\n    dxpointerout: \"mouseout\",\r\n    dxpointerenter: \"mouseenter\",\r\n    dxpointerleave: \"mouseleave\"\r\n};\r\nvar normalizeMouseEvent = function(e) {\r\n    e.pointerId = 1;\r\n    return {\r\n        pointers: observer.pointers(),\r\n        pointerId: 1\r\n    }\r\n};\r\nvar observer;\r\nvar activated = false;\r\nvar activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    observer = new _observer.default(eventMap, function() {\r\n        return true\r\n    });\r\n    activated = true\r\n};\r\nvar MouseStrategy = _base.default.inherit({\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _fireEvent: function(args) {\r\n        return this.callBase((0, _extend.extend)(normalizeMouseEvent(args.originalEvent), args))\r\n    }\r\n});\r\nMouseStrategy.map = eventMap;\r\nMouseStrategy.normalize = normalizeMouseEvent;\r\nMouseStrategy.activate = activateStrategy;\r\nMouseStrategy.resetObserver = function() {\r\n    observer.reset()\r\n};\r\nvar _default = MouseStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}