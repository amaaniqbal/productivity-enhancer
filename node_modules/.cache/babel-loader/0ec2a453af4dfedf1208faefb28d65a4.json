{"ast":null,"code":"/**\r\n * DevExtreme (viz/components/chart_theme_manager.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.ThemeManager = void 0;\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _base_theme_manager = require(\"../core/base_theme_manager\");\n\nvar _utils = require(\"../core/utils\");\n\nvar ThemeManager = _base_theme_manager.BaseThemeManager.inherit(function () {\n  var ctor = function (params) {\n    var that = this;\n    that.callBase.apply(that, arguments);\n    var options = params.options || {};\n    that._userOptions = options;\n    that._mergeAxisTitleOptions = [];\n    that._multiPieColors = {};\n    that._callback = _common.noop;\n  };\n\n  var dispose = function () {\n    var that = this;\n    that.palette && that.palette.dispose();\n    that.palette = that._userOptions = that._mergedSettings = that._multiPieColors = null;\n    return that.callBase.apply(that, arguments);\n  };\n\n  var resetPalette = function () {\n    this.palette.reset();\n    this._multiPieColors = {};\n  };\n\n  var processTitleOptions = function (options) {\n    return (0, _type.isString)(options) ? {\n      text: options\n    } : options;\n  };\n\n  var processAxisOptions = function (axisOptions) {\n    if (!axisOptions) {\n      return {};\n    }\n\n    axisOptions = (0, _extend.extend)(true, {}, axisOptions);\n    axisOptions.title = processTitleOptions(axisOptions.title);\n\n    if (\"logarithmic\" === axisOptions.type && axisOptions.logarithmBase <= 0 || axisOptions.logarithmBase && !(0, _type.isNumeric)(axisOptions.logarithmBase)) {\n      axisOptions.logarithmBase = void 0;\n      axisOptions.logarithmBaseError = true;\n    }\n\n    if (axisOptions.label) {\n      if (axisOptions.label.alignment) {\n        axisOptions.label.userAlignment = true;\n      }\n    }\n\n    return axisOptions;\n  };\n\n  var applyParticularAxisOptions = function (name, userOptions, rotated) {\n    var theme = this._theme;\n    var position = !(rotated ^ \"valueAxis\" === name) ? \"horizontalAxis\" : \"verticalAxis\";\n    var processedUserOptions = processAxisOptions(userOptions, name);\n    var commonAxisSettings = processAxisOptions(this._userOptions.commonAxisSettings, name);\n    var mergeOptions = (0, _extend.extend)(true, {}, theme.commonAxisSettings, theme[position], theme[name], commonAxisSettings, processedUserOptions);\n    mergeOptions.workWeek = processedUserOptions.workWeek || theme[name].workWeek;\n    mergeOptions.forceUserTickInterval |= (0, _type.isDefined)(processedUserOptions.tickInterval) && !(0, _type.isDefined)(processedUserOptions.axisDivisionFactor);\n    return mergeOptions;\n  };\n\n  var mergeOptions = function (name, userOptions) {\n    userOptions = userOptions || this._userOptions[name];\n    var theme = this._theme[name];\n    var result = this._mergedSettings[name];\n\n    if (result) {\n      return result;\n    }\n\n    if ((0, _type.isPlainObject)(theme) && (0, _type.isPlainObject)(userOptions)) {\n      result = (0, _extend.extend)(true, {}, theme, userOptions);\n    } else {\n      result = (0, _type.isDefined)(userOptions) ? userOptions : theme;\n    }\n\n    this._mergedSettings[name] = result;\n    return result;\n  };\n\n  var applyParticularTheme = {\n    base: mergeOptions,\n    argumentAxis: applyParticularAxisOptions,\n    valueAxisRangeSelector: function () {\n      return mergeOptions.call(this, \"valueAxis\");\n    },\n    valueAxis: applyParticularAxisOptions,\n    series: function (name, userOptions, seriesCount) {\n      var that = this;\n      var theme = that._theme;\n      var userCommonSettings = that._userOptions.commonSeriesSettings || {};\n      var themeCommonSettings = theme.commonSeriesSettings;\n\n      var widgetType = that._themeSection.split(\".\").slice(-1)[0];\n\n      var type = (0, _utils.normalizeEnum)(userOptions.type || userCommonSettings.type || themeCommonSettings.type || \"pie\" === widgetType && theme.type);\n      var palette = that.palette;\n      var isBar = ~type.indexOf(\"bar\");\n      var isLine = ~type.indexOf(\"line\");\n      var isArea = ~type.indexOf(\"area\");\n      var isBubble = \"bubble\" === type;\n      var mainSeriesColor;\n      var resolveLabelsOverlapping = that.getOptions(\"resolveLabelsOverlapping\");\n      var containerBackgroundColor = that.getOptions(\"containerBackgroundColor\");\n      var seriesTemplate = applyParticularTheme.seriesTemplate.call(this);\n      var seriesVisibility;\n\n      if (isBar || isBubble) {\n        userOptions = (0, _extend.extend)(true, {}, userCommonSettings, userCommonSettings[type], userOptions);\n        seriesVisibility = userOptions.visible;\n        userCommonSettings = {\n          type: {}\n        };\n        (0, _extend.extend)(true, userOptions, userOptions.point);\n        userOptions.visible = seriesVisibility;\n      }\n\n      var settings = (0, _extend.extend)(true, {\n        aggregation: {}\n      }, themeCommonSettings, themeCommonSettings[type], userCommonSettings, userCommonSettings[type], userOptions);\n      settings.aggregation.enabled = \"chart\" === widgetType && !!settings.aggregation.enabled;\n      settings.type = type;\n      settings.widgetType = widgetType;\n      settings.containerBackgroundColor = containerBackgroundColor;\n\n      if (\"pie\" !== widgetType) {\n        mainSeriesColor = settings.color || palette.getNextColor(seriesCount);\n      } else {\n        mainSeriesColor = function (argument, index, count) {\n          var cat = \"\".concat(argument, \"-\").concat(index);\n\n          if (!that._multiPieColors[cat]) {\n            that._multiPieColors[cat] = palette.getNextColor(count);\n          }\n\n          return that._multiPieColors[cat];\n        };\n      }\n\n      settings.mainSeriesColor = mainSeriesColor;\n      settings.resolveLabelsOverlapping = resolveLabelsOverlapping;\n\n      if (settings.label && (isLine || isArea && \"rangearea\" !== type || \"scatter\" === type)) {\n        settings.label.position = \"outside\";\n      }\n\n      if (seriesTemplate) {\n        settings.nameField = seriesTemplate.nameField;\n      }\n\n      return settings;\n    },\n    animation: function (name) {\n      var userOptions = this._userOptions[name];\n      userOptions = (0, _type.isPlainObject)(userOptions) ? userOptions : (0, _type.isDefined)(userOptions) ? {\n        enabled: !!userOptions\n      } : {};\n      return mergeOptions.call(this, name, userOptions);\n    },\n    seriesTemplate: function () {\n      var value = mergeOptions.call(this, \"seriesTemplate\");\n\n      if (value) {\n        value.nameField = value.nameField || \"series\";\n      }\n\n      return value;\n    },\n    zoomAndPan: function () {\n      function parseOption(option) {\n        option = (0, _utils.normalizeEnum)(option);\n        var pan = \"pan\" === option || \"both\" === option;\n        var zoom = \"zoom\" === option || \"both\" === option;\n        return {\n          pan: pan,\n          zoom: zoom,\n          none: !pan && !zoom\n        };\n      }\n\n      var options = mergeOptions.call(this, \"zoomAndPan\");\n      return {\n        valueAxis: parseOption(options.valueAxis),\n        argumentAxis: parseOption(options.argumentAxis),\n        dragToZoom: !!options.dragToZoom,\n        dragBoxStyle: {\n          \"class\": \"dxc-shutter\",\n          fill: options.dragBoxStyle.color,\n          opacity: options.dragBoxStyle.opacity\n        },\n        panKey: options.panKey,\n        allowMouseWheel: !!options.allowMouseWheel,\n        allowTouchGestures: !!options.allowTouchGestures\n      };\n    }\n  };\n  return {\n    _themeSection: \"chart\",\n    ctor: ctor,\n    dispose: dispose,\n    resetPalette: resetPalette,\n    getOptions: function (name) {\n      return (applyParticularTheme[name] || applyParticularTheme.base).apply(this, arguments);\n    },\n    refresh: function () {\n      this._mergedSettings = {};\n      return this.callBase.apply(this, arguments);\n    },\n    _initializeTheme: function () {\n      var that = this;\n      that.callBase.apply(that, arguments);\n      that.updatePalette();\n    },\n    resetOptions: function (name) {\n      this._mergedSettings[name] = null;\n    },\n    update: function (options) {\n      this._userOptions = options;\n    },\n    updatePalette: function () {\n      var that = this;\n      that.palette = that.createPalette(that.getOptions(\"palette\"), {\n        useHighlight: true,\n        extensionMode: that.getOptions(\"paletteExtensionMode\")\n      });\n    }\n  };\n}());\n\nexports.ThemeManager = ThemeManager;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/components/chart_theme_manager.js"],"names":["exports","ThemeManager","_common","require","_type","_extend","_base_theme_manager","_utils","BaseThemeManager","inherit","ctor","params","that","callBase","apply","arguments","options","_userOptions","_mergeAxisTitleOptions","_multiPieColors","_callback","noop","dispose","palette","_mergedSettings","resetPalette","reset","processTitleOptions","isString","text","processAxisOptions","axisOptions","extend","title","type","logarithmBase","isNumeric","logarithmBaseError","label","alignment","userAlignment","applyParticularAxisOptions","name","userOptions","rotated","theme","_theme","position","processedUserOptions","commonAxisSettings","mergeOptions","workWeek","forceUserTickInterval","isDefined","tickInterval","axisDivisionFactor","result","isPlainObject","applyParticularTheme","base","argumentAxis","valueAxisRangeSelector","call","valueAxis","series","seriesCount","userCommonSettings","commonSeriesSettings","themeCommonSettings","widgetType","_themeSection","split","slice","normalizeEnum","isBar","indexOf","isLine","isArea","isBubble","mainSeriesColor","resolveLabelsOverlapping","getOptions","containerBackgroundColor","seriesTemplate","seriesVisibility","visible","point","settings","aggregation","enabled","color","getNextColor","argument","index","count","cat","concat","nameField","animation","value","zoomAndPan","parseOption","option","pan","zoom","none","dragToZoom","dragBoxStyle","fill","opacity","panKey","allowMouseWheel","allowTouchGestures","refresh","_initializeTheme","updatePalette","resetOptions","update","createPalette","useHighlight","extensionMode"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/components/chart_theme_manager.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.ThemeManager = void 0;\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _base_theme_manager = require(\"../core/base_theme_manager\");\r\nvar _utils = require(\"../core/utils\");\r\nvar ThemeManager = _base_theme_manager.BaseThemeManager.inherit(function() {\r\n    var ctor = function(params) {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        var options = params.options || {};\r\n        that._userOptions = options;\r\n        that._mergeAxisTitleOptions = [];\r\n        that._multiPieColors = {};\r\n        that._callback = _common.noop\r\n    };\r\n    var dispose = function() {\r\n        var that = this;\r\n        that.palette && that.palette.dispose();\r\n        that.palette = that._userOptions = that._mergedSettings = that._multiPieColors = null;\r\n        return that.callBase.apply(that, arguments)\r\n    };\r\n    var resetPalette = function() {\r\n        this.palette.reset();\r\n        this._multiPieColors = {}\r\n    };\r\n    var processTitleOptions = function(options) {\r\n        return (0, _type.isString)(options) ? {\r\n            text: options\r\n        } : options\r\n    };\r\n    var processAxisOptions = function(axisOptions) {\r\n        if (!axisOptions) {\r\n            return {}\r\n        }\r\n        axisOptions = (0, _extend.extend)(true, {}, axisOptions);\r\n        axisOptions.title = processTitleOptions(axisOptions.title);\r\n        if (\"logarithmic\" === axisOptions.type && axisOptions.logarithmBase <= 0 || axisOptions.logarithmBase && !(0, _type.isNumeric)(axisOptions.logarithmBase)) {\r\n            axisOptions.logarithmBase = void 0;\r\n            axisOptions.logarithmBaseError = true\r\n        }\r\n        if (axisOptions.label) {\r\n            if (axisOptions.label.alignment) {\r\n                axisOptions.label.userAlignment = true\r\n            }\r\n        }\r\n        return axisOptions\r\n    };\r\n    var applyParticularAxisOptions = function(name, userOptions, rotated) {\r\n        var theme = this._theme;\r\n        var position = !(rotated ^ \"valueAxis\" === name) ? \"horizontalAxis\" : \"verticalAxis\";\r\n        var processedUserOptions = processAxisOptions(userOptions, name);\r\n        var commonAxisSettings = processAxisOptions(this._userOptions.commonAxisSettings, name);\r\n        var mergeOptions = (0, _extend.extend)(true, {}, theme.commonAxisSettings, theme[position], theme[name], commonAxisSettings, processedUserOptions);\r\n        mergeOptions.workWeek = processedUserOptions.workWeek || theme[name].workWeek;\r\n        mergeOptions.forceUserTickInterval |= (0, _type.isDefined)(processedUserOptions.tickInterval) && !(0, _type.isDefined)(processedUserOptions.axisDivisionFactor);\r\n        return mergeOptions\r\n    };\r\n    var mergeOptions = function(name, userOptions) {\r\n        userOptions = userOptions || this._userOptions[name];\r\n        var theme = this._theme[name];\r\n        var result = this._mergedSettings[name];\r\n        if (result) {\r\n            return result\r\n        }\r\n        if ((0, _type.isPlainObject)(theme) && (0, _type.isPlainObject)(userOptions)) {\r\n            result = (0, _extend.extend)(true, {}, theme, userOptions)\r\n        } else {\r\n            result = (0, _type.isDefined)(userOptions) ? userOptions : theme\r\n        }\r\n        this._mergedSettings[name] = result;\r\n        return result\r\n    };\r\n    var applyParticularTheme = {\r\n        base: mergeOptions,\r\n        argumentAxis: applyParticularAxisOptions,\r\n        valueAxisRangeSelector: function() {\r\n            return mergeOptions.call(this, \"valueAxis\")\r\n        },\r\n        valueAxis: applyParticularAxisOptions,\r\n        series: function(name, userOptions, seriesCount) {\r\n            var that = this;\r\n            var theme = that._theme;\r\n            var userCommonSettings = that._userOptions.commonSeriesSettings || {};\r\n            var themeCommonSettings = theme.commonSeriesSettings;\r\n            var widgetType = that._themeSection.split(\".\").slice(-1)[0];\r\n            var type = (0, _utils.normalizeEnum)(userOptions.type || userCommonSettings.type || themeCommonSettings.type || \"pie\" === widgetType && theme.type);\r\n            var palette = that.palette;\r\n            var isBar = ~type.indexOf(\"bar\");\r\n            var isLine = ~type.indexOf(\"line\");\r\n            var isArea = ~type.indexOf(\"area\");\r\n            var isBubble = \"bubble\" === type;\r\n            var mainSeriesColor;\r\n            var resolveLabelsOverlapping = that.getOptions(\"resolveLabelsOverlapping\");\r\n            var containerBackgroundColor = that.getOptions(\"containerBackgroundColor\");\r\n            var seriesTemplate = applyParticularTheme.seriesTemplate.call(this);\r\n            var seriesVisibility;\r\n            if (isBar || isBubble) {\r\n                userOptions = (0, _extend.extend)(true, {}, userCommonSettings, userCommonSettings[type], userOptions);\r\n                seriesVisibility = userOptions.visible;\r\n                userCommonSettings = {\r\n                    type: {}\r\n                };\r\n                (0, _extend.extend)(true, userOptions, userOptions.point);\r\n                userOptions.visible = seriesVisibility\r\n            }\r\n            var settings = (0, _extend.extend)(true, {\r\n                aggregation: {}\r\n            }, themeCommonSettings, themeCommonSettings[type], userCommonSettings, userCommonSettings[type], userOptions);\r\n            settings.aggregation.enabled = \"chart\" === widgetType && !!settings.aggregation.enabled;\r\n            settings.type = type;\r\n            settings.widgetType = widgetType;\r\n            settings.containerBackgroundColor = containerBackgroundColor;\r\n            if (\"pie\" !== widgetType) {\r\n                mainSeriesColor = settings.color || palette.getNextColor(seriesCount)\r\n            } else {\r\n                mainSeriesColor = function(argument, index, count) {\r\n                    var cat = \"\".concat(argument, \"-\").concat(index);\r\n                    if (!that._multiPieColors[cat]) {\r\n                        that._multiPieColors[cat] = palette.getNextColor(count)\r\n                    }\r\n                    return that._multiPieColors[cat]\r\n                }\r\n            }\r\n            settings.mainSeriesColor = mainSeriesColor;\r\n            settings.resolveLabelsOverlapping = resolveLabelsOverlapping;\r\n            if (settings.label && (isLine || isArea && \"rangearea\" !== type || \"scatter\" === type)) {\r\n                settings.label.position = \"outside\"\r\n            }\r\n            if (seriesTemplate) {\r\n                settings.nameField = seriesTemplate.nameField\r\n            }\r\n            return settings\r\n        },\r\n        animation: function(name) {\r\n            var userOptions = this._userOptions[name];\r\n            userOptions = (0, _type.isPlainObject)(userOptions) ? userOptions : (0, _type.isDefined)(userOptions) ? {\r\n                enabled: !!userOptions\r\n            } : {};\r\n            return mergeOptions.call(this, name, userOptions)\r\n        },\r\n        seriesTemplate: function() {\r\n            var value = mergeOptions.call(this, \"seriesTemplate\");\r\n            if (value) {\r\n                value.nameField = value.nameField || \"series\"\r\n            }\r\n            return value\r\n        },\r\n        zoomAndPan: function() {\r\n            function parseOption(option) {\r\n                option = (0, _utils.normalizeEnum)(option);\r\n                var pan = \"pan\" === option || \"both\" === option;\r\n                var zoom = \"zoom\" === option || \"both\" === option;\r\n                return {\r\n                    pan: pan,\r\n                    zoom: zoom,\r\n                    none: !pan && !zoom\r\n                }\r\n            }\r\n            var options = mergeOptions.call(this, \"zoomAndPan\");\r\n            return {\r\n                valueAxis: parseOption(options.valueAxis),\r\n                argumentAxis: parseOption(options.argumentAxis),\r\n                dragToZoom: !!options.dragToZoom,\r\n                dragBoxStyle: {\r\n                    \"class\": \"dxc-shutter\",\r\n                    fill: options.dragBoxStyle.color,\r\n                    opacity: options.dragBoxStyle.opacity\r\n                },\r\n                panKey: options.panKey,\r\n                allowMouseWheel: !!options.allowMouseWheel,\r\n                allowTouchGestures: !!options.allowTouchGestures\r\n            }\r\n        }\r\n    };\r\n    return {\r\n        _themeSection: \"chart\",\r\n        ctor: ctor,\r\n        dispose: dispose,\r\n        resetPalette: resetPalette,\r\n        getOptions: function(name) {\r\n            return (applyParticularTheme[name] || applyParticularTheme.base).apply(this, arguments)\r\n        },\r\n        refresh: function() {\r\n            this._mergedSettings = {};\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        _initializeTheme: function() {\r\n            var that = this;\r\n            that.callBase.apply(that, arguments);\r\n            that.updatePalette()\r\n        },\r\n        resetOptions: function(name) {\r\n            this._mergedSettings[name] = null\r\n        },\r\n        update: function(options) {\r\n            this._userOptions = options\r\n        },\r\n        updatePalette: function() {\r\n            var that = this;\r\n            that.palette = that.createPalette(that.getOptions(\"palette\"), {\r\n                useHighlight: true,\r\n                extensionMode: that.getOptions(\"paletteExtensionMode\")\r\n            })\r\n        }\r\n    }\r\n}());\r\nexports.ThemeManager = ThemeManager;\r\n"]},"metadata":{},"sourceType":"script"}