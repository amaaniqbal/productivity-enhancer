{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 20.2.3\n * Build date: Tue Oct 20 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildConfigTree = void 0;\n\nvar React = require(\"react\");\n\nvar widget_config_1 = require(\"../../widget-config\");\n\nvar element_1 = require(\"./element\");\n\nvar utils_1 = require(\"../utils\");\n\nvar templates_1 = require(\"./templates\");\n\nfunction buildConfigTree(widgetDescriptor, props) {\n  return createConfigNode({\n    type: element_1.ElementType.Option,\n    descriptor: __assign({\n      name: '',\n      isCollection: false\n    }, widgetDescriptor),\n    props: props\n  }, '');\n}\n\nexports.buildConfigTree = buildConfigTree;\n\nfunction createConfigNode(element, path) {\n  var fullName = element.descriptor.isCollection ? path : utils_1.mergeNameParts(path, element.descriptor.name);\n  var separatedValues = widget_config_1.separateProps(element.props, element.descriptor.initialValuesProps, element.descriptor.templates);\n  var childrenData = processChildren(element, fullName);\n\n  for (var _i = 0, _a = element.descriptor.templates; _i < _a.length; _i++) {\n    var templateMeta = _a[_i];\n    var template = templates_1.getAnonymousTemplate(element.props, templateMeta, path.length > 0 ? childrenData.hasTranscludedContent : false);\n\n    if (template) {\n      childrenData.templates.push(template);\n    }\n  }\n\n  return {\n    fullName: fullName,\n    predefinedOptions: element.descriptor.predefinedValuesProps,\n    initialOptions: separatedValues.defaults,\n    options: separatedValues.options,\n    templates: childrenData.templates,\n    configCollections: childrenData.configCollections,\n    configs: childrenData.configs\n  };\n}\n\nfunction processChildren(parentElement, parentFullName) {\n  var templates = [];\n  var configCollections = {};\n  var configs = {};\n  var hasTranscludedContent = false;\n  React.Children.map(parentElement.props.children, function (child) {\n    var element = element_1.getElementInfo(child, parentElement.descriptor.expectedChildren);\n\n    if (element.type === element_1.ElementType.Unknown) {\n      hasTranscludedContent = true;\n      return;\n    }\n\n    if (element.type === element_1.ElementType.Template) {\n      var template = templates_1.getNamedTemplate(element.props);\n\n      if (template) {\n        templates.push(template);\n      }\n\n      return;\n    }\n\n    if (element.descriptor.isCollection) {\n      var collection = configCollections[element.descriptor.name];\n\n      if (!collection) {\n        collection = [];\n        configCollections[element.descriptor.name] = collection;\n      }\n\n      var collectionItem = createConfigNode(element, utils_1.mergeNameParts(parentFullName, element.descriptor.name) + '[' + collection.length + ']');\n      collection.push(collectionItem);\n      return;\n    }\n\n    var configNode = createConfigNode(element, parentFullName);\n    configs[element.descriptor.name] = configNode;\n  });\n  return {\n    configs: configs,\n    configCollections: configCollections,\n    templates: templates,\n    hasTranscludedContent: hasTranscludedContent\n  };\n}","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme-react/core/configuration/react/tree.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","buildConfigTree","React","require","widget_config_1","element_1","utils_1","templates_1","widgetDescriptor","props","createConfigNode","type","ElementType","Option","descriptor","name","isCollection","element","path","fullName","mergeNameParts","separatedValues","separateProps","initialValuesProps","templates","childrenData","processChildren","_i","_a","templateMeta","template","getAnonymousTemplate","hasTranscludedContent","push","predefinedOptions","predefinedValuesProps","initialOptions","defaults","options","configCollections","configs","parentElement","parentFullName","Children","map","children","child","getElementInfo","expectedChildren","Unknown","Template","getNamedTemplate","collection","collectionItem","configNode"],"mappings":"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","sourcesContent":["/*!\n * devextreme-react\n * Version: 20.2.3\n * Build date: Tue Oct 20 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildConfigTree = void 0;\nvar React = require(\"react\");\nvar widget_config_1 = require(\"../../widget-config\");\nvar element_1 = require(\"./element\");\nvar utils_1 = require(\"../utils\");\nvar templates_1 = require(\"./templates\");\nfunction buildConfigTree(widgetDescriptor, props) {\n    return createConfigNode({\n        type: element_1.ElementType.Option,\n        descriptor: __assign({ name: '', isCollection: false }, widgetDescriptor),\n        props: props,\n    }, '');\n}\nexports.buildConfigTree = buildConfigTree;\nfunction createConfigNode(element, path) {\n    var fullName = element.descriptor.isCollection\n        ? path\n        : utils_1.mergeNameParts(path, element.descriptor.name);\n    var separatedValues = widget_config_1.separateProps(element.props, element.descriptor.initialValuesProps, element.descriptor.templates);\n    var childrenData = processChildren(element, fullName);\n    for (var _i = 0, _a = element.descriptor.templates; _i < _a.length; _i++) {\n        var templateMeta = _a[_i];\n        var template = templates_1.getAnonymousTemplate(element.props, templateMeta, path.length > 0 ? childrenData.hasTranscludedContent : false);\n        if (template) {\n            childrenData.templates.push(template);\n        }\n    }\n    return {\n        fullName: fullName,\n        predefinedOptions: element.descriptor.predefinedValuesProps,\n        initialOptions: separatedValues.defaults,\n        options: separatedValues.options,\n        templates: childrenData.templates,\n        configCollections: childrenData.configCollections,\n        configs: childrenData.configs,\n    };\n}\nfunction processChildren(parentElement, parentFullName) {\n    var templates = [];\n    var configCollections = {};\n    var configs = {};\n    var hasTranscludedContent = false;\n    React.Children.map(parentElement.props.children, function (child) {\n        var element = element_1.getElementInfo(child, parentElement.descriptor.expectedChildren);\n        if (element.type === element_1.ElementType.Unknown) {\n            hasTranscludedContent = true;\n            return;\n        }\n        if (element.type === element_1.ElementType.Template) {\n            var template = templates_1.getNamedTemplate(element.props);\n            if (template) {\n                templates.push(template);\n            }\n            return;\n        }\n        if (element.descriptor.isCollection) {\n            var collection = configCollections[element.descriptor.name];\n            if (!collection) {\n                collection = [];\n                configCollections[element.descriptor.name] = collection;\n            }\n            var collectionItem = createConfigNode(element, utils_1.mergeNameParts(parentFullName, element.descriptor.name) + '[' + collection.length + ']');\n            collection.push(collectionItem);\n            return;\n        }\n        var configNode = createConfigNode(element, parentFullName);\n        configs[element.descriptor.name] = configNode;\n    });\n    return {\n        configs: configs,\n        configCollections: configCollections,\n        templates: templates,\n        hasTranscludedContent: hasTranscludedContent,\n    };\n}\n"]},"metadata":{},"sourceType":"script"}