{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/touch.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _base = _interopRequireDefault(require(\"./base\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar eventMap = {\n  dxpointerdown: \"touchstart\",\n  dxpointermove: \"touchmove\",\n  dxpointerup: \"touchend\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"\",\n  dxpointerout: \"\",\n  dxpointerenter: \"\",\n  dxpointerleave: \"\"\n};\n\nvar normalizeTouchEvent = function (e) {\n  var pointers = [];\n  (0, _iterator.each)(e.touches, function (_, touch) {\n    pointers.push((0, _extend.extend)({\n      pointerId: touch.identifier\n    }, touch));\n  });\n  return {\n    pointers: pointers,\n    pointerId: e.changedTouches[0].identifier\n  };\n};\n\nvar skipTouchWithSameIdentifier = function (pointerEvent) {\n  return \"ios\" === _devices.default.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent);\n};\n\nvar TouchStrategy = _base.default.inherit({\n  ctor: function () {\n    this.callBase.apply(this, arguments);\n    this._pointerId = 0;\n  },\n  _handler: function (e) {\n    if (skipTouchWithSameIdentifier(this._eventName)) {\n      var touch = e.changedTouches[0];\n\n      if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\n        return;\n      }\n\n      this._pointerId = touch.identifier;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _fireEvent: function (args) {\n    return this.callBase((0, _extend.extend)(normalizeTouchEvent(args.originalEvent), args));\n  }\n});\n\nTouchStrategy.map = eventMap;\nTouchStrategy.normalize = normalizeTouchEvent;\nvar _default = TouchStrategy;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/events/pointer/touch.js"],"names":["exports","default","_devices","_interopRequireDefault","require","_extend","_iterator","_base","obj","__esModule","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","normalizeTouchEvent","e","pointers","each","touches","_","touch","push","extend","pointerId","identifier","changedTouches","skipTouchWithSameIdentifier","pointerEvent","real","platform","TouchStrategy","inherit","ctor","callBase","apply","arguments","_pointerId","_handler","_eventName","_fireEvent","args","originalEvent","map","normalize","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (events/pointer/touch.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _base = _interopRequireDefault(require(\"./base\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar eventMap = {\r\n    dxpointerdown: \"touchstart\",\r\n    dxpointermove: \"touchmove\",\r\n    dxpointerup: \"touchend\",\r\n    dxpointercancel: \"touchcancel\",\r\n    dxpointerover: \"\",\r\n    dxpointerout: \"\",\r\n    dxpointerenter: \"\",\r\n    dxpointerleave: \"\"\r\n};\r\nvar normalizeTouchEvent = function(e) {\r\n    var pointers = [];\r\n    (0, _iterator.each)(e.touches, function(_, touch) {\r\n        pointers.push((0, _extend.extend)({\r\n            pointerId: touch.identifier\r\n        }, touch))\r\n    });\r\n    return {\r\n        pointers: pointers,\r\n        pointerId: e.changedTouches[0].identifier\r\n    }\r\n};\r\nvar skipTouchWithSameIdentifier = function(pointerEvent) {\r\n    return \"ios\" === _devices.default.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent)\r\n};\r\nvar TouchStrategy = _base.default.inherit({\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._pointerId = 0\r\n    },\r\n    _handler: function(e) {\r\n        if (skipTouchWithSameIdentifier(this._eventName)) {\r\n            var touch = e.changedTouches[0];\r\n            if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\r\n                return\r\n            }\r\n            this._pointerId = touch.identifier\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _fireEvent: function(args) {\r\n        return this.callBase((0, _extend.extend)(normalizeTouchEvent(args.originalEvent), args))\r\n    }\r\n});\r\nTouchStrategy.map = eventMap;\r\nTouchStrategy.normalize = normalizeTouchEvent;\r\nvar _default = TouchStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}