{"ast":null,"code":"var _regeneratorRuntime = require(\"E:\\\\Monday.com\\\\quickstart-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"E:\\\\Monday.com\\\\quickstart-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _require = require(\"./../constants.js\"),\n    MONDAY_API_URL = _require.MONDAY_API_URL,\n    MONDAY_OAUTH_TOKEN_URL = _require.MONDAY_OAUTH_TOKEN_URL;\n\nvar fetch = require(\"./fetch\");\n\nvar COULD_NOT_PARSE_JSON_RESPONSE_ERROR = \"Could not parse JSON from monday.com's GraphQL API response\";\nvar TOKEN_IS_REQUIRED_ERROR = \"Token is required\";\n\nfunction apiRequest(url, data, token) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return fetch.nodeFetch(url, {\n    method: options.method || \"POST\",\n    body: JSON.stringify(data || {}),\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\nfunction execute(_x, _x2) {\n  return _execute.apply(this, arguments);\n}\n\nfunction _execute() {\n  _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, token) {\n    var options,\n        url,\n        path,\n        fullUrl,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n            if (!(!token && options.url !== MONDAY_OAUTH_TOKEN_URL)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(TOKEN_IS_REQUIRED_ERROR);\n\n          case 3:\n            url = options.url || MONDAY_API_URL;\n            path = options.path || \"\";\n            fullUrl = \"\".concat(url).concat(path);\n            _context.next = 8;\n            return apiRequest(fullUrl, data, token, options);\n\n          case 8:\n            response = _context.sent;\n            _context.prev = 9;\n            _context.next = 12;\n            return response.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](9);\n            throw new Error(COULD_NOT_PARSE_JSON_RESPONSE_ERROR);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 15]]);\n  }));\n  return _execute.apply(this, arguments);\n}\n\nmodule.exports = {\n  execute: execute,\n  COULD_NOT_PARSE_JSON_RESPONSE_ERROR: COULD_NOT_PARSE_JSON_RESPONSE_ERROR\n};","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/monday-sdk-js/src/monday-api-client/monday-api-client.js"],"names":["require","MONDAY_API_URL","MONDAY_OAUTH_TOKEN_URL","fetch","COULD_NOT_PARSE_JSON_RESPONSE_ERROR","TOKEN_IS_REQUIRED_ERROR","apiRequest","url","data","token","options","nodeFetch","method","body","JSON","stringify","headers","Authorization","execute","Error","path","fullUrl","response","json","module","exports"],"mappings":";;;;eAAmDA,OAAO,CAAC,mBAAD,C;IAAlDC,c,YAAAA,c;IAAgBC,sB,YAAAA,sB;;AACxB,IAAMC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMI,mCAAmC,GAAG,6DAA5C;AACA,IAAMC,uBAAuB,GAAG,mBAAhC;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAoD;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAClD,SAAOP,KAAK,CAACQ,SAAN,CAAgBJ,GAAhB,EAAqB;AAC1BK,IAAAA,MAAM,EAAEF,OAAO,CAACE,MAAR,IAAkB,MADA;AAE1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAI,IAAI,EAAvB,CAFoB;AAG1BQ,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAER,KADR;AAEP,sBAAgB;AAFT;AAHiB,GAArB,CAAP;AAQD;;SAEcS,O;;;;;sEAAf,iBAAuBV,IAAvB,EAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoCC,YAAAA,OAApC,2DAA8C,EAA9C;;AAAA,kBACM,CAACD,KAAD,IAAUC,OAAO,CAACH,GAAR,KAAgBL,sBADhC;AAAA;AAAA;AAAA;;AAAA,kBAC8D,IAAIiB,KAAJ,CAAUd,uBAAV,CAD9D;;AAAA;AAGQE,YAAAA,GAHR,GAGcG,OAAO,CAACH,GAAR,IAAeN,cAH7B;AAIQmB,YAAAA,IAJR,GAIeV,OAAO,CAACU,IAAR,IAAgB,EAJ/B;AAKQC,YAAAA,OALR,aAKqBd,GALrB,SAK2Ba,IAL3B;AAAA;AAAA,mBAMuBd,UAAU,CAACe,OAAD,EAAUb,IAAV,EAAgBC,KAAhB,EAAuBC,OAAvB,CANjC;;AAAA;AAMMY,YAAAA,QANN;AAAA;AAAA;AAAA,mBASiBA,QAAQ,CAACC,IAAT,EATjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAWU,IAAIJ,KAAJ,CAAUf,mCAAV,CAXV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeAoB,MAAM,CAACC,OAAP,GAAiB;AAAEP,EAAAA,OAAO,EAAPA,OAAF;AAAWd,EAAAA,mCAAmC,EAAnCA;AAAX,CAAjB","sourcesContent":["const { MONDAY_API_URL, MONDAY_OAUTH_TOKEN_URL } = require(\"./../constants.js\");\nconst fetch = require(\"./fetch\");\n\nconst COULD_NOT_PARSE_JSON_RESPONSE_ERROR = \"Could not parse JSON from monday.com's GraphQL API response\";\nconst TOKEN_IS_REQUIRED_ERROR = \"Token is required\";\n\nfunction apiRequest(url, data, token, options = {}) {\n  return fetch.nodeFetch(url, {\n    method: options.method || \"POST\",\n    body: JSON.stringify(data || {}),\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\nasync function execute(data, token, options = {}) {\n  if (!token && options.url !== MONDAY_OAUTH_TOKEN_URL) throw new Error(TOKEN_IS_REQUIRED_ERROR);\n\n  const url = options.url || MONDAY_API_URL;\n  const path = options.path || \"\";\n  const fullUrl = `${url}${path}`;\n  let response = await apiRequest(fullUrl, data, token, options);\n\n  try {\n    return await response.json();\n  } catch (err) {\n    throw new Error(COULD_NOT_PARSE_JSON_RESPONSE_ERROR);\n  }\n}\n\nmodule.exports = { execute, COULD_NOT_PARSE_JSON_RESPONSE_ERROR };\n"]},"metadata":{},"sourceType":"script"}