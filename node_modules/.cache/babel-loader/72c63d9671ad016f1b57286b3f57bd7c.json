{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/mouse_and_touch.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _base = _interopRequireDefault(require(\"./base\"));\n\nvar _mouse = _interopRequireDefault(require(\"./mouse\"));\n\nvar _touch = _interopRequireDefault(require(\"./touch\"));\n\nvar _index = require(\"../utils/index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar eventMap = {\n  dxpointerdown: \"touchstart mousedown\",\n  dxpointermove: \"touchmove mousemove\",\n  dxpointerup: \"touchend mouseup\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\nvar activated = false;\n\nvar activateStrategy = function activateStrategy() {\n  if (activated) {\n    return;\n  }\n\n  _mouse.default.activate();\n\n  activated = true;\n};\n\nvar MouseAndTouchStrategy = _base.default.inherit({\n  EVENT_LOCK_TIMEOUT: 100,\n  ctor: function ctor() {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _handler: function _handler(e) {\n    var isMouse = (0, _index.isMouseEvent)(e);\n\n    if (!isMouse) {\n      this._skipNextEvents = true;\n    }\n\n    if (isMouse && this._mouseLocked) {\n      return;\n    }\n\n    if (isMouse && this._skipNextEvents) {\n      this._skipNextEvents = false;\n      this._mouseLocked = true;\n      clearTimeout(this._unlockMouseTimer);\n      var that = this;\n      this._unlockMouseTimer = setTimeout(function () {\n        that._mouseLocked = false;\n      }, this.EVENT_LOCK_TIMEOUT);\n      return;\n    }\n\n    return this.callBase(e);\n  },\n  _fireEvent: function _fireEvent(args) {\n    var normalizer = (0, _index.isMouseEvent)(args.originalEvent) ? _mouse.default.normalize : _touch.default.normalize;\n    return this.callBase((0, _extend.extend)(normalizer(args.originalEvent), args));\n  },\n  dispose: function dispose() {\n    this.callBase();\n    this._skipNextEvents = false;\n    this._mouseLocked = false;\n    clearTimeout(this._unlockMouseTimer);\n  }\n});\n\nMouseAndTouchStrategy.map = eventMap;\nMouseAndTouchStrategy.resetObserver = _mouse.default.resetObserver;\nvar _default = MouseAndTouchStrategy;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/events/pointer/mouse_and_touch.js"],"names":["exports","default","_extend","require","_base","_interopRequireDefault","_mouse","_touch","_index","obj","__esModule","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","activated","activateStrategy","activate","MouseAndTouchStrategy","inherit","EVENT_LOCK_TIMEOUT","ctor","callBase","apply","arguments","_handler","e","isMouse","isMouseEvent","_skipNextEvents","_mouseLocked","clearTimeout","_unlockMouseTimer","that","setTimeout","_fireEvent","args","normalizer","originalEvent","normalize","extend","dispose","map","resetObserver","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (events/pointer/mouse_and_touch.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _base = _interopRequireDefault(require(\"./base\"));\r\nvar _mouse = _interopRequireDefault(require(\"./mouse\"));\r\nvar _touch = _interopRequireDefault(require(\"./touch\"));\r\nvar _index = require(\"../utils/index\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar eventMap = {\r\n    dxpointerdown: \"touchstart mousedown\",\r\n    dxpointermove: \"touchmove mousemove\",\r\n    dxpointerup: \"touchend mouseup\",\r\n    dxpointercancel: \"touchcancel\",\r\n    dxpointerover: \"mouseover\",\r\n    dxpointerout: \"mouseout\",\r\n    dxpointerenter: \"mouseenter\",\r\n    dxpointerleave: \"mouseleave\"\r\n};\r\nvar activated = false;\r\nvar activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    _mouse.default.activate();\r\n    activated = true\r\n};\r\nvar MouseAndTouchStrategy = _base.default.inherit({\r\n    EVENT_LOCK_TIMEOUT: 100,\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _handler: function(e) {\r\n        var isMouse = (0, _index.isMouseEvent)(e);\r\n        if (!isMouse) {\r\n            this._skipNextEvents = true\r\n        }\r\n        if (isMouse && this._mouseLocked) {\r\n            return\r\n        }\r\n        if (isMouse && this._skipNextEvents) {\r\n            this._skipNextEvents = false;\r\n            this._mouseLocked = true;\r\n            clearTimeout(this._unlockMouseTimer);\r\n            var that = this;\r\n            this._unlockMouseTimer = setTimeout(function() {\r\n                that._mouseLocked = false\r\n            }, this.EVENT_LOCK_TIMEOUT);\r\n            return\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _fireEvent: function(args) {\r\n        var normalizer = (0, _index.isMouseEvent)(args.originalEvent) ? _mouse.default.normalize : _touch.default.normalize;\r\n        return this.callBase((0, _extend.extend)(normalizer(args.originalEvent), args))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._skipNextEvents = false;\r\n        this._mouseLocked = false;\r\n        clearTimeout(this._unlockMouseTimer)\r\n    }\r\n});\r\nMouseAndTouchStrategy.map = eventMap;\r\nMouseAndTouchStrategy.resetObserver = _mouse.default.resetObserver;\r\nvar _default = MouseAndTouchStrategy;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}