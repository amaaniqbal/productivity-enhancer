{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.fill_helper.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _excel = _interopRequireDefault(require(\"./excel.tag_helper\"));\n\nvar _excel2 = _interopRequireDefault(require(\"./excel.pattern_fill_helper\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar fillHelper = {\n  tryCreateTag: function (sourceObj) {\n    var result = null;\n\n    if ((0, _type.isDefined)(sourceObj)) {\n      result = {\n        patternFill: _excel2.default.tryCreateTag(sourceObj.patternFill)\n      };\n\n      if (fillHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  tryCreateFillFromSimpleFormat: function () {\n    var _ref = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n        backgroundColor = _ref.backgroundColor,\n        fillPatternType = _ref.fillPatternType,\n        fillPatternColor = _ref.fillPatternColor;\n\n    if ((0, _type.isDefined)(backgroundColor) && !((0, _type.isDefined)(fillPatternType) && (0, _type.isDefined)(fillPatternColor))) {\n      return {\n        patternFill: {\n          patternType: \"solid\",\n          foregroundColor: {\n            rgb: backgroundColor\n          }\n        }\n      };\n    } else {\n      if ((0, _type.isDefined)(fillPatternType) && (0, _type.isDefined)(fillPatternColor)) {\n        return {\n          patternFill: {\n            patternType: fillPatternType,\n            foregroundColor: {\n              rgb: fillPatternColor\n            },\n            backgroundColor: {\n              rgb: backgroundColor\n            }\n          }\n        };\n      }\n    }\n  },\n  copySimpleFormat: function (source, target) {\n    if (void 0 !== source.backgroundColor) {\n      target.backgroundColor = source.backgroundColor;\n    }\n\n    if (void 0 !== source.fillPatternType) {\n      target.fillPatternType = source.fillPatternType;\n    }\n\n    if (void 0 !== source.fillPatternColor) {\n      target.fillPatternColor = source.fillPatternColor;\n    }\n  },\n  copy: function (source) {\n    var result = null;\n\n    if ((0, _type.isDefined)(source)) {\n      result = {};\n\n      if (void 0 !== source.patternFill) {\n        result.patternFill = _excel2.default.copy(source.patternFill);\n      }\n    }\n\n    return result;\n  },\n  areEqual: function (leftTag, rightTag) {\n    return fillHelper.isEmpty(leftTag) && fillHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && _excel2.default.areEqual(leftTag.patternFill, rightTag.patternFill);\n  },\n  isEmpty: function (tag) {\n    return !(0, _type.isDefined)(tag) || _excel2.default.isEmpty(tag.patternFill);\n  },\n  toXml: function (tag) {\n    return _excel.default.toXml(\"fill\", {}, _excel2.default.toXml(tag.patternFill));\n  }\n};\nvar _default = fillHelper;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/exporter/excel/excel.fill_helper.js"],"names":["exports","default","_type","require","_excel","_interopRequireDefault","_excel2","obj","__esModule","fillHelper","tryCreateTag","sourceObj","result","isDefined","patternFill","isEmpty","tryCreateFillFromSimpleFormat","_ref","arguments","length","backgroundColor","fillPatternType","fillPatternColor","patternType","foregroundColor","rgb","copySimpleFormat","source","target","copy","areEqual","leftTag","rightTag","tag","toXml","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (exporter/excel/excel.fill_helper.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _excel = _interopRequireDefault(require(\"./excel.tag_helper\"));\r\nvar _excel2 = _interopRequireDefault(require(\"./excel.pattern_fill_helper\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar fillHelper = {\r\n    tryCreateTag: function(sourceObj) {\r\n        var result = null;\r\n        if ((0, _type.isDefined)(sourceObj)) {\r\n            result = {\r\n                patternFill: _excel2.default.tryCreateTag(sourceObj.patternFill)\r\n            };\r\n            if (fillHelper.isEmpty(result)) {\r\n                result = null\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    tryCreateFillFromSimpleFormat: function() {\r\n        var _ref = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\r\n            backgroundColor = _ref.backgroundColor,\r\n            fillPatternType = _ref.fillPatternType,\r\n            fillPatternColor = _ref.fillPatternColor;\r\n        if ((0, _type.isDefined)(backgroundColor) && !((0, _type.isDefined)(fillPatternType) && (0, _type.isDefined)(fillPatternColor))) {\r\n            return {\r\n                patternFill: {\r\n                    patternType: \"solid\",\r\n                    foregroundColor: {\r\n                        rgb: backgroundColor\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if ((0, _type.isDefined)(fillPatternType) && (0, _type.isDefined)(fillPatternColor)) {\r\n                return {\r\n                    patternFill: {\r\n                        patternType: fillPatternType,\r\n                        foregroundColor: {\r\n                            rgb: fillPatternColor\r\n                        },\r\n                        backgroundColor: {\r\n                            rgb: backgroundColor\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    copySimpleFormat: function(source, target) {\r\n        if (void 0 !== source.backgroundColor) {\r\n            target.backgroundColor = source.backgroundColor\r\n        }\r\n        if (void 0 !== source.fillPatternType) {\r\n            target.fillPatternType = source.fillPatternType\r\n        }\r\n        if (void 0 !== source.fillPatternColor) {\r\n            target.fillPatternColor = source.fillPatternColor\r\n        }\r\n    },\r\n    copy: function(source) {\r\n        var result = null;\r\n        if ((0, _type.isDefined)(source)) {\r\n            result = {};\r\n            if (void 0 !== source.patternFill) {\r\n                result.patternFill = _excel2.default.copy(source.patternFill)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    areEqual: function(leftTag, rightTag) {\r\n        return fillHelper.isEmpty(leftTag) && fillHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && _excel2.default.areEqual(leftTag.patternFill, rightTag.patternFill)\r\n    },\r\n    isEmpty: function(tag) {\r\n        return !(0, _type.isDefined)(tag) || _excel2.default.isEmpty(tag.patternFill)\r\n    },\r\n    toXml: function(tag) {\r\n        return _excel.default.toXml(\"fill\", {}, _excel2.default.toXml(tag.patternFill))\r\n    }\r\n};\r\nvar _default = fillHelper;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}