{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/layout_manager.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.LayoutManager = LayoutManager;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _consts = _interopRequireDefault(require(\"../components/consts\"));\n\nvar _layout_element = require(\"../core/layout_element\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar floor = Math.floor,\n    sqrt = Math.sqrt;\nvar _min = Math.min;\nvar _max = Math.max;\nvar RADIAL_LABEL_INDENT = _consts.default.radialLabelIndent;\n\nfunction getNearestCoord(firstCoord, secondCoord, pointCenterCoord) {\n  var nearestCoord;\n\n  if (pointCenterCoord < firstCoord) {\n    nearestCoord = firstCoord;\n  } else {\n    if (secondCoord < pointCenterCoord) {\n      nearestCoord = secondCoord;\n    } else {\n      nearestCoord = pointCenterCoord;\n    }\n  }\n\n  return nearestCoord;\n}\n\nfunction getLabelLayout(point) {\n  if (point._label.isVisible() && \"inside\" !== point._label.getLayoutOptions().position) {\n    return point._label.getBoundingRect();\n  }\n}\n\nfunction getPieRadius(series, paneCenterX, paneCenterY, accessibleRadius, minR) {\n  series.some(function (singleSeries) {\n    return singleSeries.getVisiblePoints().reduce(function (radiusIsFound, point) {\n      var labelBBox = getLabelLayout(point);\n\n      if (labelBBox) {\n        var xCoords = getNearestCoord(labelBBox.x, labelBBox.x + labelBBox.width, paneCenterX);\n        var yCoords = getNearestCoord(labelBBox.y, labelBBox.y + labelBBox.height, paneCenterY);\n        accessibleRadius = _min(_max(getLengthFromCenter(xCoords, yCoords, paneCenterX, paneCenterY) - RADIAL_LABEL_INDENT, minR), accessibleRadius);\n        radiusIsFound = true;\n      }\n\n      return radiusIsFound;\n    }, false);\n  });\n  return accessibleRadius;\n}\n\nfunction getSizeLabels(series) {\n  return series.reduce(function (res, singleSeries) {\n    var maxWidth = singleSeries.getVisiblePoints().reduce(function (width, point) {\n      var labelBBox = getLabelLayout(point);\n\n      if (labelBBox && labelBBox.width > width) {\n        width = labelBBox.width;\n      }\n\n      return width;\n    }, 0);\n    var rWidth = maxWidth;\n\n    if (maxWidth) {\n      res.outerLabelsCount++;\n\n      if (res.outerLabelsCount > 1) {\n        maxWidth += _consts.default.pieLabelSpacing;\n      }\n\n      rWidth += _consts.default.pieLabelSpacing;\n    }\n\n    res.sizes.push(maxWidth);\n    res.rSizes.push(rWidth);\n    res.common += maxWidth;\n    return res;\n  }, {\n    sizes: [],\n    rSizes: [],\n    common: 0,\n    outerLabelsCount: 0\n  });\n}\n\nfunction correctLabelRadius(labelSizes, radius, series, canvas, averageWidthLabels, centerX) {\n  var curRadius;\n  var i;\n  var runningWidth = 0;\n  var sizes = labelSizes.sizes;\n  var rSizes = labelSizes.rSizes;\n\n  for (i = 0; i < series.length; i++) {\n    if (0 === sizes[i]) {\n      curRadius && (curRadius += rSizes[i - 1]);\n      continue;\n    }\n\n    curRadius = floor(curRadius ? curRadius + rSizes[i - 1] : radius);\n    series[i].correctLabelRadius(curRadius);\n    runningWidth += averageWidthLabels || sizes[i];\n    rSizes[i] = averageWidthLabels || rSizes[i];\n    series[i].setVisibleArea({\n      left: floor(centerX - radius - runningWidth),\n      right: floor(canvas.width - (centerX + radius + runningWidth)),\n      top: canvas.top,\n      bottom: canvas.bottom,\n      width: canvas.width,\n      height: canvas.height\n    });\n  }\n}\n\nfunction getLengthFromCenter(x, y, paneCenterX, paneCenterY) {\n  return sqrt((x - paneCenterX) * (x - paneCenterX) + (y - paneCenterY) * (y - paneCenterY));\n}\n\nfunction getInnerRadius(series) {\n  var innerRadius;\n\n  if (\"pie\" === series.type) {\n    innerRadius = 0;\n  } else {\n    innerRadius = (0, _type.isNumeric)(series.innerRadius) ? Number(series.innerRadius) : .5;\n    innerRadius = innerRadius < .2 ? .2 : innerRadius;\n    innerRadius = innerRadius > .8 ? .8 : innerRadius;\n  }\n\n  return innerRadius;\n}\n\nfunction LayoutManager() {}\n\nfunction getAverageLabelWidth(centerX, radius, canvas, sizeLabels) {\n  return (centerX - radius - RADIAL_LABEL_INDENT - canvas.left) / sizeLabels.outerLabelsCount;\n}\n\nfunction getFullRadiusWithLabels(centerX, canvas, sizeLabels) {\n  return centerX - canvas.left - (sizeLabels.outerLabelsCount > 0 ? sizeLabels.common + RADIAL_LABEL_INDENT : 0);\n}\n\nfunction correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY) {\n  var sizeLabels = getSizeLabels(series);\n  var averageWidthLabels;\n  var fullRadiusWithLabels = getFullRadiusWithLabels(paneCenterX, canvas, sizeLabels);\n\n  if (fullRadiusWithLabels < minR) {\n    availableRadius = minR;\n    averageWidthLabels = getAverageLabelWidth(paneCenterX, availableRadius, canvas, sizeLabels);\n  } else {\n    availableRadius = _min(getPieRadius(series, paneCenterX, paneCenterY, availableRadius, minR), fullRadiusWithLabels);\n  }\n\n  correctLabelRadius(sizeLabels, availableRadius + RADIAL_LABEL_INDENT, series, canvas, averageWidthLabels, paneCenterX);\n  return availableRadius;\n}\n\nfunction toLayoutElementCoords(canvas) {\n  return new _layout_element.WrapperLayoutElement(null, {\n    x: canvas.left,\n    y: canvas.top,\n    width: canvas.width - canvas.left - canvas.right,\n    height: canvas.height - canvas.top - canvas.bottom\n  });\n}\n\nLayoutManager.prototype = {\n  constructor: LayoutManager,\n  setOptions: function (options) {\n    this._options = options;\n  },\n  applyPieChartSeriesLayout: function (canvas, series, hideLayoutLabels) {\n    var paneSpaceHeight = canvas.height - canvas.top - canvas.bottom;\n    var paneSpaceWidth = canvas.width - canvas.left - canvas.right;\n    var paneCenterX = paneSpaceWidth / 2 + canvas.left;\n    var paneCenterY = paneSpaceHeight / 2 + canvas.top;\n    var piePercentage = this._options.piePercentage;\n    var availableRadius;\n    var minR;\n\n    if ((0, _type.isNumeric)(piePercentage)) {\n      availableRadius = minR = piePercentage * _min(canvas.height, canvas.width) / 2;\n    } else {\n      availableRadius = _min(paneSpaceWidth, paneSpaceHeight) / 2;\n      minR = this._options.minPiePercentage * availableRadius;\n    }\n\n    if (!hideLayoutLabels) {\n      availableRadius = correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY);\n    }\n\n    return {\n      centerX: floor(paneCenterX),\n      centerY: floor(paneCenterY),\n      radiusInner: floor(availableRadius * getInnerRadius(series[0])),\n      radiusOuter: floor(availableRadius)\n    };\n  },\n  applyEqualPieChartLayout: function (series, layout) {\n    var radius = layout.radius;\n    return {\n      centerX: floor(layout.x),\n      centerY: floor(layout.y),\n      radiusInner: floor(radius * getInnerRadius(series[0])),\n      radiusOuter: floor(radius)\n    };\n  },\n  correctPieLabelRadius: function (series, layout, canvas) {\n    var sizeLabels = getSizeLabels(series);\n    var averageWidthLabels;\n    var radius = layout.radiusOuter + RADIAL_LABEL_INDENT;\n    var availableLabelWidth = layout.centerX - canvas.left - radius;\n\n    if (sizeLabels.common + RADIAL_LABEL_INDENT > availableLabelWidth) {\n      averageWidthLabels = getAverageLabelWidth(layout.centerX, layout.radiusOuter, canvas, sizeLabels);\n    }\n\n    correctLabelRadius(sizeLabels, radius, series, canvas, averageWidthLabels, layout.centerX);\n  },\n  needMoreSpaceForPanesCanvas: function (panes, rotated, fixedSizeCallback) {\n    var options = this._options;\n    var width = options.width;\n    var height = options.height;\n    var piePercentage = options.piePercentage;\n    var percentageIsValid = (0, _type.isNumeric)(piePercentage);\n    var needHorizontalSpace = 0;\n    var needVerticalSpace = 0;\n    panes.forEach(function (pane) {\n      var paneCanvas = pane.canvas;\n      var minSize = percentageIsValid ? _min(paneCanvas.width, paneCanvas.height) * piePercentage : void 0;\n      var paneSized = fixedSizeCallback ? fixedSizeCallback(pane) : {\n        width: false,\n        height: false\n      };\n      var needPaneHorizontalSpace = !paneSized.width ? (percentageIsValid ? minSize : width) - (paneCanvas.width - paneCanvas.left - paneCanvas.right) : 0;\n      var needPaneVerticalSpace = !paneSized.height ? (percentageIsValid ? minSize : height) - (paneCanvas.height - paneCanvas.top - paneCanvas.bottom) : 0;\n\n      if (rotated) {\n        needHorizontalSpace += needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0;\n        needVerticalSpace = _max(needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0, needVerticalSpace);\n      } else {\n        needHorizontalSpace = _max(needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0, needHorizontalSpace);\n        needVerticalSpace += needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0;\n      }\n    });\n    return needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\n      width: needHorizontalSpace,\n      height: needVerticalSpace\n    } : false;\n  },\n  layoutInsideLegend: function (legend, canvas) {\n    var inverseAlign = {\n      left: \"right\",\n      right: \"left\",\n      top: \"bottom\",\n      bottom: \"top\",\n      center: \"center\"\n    };\n    var layoutOptions = legend.getLayoutOptions();\n\n    if (!layoutOptions) {\n      return;\n    }\n\n    var position = layoutOptions.position;\n    var cutSide = layoutOptions.cutSide;\n    var my = {\n      horizontal: position.horizontal,\n      vertical: position.vertical\n    };\n    canvas[layoutOptions.cutLayoutSide] += \"horizontal\" === layoutOptions.cutSide ? layoutOptions.width : layoutOptions.height;\n    my[cutSide] = inverseAlign[my[cutSide]];\n    legend.position({\n      of: toLayoutElementCoords(canvas),\n      my: my,\n      at: position\n    });\n  }\n};","map":{"version":3,"sources":["E:/Monday.com/quickstart-react/node_modules/devextreme/viz/chart_components/layout_manager.js"],"names":["exports","LayoutManager","_type","require","_consts","_interopRequireDefault","_layout_element","obj","__esModule","floor","Math","sqrt","_min","min","_max","max","RADIAL_LABEL_INDENT","default","radialLabelIndent","getNearestCoord","firstCoord","secondCoord","pointCenterCoord","nearestCoord","getLabelLayout","point","_label","isVisible","getLayoutOptions","position","getBoundingRect","getPieRadius","series","paneCenterX","paneCenterY","accessibleRadius","minR","some","singleSeries","getVisiblePoints","reduce","radiusIsFound","labelBBox","xCoords","x","width","yCoords","y","height","getLengthFromCenter","getSizeLabels","res","maxWidth","rWidth","outerLabelsCount","pieLabelSpacing","sizes","push","rSizes","common","correctLabelRadius","labelSizes","radius","canvas","averageWidthLabels","centerX","curRadius","i","runningWidth","length","setVisibleArea","left","right","top","bottom","getInnerRadius","innerRadius","type","isNumeric","Number","getAverageLabelWidth","sizeLabels","getFullRadiusWithLabels","correctAvailableRadius","availableRadius","fullRadiusWithLabels","toLayoutElementCoords","WrapperLayoutElement","prototype","constructor","setOptions","options","_options","applyPieChartSeriesLayout","hideLayoutLabels","paneSpaceHeight","paneSpaceWidth","piePercentage","minPiePercentage","centerY","radiusInner","radiusOuter","applyEqualPieChartLayout","layout","correctPieLabelRadius","availableLabelWidth","needMoreSpaceForPanesCanvas","panes","rotated","fixedSizeCallback","percentageIsValid","needHorizontalSpace","needVerticalSpace","forEach","pane","paneCanvas","minSize","paneSized","needPaneHorizontalSpace","needPaneVerticalSpace","layoutInsideLegend","legend","inverseAlign","center","layoutOptions","cutSide","my","horizontal","vertical","cutLayoutSide","of","at"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/layout_manager.js)\r\n * Version: 20.2.3\r\n * Build date: Tue Oct 20 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.LayoutManager = LayoutManager;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _consts = _interopRequireDefault(require(\"../components/consts\"));\r\nvar _layout_element = require(\"../core/layout_element\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar floor = Math.floor,\r\n    sqrt = Math.sqrt;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar RADIAL_LABEL_INDENT = _consts.default.radialLabelIndent;\r\n\r\nfunction getNearestCoord(firstCoord, secondCoord, pointCenterCoord) {\r\n    var nearestCoord;\r\n    if (pointCenterCoord < firstCoord) {\r\n        nearestCoord = firstCoord\r\n    } else {\r\n        if (secondCoord < pointCenterCoord) {\r\n            nearestCoord = secondCoord\r\n        } else {\r\n            nearestCoord = pointCenterCoord\r\n        }\r\n    }\r\n    return nearestCoord\r\n}\r\n\r\nfunction getLabelLayout(point) {\r\n    if (point._label.isVisible() && \"inside\" !== point._label.getLayoutOptions().position) {\r\n        return point._label.getBoundingRect()\r\n    }\r\n}\r\n\r\nfunction getPieRadius(series, paneCenterX, paneCenterY, accessibleRadius, minR) {\r\n    series.some(function(singleSeries) {\r\n        return singleSeries.getVisiblePoints().reduce(function(radiusIsFound, point) {\r\n            var labelBBox = getLabelLayout(point);\r\n            if (labelBBox) {\r\n                var xCoords = getNearestCoord(labelBBox.x, labelBBox.x + labelBBox.width, paneCenterX);\r\n                var yCoords = getNearestCoord(labelBBox.y, labelBBox.y + labelBBox.height, paneCenterY);\r\n                accessibleRadius = _min(_max(getLengthFromCenter(xCoords, yCoords, paneCenterX, paneCenterY) - RADIAL_LABEL_INDENT, minR), accessibleRadius);\r\n                radiusIsFound = true\r\n            }\r\n            return radiusIsFound\r\n        }, false)\r\n    });\r\n    return accessibleRadius\r\n}\r\n\r\nfunction getSizeLabels(series) {\r\n    return series.reduce(function(res, singleSeries) {\r\n        var maxWidth = singleSeries.getVisiblePoints().reduce(function(width, point) {\r\n            var labelBBox = getLabelLayout(point);\r\n            if (labelBBox && labelBBox.width > width) {\r\n                width = labelBBox.width\r\n            }\r\n            return width\r\n        }, 0);\r\n        var rWidth = maxWidth;\r\n        if (maxWidth) {\r\n            res.outerLabelsCount++;\r\n            if (res.outerLabelsCount > 1) {\r\n                maxWidth += _consts.default.pieLabelSpacing\r\n            }\r\n            rWidth += _consts.default.pieLabelSpacing\r\n        }\r\n        res.sizes.push(maxWidth);\r\n        res.rSizes.push(rWidth);\r\n        res.common += maxWidth;\r\n        return res\r\n    }, {\r\n        sizes: [],\r\n        rSizes: [],\r\n        common: 0,\r\n        outerLabelsCount: 0\r\n    })\r\n}\r\n\r\nfunction correctLabelRadius(labelSizes, radius, series, canvas, averageWidthLabels, centerX) {\r\n    var curRadius;\r\n    var i;\r\n    var runningWidth = 0;\r\n    var sizes = labelSizes.sizes;\r\n    var rSizes = labelSizes.rSizes;\r\n    for (i = 0; i < series.length; i++) {\r\n        if (0 === sizes[i]) {\r\n            curRadius && (curRadius += rSizes[i - 1]);\r\n            continue\r\n        }\r\n        curRadius = floor(curRadius ? curRadius + rSizes[i - 1] : radius);\r\n        series[i].correctLabelRadius(curRadius);\r\n        runningWidth += averageWidthLabels || sizes[i];\r\n        rSizes[i] = averageWidthLabels || rSizes[i];\r\n        series[i].setVisibleArea({\r\n            left: floor(centerX - radius - runningWidth),\r\n            right: floor(canvas.width - (centerX + radius + runningWidth)),\r\n            top: canvas.top,\r\n            bottom: canvas.bottom,\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        })\r\n    }\r\n}\r\n\r\nfunction getLengthFromCenter(x, y, paneCenterX, paneCenterY) {\r\n    return sqrt((x - paneCenterX) * (x - paneCenterX) + (y - paneCenterY) * (y - paneCenterY))\r\n}\r\n\r\nfunction getInnerRadius(series) {\r\n    var innerRadius;\r\n    if (\"pie\" === series.type) {\r\n        innerRadius = 0\r\n    } else {\r\n        innerRadius = (0, _type.isNumeric)(series.innerRadius) ? Number(series.innerRadius) : .5;\r\n        innerRadius = innerRadius < .2 ? .2 : innerRadius;\r\n        innerRadius = innerRadius > .8 ? .8 : innerRadius\r\n    }\r\n    return innerRadius\r\n}\r\n\r\nfunction LayoutManager() {}\r\n\r\nfunction getAverageLabelWidth(centerX, radius, canvas, sizeLabels) {\r\n    return (centerX - radius - RADIAL_LABEL_INDENT - canvas.left) / sizeLabels.outerLabelsCount\r\n}\r\n\r\nfunction getFullRadiusWithLabels(centerX, canvas, sizeLabels) {\r\n    return centerX - canvas.left - (sizeLabels.outerLabelsCount > 0 ? sizeLabels.common + RADIAL_LABEL_INDENT : 0)\r\n}\r\n\r\nfunction correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY) {\r\n    var sizeLabels = getSizeLabels(series);\r\n    var averageWidthLabels;\r\n    var fullRadiusWithLabels = getFullRadiusWithLabels(paneCenterX, canvas, sizeLabels);\r\n    if (fullRadiusWithLabels < minR) {\r\n        availableRadius = minR;\r\n        averageWidthLabels = getAverageLabelWidth(paneCenterX, availableRadius, canvas, sizeLabels)\r\n    } else {\r\n        availableRadius = _min(getPieRadius(series, paneCenterX, paneCenterY, availableRadius, minR), fullRadiusWithLabels)\r\n    }\r\n    correctLabelRadius(sizeLabels, availableRadius + RADIAL_LABEL_INDENT, series, canvas, averageWidthLabels, paneCenterX);\r\n    return availableRadius\r\n}\r\n\r\nfunction toLayoutElementCoords(canvas) {\r\n    return new _layout_element.WrapperLayoutElement(null, {\r\n        x: canvas.left,\r\n        y: canvas.top,\r\n        width: canvas.width - canvas.left - canvas.right,\r\n        height: canvas.height - canvas.top - canvas.bottom\r\n    })\r\n}\r\nLayoutManager.prototype = {\r\n    constructor: LayoutManager,\r\n    setOptions: function(options) {\r\n        this._options = options\r\n    },\r\n    applyPieChartSeriesLayout: function(canvas, series, hideLayoutLabels) {\r\n        var paneSpaceHeight = canvas.height - canvas.top - canvas.bottom;\r\n        var paneSpaceWidth = canvas.width - canvas.left - canvas.right;\r\n        var paneCenterX = paneSpaceWidth / 2 + canvas.left;\r\n        var paneCenterY = paneSpaceHeight / 2 + canvas.top;\r\n        var piePercentage = this._options.piePercentage;\r\n        var availableRadius;\r\n        var minR;\r\n        if ((0, _type.isNumeric)(piePercentage)) {\r\n            availableRadius = minR = piePercentage * _min(canvas.height, canvas.width) / 2\r\n        } else {\r\n            availableRadius = _min(paneSpaceWidth, paneSpaceHeight) / 2;\r\n            minR = this._options.minPiePercentage * availableRadius\r\n        }\r\n        if (!hideLayoutLabels) {\r\n            availableRadius = correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY)\r\n        }\r\n        return {\r\n            centerX: floor(paneCenterX),\r\n            centerY: floor(paneCenterY),\r\n            radiusInner: floor(availableRadius * getInnerRadius(series[0])),\r\n            radiusOuter: floor(availableRadius)\r\n        }\r\n    },\r\n    applyEqualPieChartLayout: function(series, layout) {\r\n        var radius = layout.radius;\r\n        return {\r\n            centerX: floor(layout.x),\r\n            centerY: floor(layout.y),\r\n            radiusInner: floor(radius * getInnerRadius(series[0])),\r\n            radiusOuter: floor(radius)\r\n        }\r\n    },\r\n    correctPieLabelRadius: function(series, layout, canvas) {\r\n        var sizeLabels = getSizeLabels(series);\r\n        var averageWidthLabels;\r\n        var radius = layout.radiusOuter + RADIAL_LABEL_INDENT;\r\n        var availableLabelWidth = layout.centerX - canvas.left - radius;\r\n        if (sizeLabels.common + RADIAL_LABEL_INDENT > availableLabelWidth) {\r\n            averageWidthLabels = getAverageLabelWidth(layout.centerX, layout.radiusOuter, canvas, sizeLabels)\r\n        }\r\n        correctLabelRadius(sizeLabels, radius, series, canvas, averageWidthLabels, layout.centerX)\r\n    },\r\n    needMoreSpaceForPanesCanvas: function(panes, rotated, fixedSizeCallback) {\r\n        var options = this._options;\r\n        var width = options.width;\r\n        var height = options.height;\r\n        var piePercentage = options.piePercentage;\r\n        var percentageIsValid = (0, _type.isNumeric)(piePercentage);\r\n        var needHorizontalSpace = 0;\r\n        var needVerticalSpace = 0;\r\n        panes.forEach(function(pane) {\r\n            var paneCanvas = pane.canvas;\r\n            var minSize = percentageIsValid ? _min(paneCanvas.width, paneCanvas.height) * piePercentage : void 0;\r\n            var paneSized = fixedSizeCallback ? fixedSizeCallback(pane) : {\r\n                width: false,\r\n                height: false\r\n            };\r\n            var needPaneHorizontalSpace = !paneSized.width ? (percentageIsValid ? minSize : width) - (paneCanvas.width - paneCanvas.left - paneCanvas.right) : 0;\r\n            var needPaneVerticalSpace = !paneSized.height ? (percentageIsValid ? minSize : height) - (paneCanvas.height - paneCanvas.top - paneCanvas.bottom) : 0;\r\n            if (rotated) {\r\n                needHorizontalSpace += needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0;\r\n                needVerticalSpace = _max(needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0, needVerticalSpace)\r\n            } else {\r\n                needHorizontalSpace = _max(needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0, needHorizontalSpace);\r\n                needVerticalSpace += needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0\r\n            }\r\n        });\r\n        return needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n            width: needHorizontalSpace,\r\n            height: needVerticalSpace\r\n        } : false\r\n    },\r\n    layoutInsideLegend: function(legend, canvas) {\r\n        var inverseAlign = {\r\n            left: \"right\",\r\n            right: \"left\",\r\n            top: \"bottom\",\r\n            bottom: \"top\",\r\n            center: \"center\"\r\n        };\r\n        var layoutOptions = legend.getLayoutOptions();\r\n        if (!layoutOptions) {\r\n            return\r\n        }\r\n        var position = layoutOptions.position;\r\n        var cutSide = layoutOptions.cutSide;\r\n        var my = {\r\n            horizontal: position.horizontal,\r\n            vertical: position.vertical\r\n        };\r\n        canvas[layoutOptions.cutLayoutSide] += \"horizontal\" === layoutOptions.cutSide ? layoutOptions.width : layoutOptions.height;\r\n        my[cutSide] = inverseAlign[my[cutSide]];\r\n        legend.position({\r\n            of: toLayoutElementCoords(canvas),\r\n            my: my,\r\n            at: position\r\n        })\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}