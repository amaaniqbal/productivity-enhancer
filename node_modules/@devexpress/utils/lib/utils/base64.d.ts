export declare enum Base64MimeType {
	Unknown = 0,
	OpenXml = 1,
	Rtf = 2,
	PlainText = 3,
	Docm = 4
}
export declare const OpenXmlMimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
export declare const RtfMimeType = "application/rtf";
export declare const PlainTextMimeType = "text/plain";
export declare const DocmMimeType = "application/vnd.ms-word.document.macroEnabled.12";
export declare class Base64Utils {
	private static mimeTypesMap;
	static dataUrl: RegExp;
	static normalizeToDataUrl(base64: string, mimeType: string): string;
	static prependByDataUrl(base64: string, mimeType: string): string;
	static checkPrependDataUrl(base64: string): boolean;
	static deleteDataUrlPrefix(base64DataUrl: string): string;
	static getUint8Array(base64: string): Uint8Array;
	static fromArrayBuffer(buffer: ArrayBuffer): string;
	static getFileFromBase64(base64: string, fileName?: string, options?: FilePropertyBag): File;
	static getMimeTypeAsString(base64: string): string | null;
	static getKnownMimeType(base64: string): Base64MimeType;
	static fromBlobAsArrayBuffer(blob: Blob, callback: (base64: string) => void): void;
	static fromBlobAsDataUrl(blob: Blob, callback: (base64: string) => void): void;
}
//# sourceMappingURL=base64.d.ts.map
